{"version":3,"sources":["webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-context.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-ref.js","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/knative-plugin/src/utils/usePodsForRevisions.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewNode.tsx","webpack:///./packages/dev-console/src/utils/useAddActionExtensions.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/console-fetch.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sModel.js","webpack:///./packages/helm-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/list-view/cells/TypedResourceBadgeCell.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/coreSelectors.js","webpack:///./public/components/overview/OverviewListPage.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/actions/core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/console-fetch-utils.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/k8s/actions/k8s.js","webpack:///./packages/dev-console/src/utils/add-page-utils.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-utils.js","webpack:///./packages/topology/src/components/side-bar/TopologyEdgeResourcesPanel.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-utils.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/storeHandler.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/index.js","webpack:///./packages/dev-console/src/actions/add-resources.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-resource.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/error/custom-error.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sModels.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sWatchResource.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/k8s-watcher.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useDeepCompareMemoize.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useModelsLoaded.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sWatchResources.js","webpack:///./packages/topology/src/components/list-view/list-view-utils.tsx","webpack:///./packages/topology/src/components/list-view/cells/GroupResourcesCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/index.ts","webpack:///./packages/topology/src/components/list-view/cells/CpuCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/MemoryCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/StatusCell.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/configSetup.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/actions/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/error/http-error.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/ws-factory.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/k8s/reducers/k8sSelector.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/usePrevious.js","webpack:///./packages/topology/src/components/quick-search/TopologyQuickSearch.tsx","webpack:///./packages/topology/src/components/quick-search/topology-quick-search-utils.tsx","webpack:///./packages/topology/src/components/quick-search/TopologyQuickSearchButton.tsx","webpack:///./packages/dev-console/src/components/resource-quota/ResourceQuotaAlert.tsx","webpack:///./packages/topology/src/components/utils/checkResourceQuota.ts","webpack:///./packages/topology/src/components/export-app/ExportApplicationModal.tsx","webpack:///./packages/topology/src/utils/export-app-utils.ts","webpack:///./packages/topology/src/components/export-app/ExportViewLogButton.tsx","webpack:///./packages/dev-console/src/utils/useAddToProjectAccess.ts","webpack:///./public/components/overview/metricUtils.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewKindGroup.tsx","webpack:///./packages/topology/src/components/list-view/cells/AlertsCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/MetricsTooltip.tsx","webpack:///./packages/topology/src/components/page/TopologyPage.tsx","webpack:///./packages/topology/src/user-preferences/usePreferredTopologyView.ts","webpack:///./packages/topology/src/components/page/TopologyDataRenderer.tsx","webpack:///./packages/topology/src/components/page/DroppableTopologyComponent.tsx","webpack:///./packages/topology/src/components/page/TopologyView.tsx","webpack:///./packages/topology/src/data-transforms/updateModelFromFilters.ts","webpack:///./packages/topology/src/filters/TopologyFilterBar.tsx","webpack:///./packages/console-app/src/components/pdb/PDBAlert.tsx","webpack:///./packages/topology/src/components/export-app/ExportApplication.tsx","webpack:///./packages/topology/src/filters/FilterDropdown.tsx","webpack:///./packages/topology/src/filters/KindFilterDropdown.tsx","webpack:///./packages/topology/src/filters/NameLabelFilterDropdown.tsx","webpack:///./packages/topology/src/components/list-view/TopologyListView.tsx","webpack:///./packages/topology/src/components/utils/subscribeOverviewAlerts.ts","webpack:///./packages/topology/src/components/utils/subscribeOverviewMetrics.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewAppGroup.tsx","webpack:///./packages/topology/src/components/list-view/ListElementWrapper.tsx","webpack:///./packages/topology/src/components/list-view/listViewComponentFactory.ts","webpack:///./packages/helm-plugin/src/topology/listView/HelmReleaseListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/knativeListViewComponentFactory.ts","webpack:///./packages/knative-plugin/src/topology/listView/KnativeRevisionListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/KnativeServiceListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/NoStatusListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/SinkUriListViewNode.tsx","webpack:///./packages/topology/src/operators/listView/OperatorGroupListViewNode.tsx","webpack:///./packages/topology/src/components/list-view/kubevirtListViewComponentFactory.ts","webpack:///./packages/topology/src/components/list-view/VMListViewNode.tsx","webpack:///./packages/topology/src/utils/usePodsForVM.ts","webpack:///./packages/topology/src/utils/kubevirt-models.ts","webpack:///./packages/topology/src/utils/kubevirt-utils.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewUnassignedGroup.tsx","webpack:///./packages/topology/src/components/side-bar/SelectedEntityDetails.tsx","webpack:///./packages/topology/src/components/side-bar/TopologyEdgePanel.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarContent.tsx","webpack:///./packages/topology/src/components/side-bar/components/SideBarBody.tsx","webpack:///./packages/topology/src/components/side-bar/providers/SideBarTabLoader.tsx","webpack:///./packages/topology/src/components/side-bar/providers/SideBarTabHookResolver.tsx","webpack:///./packages/topology/src/components/side-bar/DefaultResourceSideBar.tsx","webpack:///./packages/topology/src/components/side-bar/providers/useDetailsTab.tsx","webpack:///./packages/topology/src/components/side-bar/providers/useDetailsTabSection.tsx","webpack:///./packages/topology/src/components/side-bar/components/SideBarHeading.tsx","webpack:///./packages/topology/src/actions/TopologyActions.tsx","webpack:///./packages/topology/src/components/side-bar/providers/useDetailsResourceLink.tsx","webpack:///./packages/topology/src/components/side-bar/components/SideBarAlerts.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBar.tsx","webpack:///./packages/topology/src/components/page/LimitExceededState.tsx","webpack:///./packages/topology/src/components/page/TopologyEmptyState.tsx","webpack:///./packages/topology/src/components/page/TopologyPageToolbar.tsx","webpack:///./packages/topology/src/components/graph-view/TopologyShortcuts.tsx"],"names":["useTopologyWorkloadActionProvider","element","resource","actions","getType","k8sKind","undefined","useTopologyVisualConnectorActionProvider","getSource","kindObj","inFlight","ModifyCount","AddStorage","common","factory","menuActions","kind","obj","labelKey","callback","dc","req","apiVersion","name","metadata","latest","force","opts","ns","namespace","path","rollout","catch","err","error","message","accessReview","group","apiGroup","plural","subresource","verb","spec","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","status","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","t","timeout","updatePeriod","interval","triggers","join","className","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","variant","title","href","deprecatedDeploymentConfig","text","additionalClassName","DeploymentConfigsDetails","model","key","uid","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","props","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","to","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","creationTimestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","labels","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","FileUploadContext","fileUpload","setFileUpload","extensions","FileUploadContextProvider","Provider","useValuesFileUploadContext","fileUploadExtensions","resolved","toastContext","file","setFile","fileExtensions","map","e","properties","ext","toLowerCase","f","length","requiredFileExtension","handler","addToast","warning","content","fileName","toString","dismissible","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","getRoutesURL","routes","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","groupResources","groupResource","nextResource","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","labelPluralKey","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","size","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","editAccess","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","radius","ariaLabel","external","rest","decorator","showBackground","rel","stopPropagation","role","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","onSelect","controlled","getDataFromAdapter","resolvedExtensions","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","setLoaded","setLoadError","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","expand","DEFAULT_SUPPORTED_FILTER_IDS","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","placeholder","dataSelector","getNamespacedDynamicModelFactories","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","dataModelFactory","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","NodeType","EdgeType","KameletType","dispatch","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","operator","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","customData","WorkloadTableHeader","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","csvName","innerRadius","icon","hoverRef","onShowCreateConnector","onContextMenu","contextMenuOpen","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","hover","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","filtered","showLabel","kindData","detailsLevel","getDetailsLevel","showDetails","low","badgeClassName","kindStr","kindColor","truncateLength","scaleNode","high","badge","kindAbbr","badgeColor","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","bgClassName","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","rx","ry","iconClass","TOP_MARGIN","top","triggerRef","textAnchor","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","getTargetEdges","highlightNode","monitor","getOperation","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","collect","dragging","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","accept","canDrop","dropTarget","isOver","edgeDragging","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","dropHint","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","resourceTypes","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","subTitle","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","getAppliedFilters","useFilterContextValues","appliedFilters","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","getTopologyFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","CreateAProjectButton","openProjectModal","canCreateNs","CAN_CREATE_NS","CAN_CREATE_PROJECT","onCreate","setActiveNamespace","createNamespaceOrProjectModal","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","link","left","iconOnly","noTooltip","workloadData","cheEnabled","editUrl","repoIcon","right","showMonitoringOverview","firingAlerts","severityAlertType","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","getReference","getReferenceForModel","getGroupVersionKindForReference","referenceSplit","transformGroupVersionKindToReference","listComponent","listPageProps","filterLabel","textFilter","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","dragRef","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","open","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","sbr","hasError","ERROR","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","dragNodeRef","needsHintRef","needsHint","groupClasses","StatusSeverities","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","animationDuration","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","routeDecoratorIcon","routeURL","fillRule","stroke","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","fieldId","_","toggle","toggleRef","isFullWidth","onOpenChange","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","usePodsForRevisions","revisionIds","replicaSets","updateResults","revisionsPods","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","lastUpdated","spin","BuildOverviewList","canStartBuild","inline","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","location","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","onSelectTab","badgeCell","labelCell","alertsCell","memoryCell","cpuCell","statusCell","groupResourcesCell","hideAlerts","noPods","alertIndicator","onAlertClick","cells","dataListCells","kindLabel","isHidden","selectedDataListItemId","onSelectDataListItem","_event","getDisabledAddActions","SERVER_FLAGS","addPage","disabledActions","useAddActionExtensions","allAddActionExtensions","allAddActionsDisabled","addActionExtension","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","dndDropRef","badgeTextColor","badgeBorderColor","badgeLocation","labelIconClass","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","dragLabelRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","paddingX","paddingY","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","groups","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","rejected","done","apply","consoleFetchCommon","allOptions","fetchPromise","appFetch","timeoutPromise","race","consoleFetch","dataPromise","isPlainText","parseData","_a","warningData","getStore","handleAdmissionWebhookWarning","consoleFetchJSON","consoleFetchSendJSON","delete","put","getK8sModel","k8s","k8sGroupVersionKind","useK8sModel","TYPE_HELM_RELEASE","TYPE_HELM_WORKLOAD","HELM_GROUP_WIDTH","HELM_GROUP_HEIGHT","HELM_GROUP_PADDING","typeIcon","imageClass","itemIcon","iconType","alt","src","getImpersonate","sdkCore","impersonate","LAST_TOPOLOGY_WORKLOADS_VIEW_LOCAL_STORAGE_KEY","OverviewListPage","activeViewStorageKey","defaultViewType","ActionType","setAdmissionWebhookWarning","SetAdmissionWebhookWarning","getConsoleRequestHeaders","store","getState","cookie","updateListFromWS","k8sObjects","UpdateListFromWS","Loaded","bulkAddToList","BulkAddToList","startWatchK8sObject","StartWatchK8sObject","startWatchK8sList","query","StartWatchK8sList","modifyObject","ModifyObject","stopWatchK8s","StopWatchK8s","errored","Errored","partialObjectMetadataListHeader","partialObjectMetadataHeader","WS","POLLs","REF_COUNTS","stopK8sWatch","ws","destroy","poller","clearInterval","watchK8sList","k8skind","extraAction","partialMetadata","incrementallyLoad","continueToken","requestOptions","assign","continue","resourceVersion","pollAndWatch","subprotocols","onclose","code","ondestroy","timedOut","onbulkmessage","watchK8sObject","k8sModel","watch","o","setInterval","fieldSelector","object","getAddGroups","addActions","addActionGroups","initialActionGroups","actionGroup","actionGroups","currAction","actionGroupsForCurrentItem","groupId","navigateTo","resolvedHref","filterNamespaceScopedUrl","resourceURL","u","isLegacy","getK8sAPIPath","getK8sResourcePath","toArray","requirementToString","requirement","selectorToString","requirements","matchExpressions","isOldFormat","me","toRequirements","k8sWatch","wsOptions","wsOptionsUpdated","reconnect","jsonParse","bufferFlushInterval","bufferMax","encodedSelector","dataTestID","dataTest","getRequiredFileUploadExtension","ex","supportedFileTypes","lastIndexOf","getFileType","isFileSupported","storeHandler","setStore","storeData","allImportResourceAccess","allCatalogImageResourceAccess","resolvedURLWithParams","unresolvedHref","contextSource","allowServiceBinding","resolvedURL","URLSearchParams","append","APPLICATION","CONTEXT_ACTION","payload","indexOf","AddActions","FromGit","accessReviewDisabled","ContainerImage","DevCatalog","DatabaseCatalog","Samples","OperatorBacked","isServiceBindingAllowed","UploadJarFile","CreateServerlessFunction","CreateServerlessFunctionUsingSamples","disabledAddActions","disabledActionsFilter","adapterFunc","func","knownArgs","arg","k8sGet","requestInit","k8sCreate","k8sList","_b","propagationPolicy","jsonData","raw","newVal","listURL","typedItems","CustomError","defineProperty","enumerable","configurable","captureStackTrace","constructor","stack","setPrototypeOf","prototype","useK8sWatchResource","initResource","modelsLoaded","reduxID","resourceK8s","NoModelError","INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL","Symbol","INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL","getReduxData","immutableData","toJSON","getIDAndDispatch","makeQuery","qs","makeReduxID","useDeepCompareMemoize","strinfigy","useModelsLoaded","useK8sWatchResources","initResources","allK8sModels","prevK8sModels","prevResources","k8sModelsRef","modelReference","requiredModels","k8sModels","reduxIDs","idAndDispatch","noModel","reduxIDKeys","resourceK8sSelectorCreator","oldK8s","newK8s","resourceK8sSelector","has","getChildKinds","kindKeys","sortGroupChildren","childKindsMap","CpuCellComponent","metricLabel","byPod","CpuCell","memoryStats","MemoryCellComponent","MemoryCell","StatusCellResourceLink","desired","ready","StatusCellResourceStatus","StatusCell","getUtilsConfig","HttpError","messages","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","426","428","429","431","451","500","501","502","503","504","505","506","510","511","TimeoutError","ms","k8sBasePath","basePath","WSFactory","handlers","bulkmessage","connect","flushCanceler","flushMessageBuffer","connectionAttempt","attempt","that","messageBuffer","createURL","WebSocket","onopen","triggerEvent","evt","onerror","onmessage","msg","fn","h","invokeHandlers","registerHandler","eventData","send","getReduxIdPayload","reduxId","usePrevious","deps","Contents","quickStarts","quickStartsLoaded","catalogService","catalogServiceSample","viewContainer","setIsOpen","quickStartItems","quickSearchProviders","catalogType","getCatalogURL","searchTerm","catalogLinkLabel","catalogExtensions","allItemsLoaded","searchPlaceholder","limitItemCount","catalogId","useTransformedQuickStarts","setActiveQuickStart","prerequisites","description","prerequisite","ResourceQuotaAlert","warningMessageFlag","setWarningMessageFlag","resourceQuotaName","setResourceQuotaName","resourceQuotaKind","setResourceQuotaKind","resourcequotas","appliedclusterresourcequotas","totalRQatQuota","quotaName","quotaKind","totalACRQatQuota","clusterRQName","clusterRQKind","totalResourcesAtQuota","resourceAtQuota","checkQuotaLimit","resourceQuotas","quota","resourcesAtQuota","hard","used","exportApplicationModal","exportResource","toast","setStartTime","errMessage","setErrMessage","exportAppToast","setExportAppToast","completed","createExportCR","exportRes","exportAppToastConfig","info","handleCancel","exportInProgress","justifyContent","createError","onViewLog","handleExportApplication","getExportAppData","createExportResource","getExportResource","killExportResource","jobLoaded","podResource","podLoaded","linkedButton","disabledButton","isAriaDisabled","resourceAttributes","useAddToProjectAccess","activeNamespace","buildConfigsAccess","imageStreamAccess","deploymentConfigAccess","imageStreamImportAccess","secretAccess","routeAccess","serviceAccess","serviceBindingEnabled","createResourceAccess","METRICS_FAILURE_CODES","fetchOverviewMetrics","queries","fetchMonitoringAlerts","groupLabel","childElements","resourceLabel","childNodes","AlertTooltip","severity","isMobile","String","buildConfigsLoaded","rcsLoaded","mostRecentRC","workloadRqAlerts","rqAlert","currentAlerts","previousAlerts","buildConfigAlerts","rollOutAlerts","buildNew","buildPending","buildRunning","buildFailed","buildError","sortedMetrics","keepLines","numRemoved","PageContentsWithStartGuide","viewType","preferredTopologyView","preferredTopologyViewLoaded","topologyLastView","setTopologyLastView","isTopologyLastViewLoaded","topologyViewState","lastOverviewOpen","sessionStorage","onViewChange","newViewType","namespacedPageVariant","light","usePreferredTopologyView","TopologyDataRenderer","skeleton","boxTarget","onDrop","DroppableTopology","FILE","connectObj","connectDropTarget","canDropFile","DroppableTopologyComponent","eventSourceEnabled","onSupportedFiltersChange","supportedFilterIds","onSupportedKindsChange","setViewContainer","onFiltersChange","filteredModel","setFilteredModel","setSelectedEntity","showTopologyAnyway","setShowTopologyAnyway","isQuickSearchOpen","setIsQuickSearchOpen","setIsQuickSearchOpenAndFireEvent","displayFilterExtensions","displayFilterExtensionsResolved","createConnectorsResolved","extensionDecorators","extensionDecoratorsResolved","dynamicDisplayFilterExtensions","dynamicDisplayFilterExtensionsResolved","dynamicCreateConnectors","dynamicCreateConnectorsResolved","dynamicExtensionDecorators","dynamicExtensionDecoratorsResolved","relationshipProvider","topologyDecorators","setTopologyDecorators","supportedFileExtensions","searchParams","labelParams","fileTypes","entity","selEntity","setItem","removeItem","graphData","getCreateConnector","setData","allDecorators","extensionDecorator","quadrant","updateFilters","extFilters","applyDisplayOptions","updatedFilters","nodesLength","viewContent","isSidebarAvailable","topologyViewComponent","isFilled","panelContent","onClose","onShowTopologyAnyway","getApplicationGroupForNode","getNodeKind","isNodeShown","allNodes","shown","parentNode","updateModelFromFilters","displayFilterers","dataModel","appGroupFound","expanded","displayFilterer","labelFilterInput","setLabelFilterInput","kialiLink","isExportApplicationEnabled","clearAllFilters","deleteChipGroup","chips","deleteChip","newLabels","keepItem","categoryName","endOfString","Label","updatedLabels","updateLabelFilter","updateNameFilter","nameFilterInput","bodyContent","align","pdbCount","pdbName","isExportAppAllowed","showExportAppBtn","opened","groupsExpanded","expandFilters","showFilters","isSelectDisabled","selectContent","isChecked","property","hasCheckbox","onToggle","checked","isGrouped","isCheckboxSelectionBadgeHidden","kindFilters","selectedFilterCount","newFilter","setSelected","Name","dropdownItems","handleInputValue","onSuggestionSelect","showSuggestions","textValue","setTextValue","labelPath","autoFocus","TopologyListViewComponent","applicationGroups","unassignedItems","appGroup","showCategory","prevProps","nextProps","listModel","ConnectedTopologyListView","updateMetrics","updateMonitoringAlerts","scrollIntoView","block","getFlattenedItems","flattened","addFlattenedNode","addFlattenedKinds","stopEvent","activeElement","HTMLElement","blur","onKeyDown","nodeName","onEnter","flattenedItems","selectPrevious","selectNext","clearMetricsInterval","clearAlertsInterval","TopologyListView","toJS","subscribeOverviewAlerts","alertsInterval","fetchAlerts","subscribeOverviewMetrics","metricsInterval","fetchMetrics","updatedMetrics","ListElementComponent","ListElementChildren","ListElementWrapper","listViewNodeComponentFactory","knativeComponent","kubevirtComponent","chartIcon","knativeListViewNodeComponentFactory","KnativeRevisionListViewNode","metricStats","KnativeServiceListViewNode","NoStatusListViewNode","SinkUriListViewNode","operatorKind","kubevirtListViewNodeComponentFactory","VMListViewNode","vm","usePodsForVm","vmName","vmRef","replicationControllers","virtualmachineinstances","vmi","instance","visibleReplicationControllers","launcherPod","podRCData","VirtualMachineInstanceModel","findVMIPod","vmUID","podOwnerReferences","podOwnerReference","unassignedContent","isSidebarRenderable","SelectedEntityDetails","connectorTypeToTitleKey","SimpleTabNavWrapper","tabs","selectedTab","selectTabParam","handleClickTab","tabProps","onClickTab","additionalClassNames","tabExtensions","tabSectionExtensions","tabSectionExtensionsResolved","blamedDeprecatedPlugins","renderNullNoop","graphElement","resolvedTabSections","section","tab","tabId","contentElement","hookResult","tabsLoaded","tabContent","tabSectionId","DefaultResourceSideBar","useDetailsTab","useDetailsTabSection","resourceLink","useDetailsResourceLink","resurceLinkExtension","ResolveResourceAlerts","useResourceAlertsContent","setShowAlert","alertConfigs","actionClose","resourceAlertsExtension","contentProvider","sideBarSize","setSideBarSize","sideBarSizeLoaded","handleResizeCallback","isResizable","minSize","defaultSize","onResize","resizable","LimitExceededState","titleText","full","TopologyPageToolbar","showGraphView","allImportAccess","viewChangeTooltipContent","maxWidth","getTopologyShortcuts","rightClick","click","ctrl","keyName","dragNdrop"],"mappings":"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","file":"overview-list-page-chunk-c82dd8bb8a7ea4259221.min.js","sourcesContent":["export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","import * as React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { FileUpload, isFileUpload, useResolvedExtensions } from '@console/dynamic-plugin-sdk';\nimport { useToast } from '@console/shared/src/components/toast';\nimport { useActiveNamespace } from '@console/shared/src/hooks/useActiveNamespace';\nimport { getRequiredFileUploadExtension } from './file-upload-utils';\n\nexport type FileUploadContextType = {\n  extensions: string[];\n  fileUpload: File;\n  setFileUpload: (file: File) => void;\n};\n\nexport const FileUploadContext = React.createContext<FileUploadContextType>({\n  fileUpload: undefined,\n  setFileUpload: () => {},\n  extensions: [],\n});\n\nexport const FileUploadContextProvider = FileUploadContext.Provider;\n\nexport const useValuesFileUploadContext = (): FileUploadContextType => {\n  const { t } = useTranslation();\n  const [fileUploadExtensions, resolved] = useResolvedExtensions<FileUpload>(isFileUpload);\n  const toastContext = useToast();\n  const [namespace] = useActiveNamespace();\n  const [file, setFile] = React.useState<File>(undefined);\n  const fileExtensions = React.useMemo(\n    () =>\n      resolved\n        ? _.flatten(fileUploadExtensions.map((e) => e.properties.fileExtensions)).map((ext) =>\n            ext.toLowerCase(),\n          )\n        : [],\n    [fileUploadExtensions, resolved],\n  );\n\n  const setFileUpload = React.useCallback(\n    (f: File): void => {\n      if (!f) {\n        setFile(undefined);\n      } else if (fileExtensions.length > 0) {\n        const requiredFileExtension = getRequiredFileUploadExtension(fileUploadExtensions, f.name);\n        if (requiredFileExtension) {\n          setFile(f);\n          requiredFileExtension.properties.handler(f, namespace);\n        } else {\n          toastContext.addToast({\n            variant: AlertVariant.warning,\n            title: t('console-app~Incompatible file type'),\n            content: t(\n              'console-app~{{fileName}} cannot be uploaded. Only {{fileExtensions}} files are supported currently. Try another file.',\n              {\n                fileName: f.name,\n                fileExtensions: fileExtensions.toString(),\n              },\n            ),\n            timeout: true,\n            dismissible: true,\n          });\n        }\n      }\n    },\n    [setFile, fileExtensions, t, namespace, toastContext, fileUploadExtensions],\n  );\n\n  return {\n    fileUpload: file,\n    setFileUpload,\n    extensions: fileExtensions,\n  };\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind Pass K8sGroupVersionKind which will have group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind.group Pass group of k8s resource or model.\n * @param K8sGroupVersionKind.version Pass version of k8s resource or model.\n * @param K8sGroupVersionKind.kind Pass kind of k8s resource or model.\n * @returns The reference for any k8s resource i.e `group~version~kind`.\n * If the group will not be present then \"core\" will be returned as part of the group in reference.\n */\nexport const getReference = ({ group, version, kind, }) => [group || 'core', version, kind].join('~');\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * @see getGroupVersionKindForModel\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s model.\n * @param model k8s model\n * @returns The reference for model i.e `group~version~kind`.\n */\nexport const getReferenceForModel = (model) => getReference({ group: model.apiGroup, version: model.apiVersion, kind: model.kind });\n/**\n * Provides `apiVersion` for a Kubernetes model.\n * @param model Kubernetes model\n * @returns The apiVersion for the model i.e `group/version`.\n * */\nexport const getAPIVersionForModel = (model) => !(model === null || model === void 0 ? void 0 : model.apiGroup) ? model.apiVersion : `${model.apiGroup}/${model.apiVersion}`;\n/**\n * Provides a group, version, and kind for a resource.\n * @param resource Kubernetes resource\n * @returns The group, version, kind for the provided resource.\n * If the resource does not have an API group, the group `core` is returned.\n * If the resource has an invalid apiVersion then it'll throw Error.\n * */\nexport const getGroupVersionKindForResource = (resource) => {\n    const apiVersion = resource === null || resource === void 0 ? void 0 : resource.apiVersion;\n    const kind = resource === null || resource === void 0 ? void 0 : resource.kind;\n    const apiVersionSplit = apiVersion === null || apiVersion === void 0 ? void 0 : apiVersion.split('/');\n    const apiVersionSplitLen = apiVersionSplit === null || apiVersionSplit === void 0 ? void 0 : apiVersionSplit.length;\n    if (apiVersionSplitLen > 2)\n        throw new Error('Provided resource has invalid apiVersion.');\n    return !apiVersion || !kind\n        ? undefined\n        : Object.assign(Object.assign({}, (apiVersionSplitLen === 2 && {\n            group: apiVersionSplit[0],\n        })), { version: apiVersionSplitLen === 2 ? apiVersionSplit[1] : resource === null || resource === void 0 ? void 0 : resource.apiVersion, kind });\n};\n/**\n * Provides a group, version, and kind for a k8s model.\n * @param model Kubernetes model\n * @returns The group, version, kind for the provided model.\n * If the model does not have an apiGroup, group `core` will be returned.\n * */\nexport const getGroupVersionKindForModel = ({ apiGroup, apiVersion: version, kind, }) => (Object.assign(Object.assign({}, (apiGroup && { group: apiGroup })), { version,\n    kind }));\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a group, version, and kind for a reference.\n * @param reference reference for group, version, kind i.e `group~version~kind`.\n * @returns The group, version, kind for the provided reference.\n * If the group's value is \"core\" it denotes resource does not have an API group.\n * */\nexport const getGroupVersionKindForReference = (reference) => {\n    const referenceSplit = reference.split('~');\n    if (referenceSplit.length > 3)\n        throw new Error('Provided reference is invalid.');\n    const [group, version, kind] = referenceSplit;\n    return {\n        group,\n        version,\n        kind,\n    };\n};\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of K8sGroupVersionKind.\n * @param kind kind can be of type K8sResourceKindReference or K8sGroupVersionKind\n * @returns The reference i.e `group~version~kind`.\n */\nexport const transformGroupVersionKindToReference = (kind) => kind && typeof kind !== 'string' ? getReference(kind) : kind;\n//# sourceMappingURL=k8s-ref.js.map","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { DeploymentModel } from '@console/internal/models';\nimport {\n  apiVersionForModel,\n  K8sResourceCommon,\n  K8sResourceKind,\n} from '@console/internal/module/k8s';\nimport {\n  getReplicaSetsForResource,\n  PodControllerOverviewItem,\n  useDeepCompareMemoize,\n  useDebounceCallback,\n} from '@console/shared';\n\nexport const usePodsForRevisions = (\n  revisionIds: string | string[],\n  namespace: string,\n): { loaded: boolean; loadError: string; pods: PodControllerOverviewItem[] } => {\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const [pods, setPods] = React.useState<PodControllerOverviewItem[]>([]);\n  const revisions = useDeepCompareMemoize(Array.isArray(revisionIds) ? revisionIds : [revisionIds]);\n  const watchedResources = React.useMemo(\n    () => ({\n      deployments: {\n        isList: true,\n        kind: 'Deployment',\n        namespace,\n      },\n      replicaSets: {\n        isList: true,\n        kind: 'ReplicaSet',\n        namespace,\n      },\n      pods: {\n        isList: true,\n        kind: 'Pod',\n        namespace,\n      },\n    }),\n    [namespace],\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceCommon[] }>(watchedResources);\n\n  const updateResults = React.useCallback(\n    (updatedResources) => {\n      const errorKey = Object.keys(updatedResources).find((key) => updatedResources[key].loadError);\n      if (errorKey) {\n        setLoadError(updatedResources[errorKey].loadError?.message);\n        return;\n      }\n      if (\n        Object.keys(updatedResources).length > 0 &&\n        Object.keys(updatedResources).every((key) => updatedResources[key].loaded)\n      ) {\n        const revisionsPods = revisions.reduce((acc, uid) => {\n          const associatedDeployment = _.filter(\n            updatedResources?.deployments?.data,\n            ({ metadata: { ownerReferences } }) =>\n              _.some(ownerReferences, {\n                uid,\n                controller: true,\n              }),\n          );\n          if (associatedDeployment?.[0]) {\n            const depObj: K8sResourceKind = {\n              ...associatedDeployment[0],\n              apiVersion: apiVersionForModel(DeploymentModel),\n              kind: DeploymentModel.kind,\n            };\n            acc.push(...getReplicaSetsForResource(depObj, updatedResources));\n          }\n          return acc;\n        }, []);\n        setLoaded(true);\n        setLoadError(null);\n        setPods(revisionsPods);\n      }\n    },\n    [revisions],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(updateResults, 250);\n\n  React.useEffect(() => {\n    debouncedUpdateResources(resources);\n  }, [debouncedUpdateResources, resources]);\n\n  return useDeepCompareMemoize({ loaded, loadError, pods });\n};\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import * as React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListCell,\n  DataListContent,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport { modelFor } from '@console/internal/module/k8s';\nimport {\n  getSeverityAlertType,\n  AlertSeverityIcon,\n  getFiringAlerts,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport { useSearchFilter } from '../../filters';\nimport { getResource, getResourceKind } from '../../utils/topology-utils';\nimport {\n  AlertsCell,\n  GroupResourcesCell,\n  CpuCell,\n  MemoryCell,\n  StatusCell,\n  TypedResourceBadgeCell,\n} from './cells';\n\ntype DispatchProps = {\n  onSelectTab?: (name: string) => void;\n};\n\ntype TopologyListViewNodeProps = {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n  badgeCell?: React.ReactNode;\n  labelCell?: React.ReactNode;\n  alertsCell?: React.ReactNode;\n  memoryCell?: React.ReactNode;\n  cpuCell?: React.ReactNode;\n  statusCell?: React.ReactNode;\n  groupResourcesCell?: React.ReactNode;\n  hideAlerts?: boolean;\n  noPods?: boolean;\n};\n\nconst TopologyListViewNode: React.FC<TopologyListViewNodeProps & DispatchProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  onSelectTab,\n  badgeCell,\n  labelCell,\n  alertsCell,\n  memoryCell,\n  cpuCell,\n  statusCell,\n  groupResourcesCell,\n  hideAlerts = false,\n  noPods = false,\n  children,\n}) => {\n  const { t } = useTranslation();\n  const [filtered] = useSearchFilter(item.getLabel(), getResource(item)?.metadata?.labels);\n  if (!item.isVisible) {\n    return null;\n  }\n  const kind = getResourceKind(item);\n\n  let alertIndicator = null;\n  const alerts = getFiringAlerts(item.getData().data?.monitoringAlerts ?? []);\n  if (alerts?.length > 0) {\n    const onAlertClick = () => {\n      onSelect([item.getId()]);\n      onSelectTab('Observe');\n    };\n    const severityAlertType = getSeverityAlertType(alerts);\n    alertIndicator = shouldHideMonitoringAlertDecorator(severityAlertType) ? null : (\n      <Tooltip\n        key=\"monitoringAlert\"\n        content={t('topology~Monitoring alert')}\n        position={TooltipPosition.right}\n      >\n        <Button\n          variant=\"plain\"\n          className=\"odc-topology-list-view__alert-button\"\n          onClick={onAlertClick}\n        >\n          <AlertSeverityIcon severityAlertType={severityAlertType} />\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  const cells = [];\n  cells.push(\n    labelCell || (\n      <DataListCell\n        className=\"odc-topology-list-view__label-cell\"\n        key=\"label\"\n        id={`${item.getId()}_label`}\n      >\n        {badgeCell || <TypedResourceBadgeCell key=\"type-icon\" kind={kind} />}\n        <span data-test-id={item.getLabel()}>{item.getLabel()}</span>\n        {alertIndicator}\n      </DataListCell>\n    ),\n  );\n  if (item.isGroup()) {\n    if (item.isCollapsed()) {\n      cells.push(groupResourcesCell || <GroupResourcesCell key=\"resources\" group={item} />);\n    }\n  } else {\n    if (!hideAlerts) {\n      cells.push(alertsCell || <AlertsCell key=\"alerts\" item={item} />);\n    }\n    if (!noPods) {\n      if (!selectedIds[0]) {\n        cells.push(memoryCell || <MemoryCell key=\"memory\" item={item} />);\n        cells.push(cpuCell || <CpuCell key=\"cpu\" item={item} />);\n      }\n      cells.push(statusCell || <StatusCell key=\"status\" item={item} />);\n    }\n  }\n\n  const className = classNames('odc-topology-list-view__item-row', { 'is-filtered': filtered });\n  return (\n    <DataListItem\n      key={item.getId()}\n      id={item.getId()}\n      aria-labelledby={`${item.getId()}_label`}\n      isExpanded={children !== undefined}\n      data-test={`row-${item.getLabel()}`}\n    >\n      <DataListItemRow className={className}>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n      {children ? (\n        <DataListContent\n          className=\"odc-topology-list-view__group-children\"\n          aria-label={t('topology~{{kindLabel}} {{label}}', {\n            label: item.getLabel(),\n            kindLabel: modelFor(kind)?.label ?? kind,\n          })}\n          id={`${item.getId()}-${item.getLabel()}`}\n          isHidden={false}\n        >\n          <DataList\n            aria-label={t('topology~{{label}} sub-resources', { label: item.getLabel() })}\n            selectedDataListItemId={selectedIds[0]}\n            onSelectDataListItem={(_event, id) => onSelect(selectedIds[0] === id ? [] : [id])}\n          >\n            {children}\n          </DataList>\n        </DataListContent>\n      ) : null}\n    </DataListItem>\n  );\n};\n\nconst TopologyListViewNodeDispatchToProps = (dispatch): DispatchProps => ({\n  onSelectTab: (name) => dispatch(selectOverviewDetailsTab(name)),\n});\n\nexport default connect<{}, DispatchProps, TopologyListViewNodeProps>(\n  null,\n  TopologyListViewNodeDispatchToProps,\n)(observer(TopologyListViewNode));\n","import {\n  ResolvedExtension,\n  useResolvedExtensions,\n  AddAction,\n  isAddAction,\n} from '@console/dynamic-plugin-sdk';\n\ninterface AddPage {\n  disabledActions?: string[];\n}\n\nexport const getDisabledAddActions = (): string[] | undefined => {\n  if (window.SERVER_FLAGS.addPage) {\n    const addPage: AddPage = JSON.parse(window.SERVER_FLAGS.addPage);\n    const { disabledActions } = addPage;\n    return disabledActions;\n  }\n  return undefined;\n};\n\nexport const useAddActionExtensions = (): [ResolvedExtension<AddAction>[], boolean, boolean] => {\n  const [allAddActionExtensions, resolved] = useResolvedExtensions<AddAction>(isAddAction);\n  const disabledActions = getDisabledAddActions();\n  const allAddActionsDisabled = disabledActions?.length === allAddActionExtensions?.length;\n\n  if (allAddActionExtensions && disabledActions && disabledActions.length > 0) {\n    const filteredAddActionExtensions = allAddActionExtensions.filter(\n      (addActionExtension) => !disabledActions.includes(addActionExtension.properties.id),\n    );\n    return [filteredAddActionExtensions, resolved, allAddActionsDisabled];\n  }\n\n  return [allAddActionExtensions, resolved, allAddActionsDisabled];\n};\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { getUtilsConfig } from '../../app/configSetup';\nimport { setAdmissionWebhookWarning } from '../../app/core/actions';\nimport storeHandler from '../../app/storeHandler';\nimport { TimeoutError } from '../error/http-error';\nimport { getConsoleRequestHeaders } from './console-fetch-utils';\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * @param url The URL to fetch\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response.\n */\nexport const consoleFetch = (url, options = {}, timeout = 60000) => __awaiter(void 0, void 0, void 0, function* () {\n    const fetchPromise = getUtilsConfig().appFetch(url, options);\n    if (timeout <= 0) {\n        return fetchPromise;\n    }\n    const timeoutPromise = new Promise((resolve, reject) => {\n        setTimeout(() => reject(new TimeoutError(url, timeout)), timeout);\n    });\n    return Promise.race([fetchPromise, timeoutPromise]);\n});\nconst parseData = (response) => __awaiter(void 0, void 0, void 0, function* () {\n    const text = yield response.text();\n    const isPlainText = response.headers.get('Content-Type') === 'text/plain';\n    if (!text) {\n        return isPlainText ? '' : {};\n    }\n    return isPlainText || !response.ok ? text : JSON.parse(text);\n});\nconst handleAdmissionWebhookWarning = (warning, kind, name) => {\n    const store = storeHandler.getStore();\n    const id = `${kind}_${name}_${warning}`;\n    const warningData = { kind, name, warning };\n    store.dispatch(setAdmissionWebhookWarning(id, warningData));\n};\nconst consoleFetchCommon = (url, method = 'GET', options = {}, timeout) => __awaiter(void 0, void 0, void 0, function* () {\n    const headers = getConsoleRequestHeaders();\n    // Pass headers last to let callers to override Accept.\n    const allOptions = _.defaultsDeep({ method }, options, { headers });\n    const response = yield consoleFetch(url, allOptions, timeout);\n    const dataPromise = parseData(response);\n    const warning = response.headers.get('Warning');\n    // If the response has a warning header, store it in the redux store.\n    if (response.ok && warning && method !== 'GET') {\n        // Do nothing on error since this is a side-effect. Caller will handle the error.\n        dataPromise\n            .then((data) => { var _a; return handleAdmissionWebhookWarning(warning, data.kind, (_a = data.metadata) === null || _a === void 0 ? void 0 : _a.name); })\n            .catch(() => { });\n    }\n    return dataPromise;\n});\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * It returns the response as a JSON object.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text or JSON object.\n */\nexport const consoleFetchJSON = (url, method = 'GET', options = {}, timeout) => {\n    const allOptions = _.defaultsDeep({}, options, {\n        headers: { Accept: 'application/json' },\n    });\n    return consoleFetchCommon(url, method, allOptions, timeout);\n};\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * It returns the response as a text.\n * Uses `consoleFetch` internally.\n * @param url The URL to fetch\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text or JSON object.\n */\nexport const consoleFetchText = (url, options = {}, timeout) => {\n    return consoleFetchCommon(url, 'GET', options, timeout);\n};\nconst consoleFetchSendJSON = (url, method, json = null, options = {}, timeout) => {\n    const allOptions = {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': `application/${method === 'PATCH' ? 'json-patch+json' : 'json'};charset=UTF-8`,\n        },\n    };\n    if (json) {\n        allOptions.body = JSON.stringify(json);\n    }\n    return consoleFetchJSON(url, method, _.defaultsDeep(allOptions, options), timeout);\n};\n/**\n * A custom DELETE method of consoleFetchJSON.\n * It sends an optional JSON object as the body of the request and adds extra headers for patch request.\n * @param url The URL to delete the object\n * @param json The JSON to delete the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.delete = (url, json = null, options = {}, timeout) => {\n    return json\n        ? consoleFetchSendJSON(url, 'DELETE', json, options, timeout)\n        : consoleFetchJSON(url, 'DELETE', options, timeout);\n};\n/**\n * A custom POST method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to post the object\n * @param json The JSON to POST the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.post = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'POST', json, options, timeout);\n/**\n * A custom PUT method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to put the object\n * @param json The JSON to PUT the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.put = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'PUT', json, options, timeout);\n/**\n * A custom PATCH method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to patch the object\n * @param json The JSON to PATCH the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.patch = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'PATCH', json, options, timeout);\n//# sourceMappingURL=console-fetch.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { getGroupVersionKindForReference, transformGroupVersionKindToReference } from '../k8s-ref';\nexport const getK8sModel = (k8s, k8sGroupVersionKind) => {\n    var _a;\n    const kindReference = transformGroupVersionKindToReference(k8sGroupVersionKind);\n    return kindReference\n        ? (_a = k8s.getIn(['RESOURCES', 'models', kindReference])) !== null && _a !== void 0 ? _a : k8s.getIn(['RESOURCES', 'models', getGroupVersionKindForReference(kindReference).kind])\n        : undefined;\n};\n/**\n * Hook that retrieves the k8s model for provided K8sGroupVersionKind from redux.\n * @param groupVersionKind group, version, kind of k8s resource `K8sGroupVersionKind` is preferred alternatively can pass reference for group, version, kind which is deprecated i.e `group~version~kind` `K8sResourceKindReference`.\n * @returns An array with the first item as k8s model and second item as inFlight status\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const [model, inFlight] = useK8sModel({ group: 'app'; version: 'v1'; kind: 'Deployment' });\n *   return ...\n * }\n * ```\n */\nexport const useK8sModel = (k8sGroupVersionKind) => [\n    useSelector(({ k8s }) => getK8sModel(k8s, k8sGroupVersionKind)),\n    useSelector(({ k8s }) => { var _a; return (_a = k8s.getIn(['RESOURCES', 'inFlight'])) !== null && _a !== void 0 ? _a : false; }),\n];\n//# sourceMappingURL=useK8sModel.js.map","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_HELM_RELEASE = 'helm-release';\nexport const TYPE_HELM_WORKLOAD = 'helm-workload';\n\nexport const HELM_GROUP_WIDTH = GROUP_WIDTH;\nexport const HELM_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const HELM_GROUP_PADDING = GROUP_PADDING;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { isValidUrl } from '@console/shared';\n\ninterface TypedResourceBadgeCellProps {\n  kind: string;\n  imageClass?: string;\n  typeIconClass?: string;\n  typeIcon?: React.ReactNode;\n}\n\nconst TypedResourceBadgeCell: React.FC<TypedResourceBadgeCellProps> = ({\n  typeIconClass,\n  typeIcon,\n  imageClass,\n  kind,\n}) => {\n  let itemIcon: React.ReactNode;\n  let iconType: React.ReactNode;\n  if (imageClass) {\n    itemIcon = (\n      <image\n        className=\"odc-topology-list-view__resource-icon co-m-resource-icon--md\"\n        xlinkHref={isValidUrl(imageClass) ? imageClass : getImageForIconClass(imageClass)}\n      />\n    );\n  } else {\n    itemIcon = (\n      <ResourceIcon\n        className=\"odc-topology-list-view__resource-icon co-m-resource-icon--md\"\n        kind={kind}\n      />\n    );\n  }\n  if (typeIconClass) {\n    iconType = (\n      <span className=\"odc-topology-list-view__type-icon-bg\">\n        <img\n          className=\"odc-topology-list-view__type-icon\"\n          alt={kind}\n          src={isValidUrl(typeIconClass) ? typeIconClass : getImageForIconClass(typeIconClass)}\n        />\n      </span>\n    );\n  } else if (typeIcon) {\n    iconType = (\n      <span className=\"odc-topology-list-view__type-icon-bg\">\n        <foreignObject className=\"odc-topology-list-view__type-icon\">{typeIcon}</foreignObject>\n      </span>\n    );\n  } else {\n    iconType = null;\n  }\n\n  return (\n    <span className=\"odc-topology-list-view__resource-icon__container\">\n      {itemIcon}\n      {iconType}\n    </span>\n  );\n};\n\nexport default observer(TypedResourceBadgeCell);\n","/**\n * It provides impersonation details from the redux store.\n * @param state the root state\n * @returns The the impersonate state.\n */\nexport const getImpersonate = (state) => state.sdkCore.impersonate;\n/**\n * It provides impersonation details from the redux store as a props object.\n * @param state the root state\n * @returns The the impersonation details props object.\n */\nexport const impersonateStateToProps = (state) => {\n    return { impersonate: getImpersonate(state) };\n};\n/**\n * It provides user details from the redux store.\n * @param state the root state\n * @returns The the user state.\n */\nexport const getUser = (state) => state.sdkCore.user;\n/**\n * It provides admission webhook warning data from the redux store.\n * @param state the root state\n * @returns The the admissionWebhookWarning state.\n */\nexport const getAdmissionWebhookWarnings = (state) => state.sdkCore.admissionWebhookWarnings;\n//# sourceMappingURL=coreSelectors.js.map","import * as React from 'react';\nimport { STORAGE_PREFIX } from '@console/shared';\nimport TopologyPage from '@console/topology/src/components/page/TopologyPage';\nimport { TopologyViewType } from '@console/topology/src/topology-types';\n\nconst LAST_TOPOLOGY_WORKLOADS_VIEW_LOCAL_STORAGE_KEY = `${STORAGE_PREFIX}/last-topology-workloads-view`;\n\nexport const OverviewListPage: React.FC = () => {\n  return (\n    <TopologyPage\n      hideProjects\n      activeViewStorageKey={LAST_TOPOLOGY_WORKLOADS_VIEW_LOCAL_STORAGE_KEY}\n      defaultViewType={TopologyViewType.list}\n    />\n  );\n};\n","import { action } from 'typesafe-actions';\nexport var ActionType;\n(function (ActionType) {\n    ActionType[\"SetUser\"] = \"setUser\";\n    ActionType[\"BeginImpersonate\"] = \"beginImpersonate\";\n    ActionType[\"EndImpersonate\"] = \"endImpersonate\";\n    ActionType[\"SetActiveCluster\"] = \"setActiveCluster\";\n    ActionType[\"SetAdmissionWebhookWarning\"] = \"setAdmissionWebhookWarning\";\n    ActionType[\"RemoveAdmissionWebhookWarning\"] = \"removeAdmissionWebhookWarning\";\n})(ActionType || (ActionType = {}));\nexport const setUser = (userInfo) => action(ActionType.SetUser, { userInfo });\nexport const beginImpersonate = (kind, name, subprotocols) => action(ActionType.BeginImpersonate, { kind, name, subprotocols });\nexport const endImpersonate = () => action(ActionType.EndImpersonate);\nexport const setAdmissionWebhookWarning = (id, warning) => action(ActionType.SetAdmissionWebhookWarning, { id, warning });\nexport const removeAdmissionWebhookWarning = (id) => action(ActionType.RemoveAdmissionWebhookWarning, { id });\nconst coreActions = {\n    setUser,\n    beginImpersonate,\n    endImpersonate,\n    setAdmissionWebhookWarning,\n    removeAdmissionWebhookWarning,\n};\n//# sourceMappingURL=core.js.map","import { getImpersonate } from '../../app/core/reducers';\nimport storeHandler from '../../app/storeHandler';\nexport const getCSRFToken = () => {\n    const cookiePrefix = 'csrf-token=';\n    return (document &&\n        document.cookie &&\n        document.cookie\n            .split(';')\n            .map((c) => c.trim())\n            .filter((c) => c.startsWith(cookiePrefix))\n            .map((c) => c.slice(cookiePrefix.length))\n            .pop());\n};\n/**\n * A function that creates impersonation headers for API requests using current redux state.\n * @returns an object containing the appropriate impersonation requst headers, based on redux state\n */\nexport const getConsoleRequestHeaders = () => {\n    const store = storeHandler.getStore();\n    if (!store)\n        return undefined;\n    const state = store.getState();\n    const headers = {\n        'X-CSRFToken': getCSRFToken(),\n    };\n    // Set impersonation headers\n    const { kind, name } = getImpersonate(state) || {};\n    if ((kind === 'User' || kind === 'Group') && name) {\n        // Even if we are impersonating a group, we still need to set Impersonate-User to something or k8s will complain\n        headers['Impersonate-User'] = name;\n        if (kind === 'Group') {\n            headers['Impersonate-Group'] = name;\n        }\n    }\n    return headers;\n};\n//# sourceMappingURL=console-fetch-utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport { action } from 'typesafe-actions';\nimport { getReferenceForModel } from '../../../utils/k8s/k8s-ref';\nimport { k8sList, k8sGet } from '../../../utils/k8s/k8s-resource';\nimport { k8sWatch } from '../../../utils/k8s/k8s-utils';\nimport { getImpersonate } from '../../core/reducers/coreSelectors';\nexport var ActionType;\n(function (ActionType) {\n    ActionType[\"ReceivedResources\"] = \"resources\";\n    ActionType[\"GetResourcesInFlight\"] = \"getResourcesInFlight\";\n    ActionType[\"StartWatchK8sObject\"] = \"startWatchK8sObject\";\n    ActionType[\"StartWatchK8sList\"] = \"startWatchK8sList\";\n    ActionType[\"ModifyObject\"] = \"modifyObject\";\n    ActionType[\"StopWatchK8s\"] = \"stopWatchK8s\";\n    ActionType[\"Errored\"] = \"errored\";\n    ActionType[\"Loaded\"] = \"loaded\";\n    ActionType[\"BulkAddToList\"] = \"bulkAddToList\";\n    ActionType[\"UpdateListFromWS\"] = \"updateListFromWS\";\n    ActionType[\"FilterList\"] = \"filterList\";\n})(ActionType || (ActionType = {}));\nexport const updateListFromWS = (id, k8sObjects) => action(ActionType.UpdateListFromWS, { id, k8sObjects });\nexport const loaded = (id, k8sObjects) => action(ActionType.Loaded, { id, k8sObjects });\nexport const bulkAddToList = (id, k8sObjects) => action(ActionType.BulkAddToList, { id, k8sObjects });\nexport const startWatchK8sObject = (id) => action(ActionType.StartWatchK8sObject, { id });\nexport const startWatchK8sList = (id, query) => action(ActionType.StartWatchK8sList, { id, query });\nexport const modifyObject = (id, k8sObjects) => action(ActionType.ModifyObject, { id, k8sObjects });\nexport const stopWatchK8s = (id) => action(ActionType.StopWatchK8s, { id });\nexport const errored = (id, k8sObjects) => action(ActionType.Errored, { id, k8sObjects });\nexport const filterList = (id, name, value) => action(ActionType.FilterList, { id, name, value });\nexport const partialObjectMetadataListHeader = {\n    Accept: 'application/json;as=PartialObjectMetadataList;v=v1;g=meta.k8s.io,application/json',\n};\nexport const partialObjectMetadataHeader = {\n    Accept: 'application/json;as=PartialObjectMetadata;v=v1;g=meta.k8s.io,application/json',\n};\nconst WS = {};\nconst POLLs = {};\nconst REF_COUNTS = {};\nconst paginationLimit = 250;\nexport const stopK8sWatch = (id) => (dispatch) => {\n    REF_COUNTS[id] -= 1;\n    if (REF_COUNTS[id] > 0) {\n        return _.noop;\n    }\n    const ws = WS[id];\n    if (ws) {\n        ws.destroy();\n        delete WS[id];\n    }\n    const poller = POLLs[id];\n    clearInterval(poller);\n    delete POLLs[id];\n    delete REF_COUNTS[id];\n    return dispatch(stopWatchK8s(id));\n};\nexport const watchK8sList = (id, query, k8skind, extraAction, partialMetadata = false) => (dispatch, getState) => {\n    // Only one watch per unique list ID\n    if (id in REF_COUNTS) {\n        REF_COUNTS[id] += 1;\n        return _.noop;\n    }\n    dispatch(startWatchK8sList(id, query));\n    REF_COUNTS[id] = 1;\n    const incrementallyLoad = (continueToken = '') => __awaiter(void 0, void 0, void 0, function* () {\n        // the list may not still be around...\n        if (!REF_COUNTS[id]) {\n            // let .then handle the cleanup\n            return null;\n        }\n        const requestOptions = partialMetadata\n            ? {\n                headers: partialObjectMetadataListHeader,\n            }\n            : {};\n        const response = yield k8sList(k8skind, Object.assign(Object.assign({ limit: paginationLimit }, query), (continueToken ? { continue: continueToken } : {})), true, requestOptions);\n        if (!REF_COUNTS[id]) {\n            return null;\n        }\n        if (!continueToken) {\n            [loaded, extraAction].forEach((f) => f && dispatch(f(id, response.items)));\n        }\n        else {\n            dispatch(bulkAddToList(id, response.items));\n        }\n        if (response.metadata.continue) {\n            return incrementallyLoad(response.metadata.continue);\n        }\n        return response.metadata.resourceVersion;\n    });\n    /**\n     * Incrementally fetch list (XHR) using k8s pagination then use its resourceVersion to\n     *  start listening on a WS (?resourceVersion=$resourceVersion)\n     *  start the process over when:\n     *   1. the WS closes abnormally\n     *   2. the WS can not establish a connection within $TIMEOUT\n     */\n    const pollAndWatch = () => __awaiter(void 0, void 0, void 0, function* () {\n        delete POLLs[id];\n        try {\n            const resourceVersion = yield incrementallyLoad();\n            // ensure this watch should still exist because pollAndWatch is recursiveish\n            if (!REF_COUNTS[id]) {\n                // eslint-disable-next-line no-console\n                console.log(`stopped watching ${id} before finishing incremental loading.`);\n                // call cleanup function out of abundance of caution...\n                dispatch(stopK8sWatch(id));\n                return;\n            }\n            if (WS[id]) {\n                // eslint-disable-next-line no-console\n                console.warn(`Attempted to create multiple websockets for ${id}.`);\n                return;\n            }\n            if (!_.get(k8skind, 'verbs', ['watch']).includes('watch')) {\n                // eslint-disable-next-line no-console\n                console.warn(`${getReferenceForModel(k8skind)} does not support watching, falling back to polling.`);\n                if (!POLLs[id]) {\n                    POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n                }\n                return;\n            }\n            const { subprotocols } = getImpersonate(getState()) || {};\n            WS[id] = k8sWatch(k8skind, Object.assign(Object.assign({}, query), { resourceVersion }), { subprotocols, timeout: 60 * 1000 });\n        }\n        catch (e) {\n            if (!REF_COUNTS[id]) {\n                // eslint-disable-next-line no-console\n                console.log(`stopped watching ${id} before finishing incremental loading with error ${e}!`);\n                // call cleanup function out of abundance of caution...\n                dispatch(stopK8sWatch(id));\n                return;\n            }\n            dispatch(errored(id, e));\n            if (!POLLs[id]) {\n                POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n            }\n            return;\n        }\n        WS[id]\n            .onclose((event) => {\n            // Close Frame Status Codes: https://tools.ietf.org/html/rfc6455#section-7.4.1\n            if (event.code !== 1006) {\n                return;\n            }\n            // eslint-disable-next-line no-console\n            console.log('WS closed abnormally');\n            const ws = WS[id];\n            const timedOut = true;\n            ws && ws.destroy(timedOut);\n        })\n            .ondestroy((timedOut) => {\n            if (!timedOut) {\n                return;\n            }\n            // If the WS is unsuccessful for timeout duration, assume it is less work\n            // to update the entire list and then start the WS again\n            // eslint-disable-next-line no-console\n            console.log(`WS ${id} timed out - restarting polling`);\n            delete WS[id];\n            if (POLLs[id]) {\n                return;\n            }\n            POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n        })\n            .onbulkmessage((events) => [updateListFromWS, extraAction].forEach((f) => f && dispatch(f(id, events))));\n    });\n    return pollAndWatch();\n};\nexport const watchK8sObject = (id, name, namespace, query, k8sModel, partialMetadata = false) => (dispatch, getState) => {\n    if (id in REF_COUNTS) {\n        REF_COUNTS[id] += 1;\n        return _.noop;\n    }\n    const watch = dispatch(startWatchK8sObject(id));\n    REF_COUNTS[id] = 1;\n    const requestOptions = partialMetadata\n        ? {\n            headers: partialObjectMetadataHeader,\n        }\n        : {};\n    const poller = () => {\n        k8sGet(k8sModel, name, namespace, {}, requestOptions)\n            .then((o) => dispatch(modifyObject(id, o)), (e) => dispatch(errored(id, e)))\n            .catch((err) => {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        });\n    };\n    POLLs[id] = window.setInterval(poller, 30 * 1000);\n    poller();\n    if (!_.get(k8sModel, 'verbs', ['watch']).includes('watch')) {\n        // eslint-disable-next-line no-console\n        console.warn(`${getReferenceForModel(k8sModel)} does not support watching`);\n        return _.noop;\n    }\n    // Validate that a namespace is provided when watching a singular namespaced object. Must happen\n    // on frontend since we use field selectors against the list endpoint to watch singular resources.\n    if (k8sModel.namespaced && query.name && !query.ns) {\n        // eslint-disable-next-line no-console\n        console.error('Namespace required to watch namespaced resource: ', k8sModel.kind, query.name);\n        return _.noop;\n    }\n    if (query.name) {\n        query.fieldSelector = `metadata.name=${query.name}`;\n        delete query.name;\n    }\n    const { subprotocols } = getImpersonate(getState()) || {};\n    WS[id] = k8sWatch(k8sModel, query, {\n        subprotocols,\n    }).onbulkmessage((events) => events.forEach((e) => dispatch(modifyObject(id, e.object))));\n    return watch;\n};\nexport const receivedResources = (resources) => action(ActionType.ReceivedResources, { resources });\nexport const getResourcesInFlight = () => action(ActionType.GetResourcesInFlight);\nconst k8sActions = {\n    startWatchK8sObject,\n    startWatchK8sList,\n    modifyObject,\n    stopWatchK8s,\n    errored,\n    loaded,\n    bulkAddToList,\n    updateListFromWS,\n    filterList,\n    receivedResources,\n    getResourcesInFlight,\n};\n//# sourceMappingURL=k8s.js.map","import { AddAction, AddActionGroup, ResolvedExtension } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport { AddGroup } from '../components/types';\n\nexport const getAddGroups = (\n  addActions: ResolvedExtension<AddAction>[],\n  addActionGroups: AddActionGroup['properties'][],\n): AddGroup[] => {\n  if (!addActions || !addActionGroups) {\n    return [];\n  }\n  const initialActionGroups: AddGroup[] = addActionGroups.map((actionGroup) => ({\n    ...actionGroup,\n    items: [],\n  }));\n  const populatedActionGroups = addActions.reduce(\n    (actionGroups: typeof initialActionGroups, currAction) => {\n      const actionGroupsForCurrentItem = actionGroups.filter(\n        (a) => currAction.properties.groupId === a.id,\n      );\n      if (actionGroupsForCurrentItem.length) {\n        actionGroupsForCurrentItem.forEach((group) => group.items.push(currAction));\n      } else {\n        actionGroups.push({\n          id: currAction.properties.id,\n          name: currAction.properties.label,\n          items: [currAction],\n        });\n      }\n      return actionGroups;\n    },\n    initialActionGroups,\n  );\n  return populatedActionGroups.filter((group) => group.items.length);\n};\n\nexport const navigateTo = (e: React.SyntheticEvent, url: string) => {\n  history.push(url);\n  e.preventDefault();\n};\n\nexport const resolvedHref = (href: string, namespace: string): string =>\n  href && namespace ? href.replace(/:namespace\\b/g, namespace) : null;\n\nexport const filterNamespaceScopedUrl = (\n  namespace: string,\n  addActions: ResolvedExtension<AddAction>[],\n): ResolvedExtension<AddAction>[] => {\n  if (!namespace || !addActions) {\n    return [];\n  }\n  if (namespace === ALL_NAMESPACES_KEY) {\n    return addActions.filter(({ properties: { href } }) => !href?.match(/:namespace\\b/));\n  }\n  return addActions;\n};\n","import { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash';\nimport { k8sBasePath } from './k8s';\nimport { getReferenceForModel } from './k8s-ref';\nimport { WSFactory } from './ws-factory';\n// eslint-disable-next-line\nconst staticModels = require('@console/internal/models');\nconst getK8sAPIPath = ({ apiGroup = 'core', apiVersion }) => {\n    const isLegacy = apiGroup === 'core' && apiVersion === 'v1';\n    let p = isLegacy ? '/api/' : '/apis/';\n    if (!isLegacy && apiGroup) {\n        p += `${apiGroup}/`;\n    }\n    p += apiVersion;\n    return p;\n};\nexport const getK8sResourcePath = (model, options) => {\n    let u = getK8sAPIPath(model);\n    if (options.ns) {\n        u += `/namespaces/${options.ns}`;\n    }\n    u += `/${model.plural}`;\n    if (options.name) {\n        // Some resources like Users can have special characters in the name.\n        u += `/${encodeURIComponent(options.name)}`;\n    }\n    if (options.path) {\n        u += `/${options.path}`;\n    }\n    if (!_.isEmpty(options.queryParams)) {\n        const q = _.map(options.queryParams, (v, k) => {\n            return `${k}=${v}`;\n        });\n        u += `?${q.join('&')}`;\n    }\n    return u;\n};\nexport const resourceURL = (model, options) => `${k8sBasePath}${getK8sResourcePath(model, options)}`;\nconst toArray = (value) => (Array.isArray(value) ? value : [value]);\nexport const requirementToString = (requirement) => {\n    if (requirement.operator === 'Equals') {\n        return `${requirement.key}=${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'NotEquals') {\n        return `${requirement.key}!=${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'Exists') {\n        return requirement.key;\n    }\n    if (requirement.operator === 'DoesNotExist') {\n        return `!${requirement.key}`;\n    }\n    if (requirement.operator === 'In') {\n        return `${requirement.key} in (${toArray(requirement.values).join(',')})`;\n    }\n    if (requirement.operator === 'NotIn') {\n        return `${requirement.key} notin (${toArray(requirement.values).join(',')})`;\n    }\n    if (requirement.operator === 'GreaterThan') {\n        return `${requirement.key} > ${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'LessThan') {\n        return `${requirement.key} < ${requirement.values[0]}`;\n    }\n    return '';\n};\nexport const createEquals = (key, value) => ({\n    key,\n    operator: 'Equals',\n    values: [value],\n});\nconst isOldFormat = (selector) => !selector.matchLabels && !selector.matchExpressions;\nexport const toRequirements = (selector = {}) => {\n    const requirements = [];\n    const matchLabels = isOldFormat(selector) ? selector : selector.matchLabels;\n    const { matchExpressions } = selector;\n    Object.keys(matchLabels || {})\n        .sort()\n        .forEach((k) => {\n        requirements.push(createEquals(k, matchLabels[k]));\n    });\n    (matchExpressions || []).forEach((me) => {\n        requirements.push(me);\n    });\n    return requirements;\n};\nexport const selectorToString = (selector) => {\n    const requirements = toRequirements(selector);\n    return requirements.map(requirementToString).join(',');\n};\nexport const k8sWatch = (kind, query = {}, wsOptions = {}) => {\n    const queryParams = { watch: 'true' };\n    const opts = { queryParams };\n    const wsOptionsUpdated = Object.assign({\n        host: 'auto',\n        reconnect: true,\n        jsonParse: true,\n        bufferFlushInterval: 500,\n        bufferMax: 1000,\n    }, wsOptions);\n    const { labelSelector } = query;\n    if (labelSelector) {\n        const encodedSelector = encodeURIComponent(selectorToString(labelSelector));\n        if (encodedSelector) {\n            queryParams.labelSelector = encodedSelector;\n        }\n    }\n    if (query.fieldSelector) {\n        queryParams.fieldSelector = encodeURIComponent(query.fieldSelector);\n    }\n    if (query.ns) {\n        opts.ns = query.ns;\n    }\n    if (query.resourceVersion) {\n        queryParams.resourceVersion = encodeURIComponent(query.resourceVersion);\n    }\n    const path = resourceURL(kind, opts);\n    wsOptionsUpdated.path = path;\n    return new WSFactory(path, wsOptionsUpdated);\n};\nlet pluginStore;\nexport const setPluginStore = (store) => {\n    pluginStore = store;\n};\nconst modelKey = (model) => {\n    // TODO: Use `referenceForModel` even for known API objects\n    return model.crd ? getReferenceForModel(model) : model.kind;\n};\nexport const modelsToMap = (models) => {\n    return ImmutableMap().withMutations((map) => {\n        models.forEach((model) => map.set(modelKey(model), model));\n    });\n};\nexport const isModelDefinition = (e) => {\n    return e.type === 'ModelDefinition';\n};\n/**\n * Contains static resource definitions for Kubernetes objects.\n * Keys are of type `group:version:Kind`, but TypeScript doesn't support regex types (https://github.com/Microsoft/TypeScript/issues/6579).\n */\nlet k8sModels;\nconst getK8sModels = () => {\n    if (!k8sModels) {\n        // TODO this was migrated from console and is only used for the fallback API discovery and can likely be removed\n        k8sModels = modelsToMap(_.values(staticModels));\n        const hasModel = (model) => k8sModels.has(modelKey(model));\n        k8sModels = k8sModels.withMutations((map) => {\n            const pluginModels = _.flatMap(pluginStore\n                .getExtensionsInUse()\n                .filter(isModelDefinition)\n                .map((md) => md.properties.models));\n            map.merge(modelsToMap(pluginModels.filter((model) => !hasModel(model))));\n        });\n    }\n    return k8sModels;\n};\n// URL routes that can be namespaced\nlet namespacedResources;\n/**\n * Provides a synchronous way to acquire all statically-defined Kubernetes models.\n * NOTE: This will not work for CRDs defined at runtime, use `connectToModels` instead.\n */\nexport const allModels = getK8sModels;\nexport const getNamespacedResources = () => {\n    if (!namespacedResources) {\n        namespacedResources = new Set();\n        allModels().forEach((v, k) => {\n            if (!v.namespaced) {\n                return;\n            }\n            if (v.crd) {\n                namespacedResources.add(k);\n            }\n            if (!v.crd || v.legacyPluralURL) {\n                namespacedResources.add(v.plural);\n            }\n        });\n    }\n    return namespacedResources;\n};\n//# sourceMappingURL=k8s-utils.js.map","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ResourceLink,\n  SidebarSectionHeading,\n  ExternalLink,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel, SecretModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { TYPE_TRAFFIC_CONNECTOR } from '../../const';\nimport { getNamespaceDashboardKialiLink, getResource } from '../../utils/topology-utils';\n\ntype TopologyEdgeResourcesPanelProps = {\n  edge: Edge;\n};\n\nconst TopologyEdgeResourcesPanel: React.FC<TopologyEdgeResourcesPanelProps> = ({ edge }) => {\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n  const data = edge.getData();\n  const resources = [source, target];\n  const {\n    metadata: { namespace },\n  } = resources[1];\n\n  return (\n    <div className=\"overview__sidebar-pane-body\">\n      <SidebarSectionHeading text={t('topology~Connections')} />\n      <ul className=\"list-group\">\n        {_.map(resources, (resource) => {\n          if (!resource) {\n            return null;\n          }\n          const {\n            metadata: { name, uid },\n            spec,\n          } = resource;\n          const sinkUri = spec?.sinkUri;\n\n          return (\n            <li className=\"list-group-item  container-fluid\" key={uid}>\n              {!sinkUri ? (\n                <ResourceLink\n                  kind={referenceFor(resource)}\n                  name={name}\n                  namespace={namespace}\n                  dataTest={`resource-link-${name}`}\n                />\n              ) : (\n                <ExternalLink\n                  href={sinkUri}\n                  additionalClassName=\"co-external-link--block\"\n                  text={sinkUri}\n                  dataTestID={`sink-uri-${sinkUri}`}\n                />\n              )}\n            </li>\n          );\n        })}\n      </ul>\n      {data?.sbr?.status.secret && (\n        <>\n          <SidebarSectionHeading text={t('topology~Secret')} />\n          <ul className=\"list-group\">\n            <li className=\"list-group-item  container-fluid\" key={data.sbr.status.secret}>\n              <ResourceLink\n                kind={referenceForModel(SecretModel)}\n                name={data.sbr.status.secret}\n                namespace={data.sbr.metadata.namespace}\n                dataTest={`secret-resource-link-${data.sbr.status.secret}`}\n              />\n            </li>\n          </ul>\n        </>\n      )}\n      {edge.getType() === TYPE_TRAFFIC_CONNECTOR && (\n        <>\n          <SidebarSectionHeading text={t('topology~Kiali link')} />\n          <ExternalLink\n            href={getNamespaceDashboardKialiLink(consoleLinks, namespace)}\n            text={t('topology~Kiali Graph view')}\n            dataTestID=\"kiali-link\"\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TopologyEdgeResourcesPanel;\n","import { ResolvedExtension, FileUpload } from '@console/dynamic-plugin-sdk';\n\nexport const getFileType = (fileName: string): string => {\n  if (fileName.lastIndexOf('.') === -1) {\n    return null;\n  }\n  return fileName.split('.').pop();\n};\n\nexport const isFileSupported = (fileName: string, supportedFileTypes: string[]): boolean => {\n  const extension = getFileType(fileName);\n  if (!extension || extension.length === 0) {\n    return false;\n  }\n  return supportedFileTypes.includes(extension.toLowerCase());\n};\n\nexport const getRequiredFileUploadExtension = (\n  fileUploadExtensions: ResolvedExtension<FileUpload>[],\n  fileName: string,\n) =>\n  fileUploadExtensions.find((ex) => isFileSupported(fileName, ex.properties.fileExtensions)) ??\n  null;\n","export { consoleFetch, consoleFetchJSON, consoleFetchText } from './console-fetch';\nexport { getConsoleRequestHeaders } from './console-fetch-utils';\n//# sourceMappingURL=index.js.map","let store;\nconst storeHandler = {\n    setStore: (storeData) => {\n        store = storeData;\n    },\n    getStore: () => store,\n};\nexport default storeHandler;\n//# sourceMappingURL=storeHandler.js.map","export { useK8sModel } from './useK8sModel';\nexport { useK8sModels } from './useK8sModels';\nexport { useK8sWatchResource } from './useK8sWatchResource';\nexport { useK8sWatchResources } from './useK8sWatchResources';\n//# sourceMappingURL=index.js.map","import * as React from 'react';\nimport { BoltIcon } from '@patternfly/react-icons/dist/esm/icons/bolt-icon';\nimport { CatalogIcon } from '@patternfly/react-icons/dist/esm/icons/catalog-icon';\nimport { DatabaseIcon } from '@patternfly/react-icons/dist/esm/icons/database-icon';\nimport { FileUploadIcon } from '@patternfly/react-icons/dist/esm/icons/file-upload-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { LaptopCodeIcon } from '@patternfly/react-icons/dist/esm/icons/laptop-code-icon';\nimport { OsImageIcon } from '@patternfly/react-icons/dist/esm/icons/os-image-icon';\nimport i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk/src';\nimport { eventIconStyle, ServerlessFunctionIcon } from '@console/knative-plugin/src/utils/icons';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport {\n  INCONTEXT_ACTIONS_CONNECTS_TO,\n  INCONTEXT_ACTIONS_SERVICE_BINDING,\n  QUERY_PROPERTIES,\n} from '../const';\nimport { resolvedHref } from '../utils/add-page-utils';\nimport { getDisabledAddActions } from '../utils/useAddActionExtensions';\n\nexport const allImportResourceAccess = 'allImportResourceAccess';\nexport const allCatalogImageResourceAccess = 'allCatalogImageResourceAccess';\n\ntype ActionFactory = (\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  path?: string,\n  accessReviewDisabled?: boolean,\n  isServiceBindingAllowed?: boolean,\n) => Action;\n\nexport const resolvedURLWithParams = (\n  unresolvedHref: string,\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  allowServiceBinding?: boolean,\n) => {\n  const resolvedURL = resolvedHref(unresolvedHref, namespace);\n  const queryParams = new URLSearchParams();\n  if (application || contextSource) {\n    application\n      ? queryParams.append(QUERY_PROPERTIES.APPLICATION, application)\n      : queryParams.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n    contextSource &&\n      queryParams.append(\n        QUERY_PROPERTIES.CONTEXT_ACTION,\n        JSON.stringify({\n          type: allowServiceBinding\n            ? INCONTEXT_ACTIONS_SERVICE_BINDING\n            : INCONTEXT_ACTIONS_CONNECTS_TO,\n          payload: contextSource,\n        }),\n      );\n    return `${resolvedURL}${resolvedURL.indexOf('?') > -1 ? '&' : '?'}${queryParams.toString()}`;\n  }\n  return resolvedURL;\n};\n\nexport const AddActions: { [name: string]: ActionFactory } = {\n  FromGit: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'import-from-git',\n    label: i18next.t('devconsole~Import from Git'),\n    icon: <GitAltIcon />,\n    cta: {\n      href: resolvedURLWithParams('/import/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  ContainerImage: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'deploy-image',\n    label: i18next.t('devconsole~Container Image'),\n    icon: <OsImageIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/deploy-image/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  DevCatalog: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'dev-catalog',\n    label: i18next.t('devconsole~From Catalog'),\n    icon: <CatalogIcon />,\n    cta: {\n      href: resolvedURLWithParams('/catalog/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  DatabaseCatalog: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'dev-catalog-databases',\n    label: i18next.t('devconsole~Database'),\n    icon: <DatabaseIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/catalog/ns/:namespace?category=databases',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  Samples: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'import-from-samples',\n    label: i18next.t('devconsole~Samples'),\n    icon: <LaptopCodeIcon />,\n    cta: {\n      href: resolvedURLWithParams('/samples/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  OperatorBacked: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n    isServiceBindingAllowed,\n  ) => ({\n    id: 'operator-backed',\n    label: i18next.t('devconsole~Operator Backed'),\n    icon: <BoltIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/catalog/ns/:namespace?catalogType=OperatorBackedService',\n        namespace,\n        application,\n        contextSource,\n        isServiceBindingAllowed,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  UploadJarFile: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'upload-jar',\n    label: i18next.t('devconsole~Upload JAR file'),\n    icon: <FileUploadIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/upload-jar/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  // Tech debt: ODC-7413: Move Serverless specific actions and providers from devconsole into knative-pluigin\n  CreateServerlessFunction: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n  ) => ({\n    id: 'create-serverless-function',\n    label: i18next.t('devconsole~Create Serverless function'),\n    icon: <ServerlessFunctionIcon style={eventIconStyle} />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/serverless-function/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  CreateServerlessFunctionUsingSamples: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n  ) => ({\n    id: 'create-serverless-function-samples',\n    label: i18next.t('devconsole~Serverless function using Samples'),\n    icon: <ServerlessFunctionIcon style={eventIconStyle} />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/samples/ns/:namespace?sampleType=Serverless function',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n};\n\nconst disabledAddActions = getDisabledAddActions();\nexport const disabledActionsFilter = (item: Action) => !disabledAddActions?.includes(item.id);\n","import * as _ from 'lodash';\nimport { consoleFetchJSON as coFetchJSON } from '../fetch';\nimport { selectorToString, resourceURL } from './k8s-utils';\n/**\n * An adapter function to call the underlying APIs with provided options.\n * @param func The function to be called.\n * @param knownArgs  The list of arguments to be provided to underlying API in order.\n * @returns The function called with provided arguments.\n */\nconst adapterFunc = (func, knownArgs) => {\n    return (options) => {\n        const args = knownArgs.map((arg) => {\n            // forming opts to match underlying API signature if it's there in knownArgs\n            if (arg === 'opts') {\n                const { name, ns, path, queryParams } = options || {};\n                return Object.assign(Object.assign(Object.assign(Object.assign({}, (name && { name })), (ns && { ns })), (path && { path })), (queryParams && { queryParams }));\n            }\n            return options[arg];\n        });\n        return func(...args);\n    };\n};\n/**\n * @deprecated Use {@link k8sGetResource} instead. Support for k8sGet will be removed in a future release.\n * It fetches a resource from the cluster, based on the provided model, name, namespace.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param model Kubernetes model\n * @param name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param opts The options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more at https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resouces matching the model. In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sGet = (model, name, ns, opts, requestInit) => coFetchJSON(resourceURL(model, Object.assign({ ns, name }, opts)), 'GET', requestInit, null);\n/**\n * It fetches a resource from the cluster, based on the provided options.\n * If the name is provided it returns resource, else it returns all the resources matching the model.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model - Kubernetes model\n * @param options.name - The name of the resource, if not provided then it looks for all the resources matching the model.\n * @param options.ns - The namespace to look into, should not be specified for cluster-scoped resources.\n * @param options.path - Appends as subpath if provided\n * @param options.queryParams - The query parameters to be included in the URL.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, etc. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response as JSON object with a resource if the name is provided, else it returns all the resources matching the model. In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sGetResource = adapterFunc(k8sGet, [\n    'model',\n    'name',\n    'ns',\n    'opts',\n    'requestInit',\n]);\n/**\n * @deprecated Use {@link k8sCreateResource} instead. Support for k8sCreate will be removed in a future release.\n * It creates a resource in the cluster, based on the provided model and payload.\n * @param model Kubernetes model\n * @param data The payload for the resource to be created.\n * @param opts The options to pass.\n * @returns A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sCreate = (model, data, opts = {}) => {\n    var _a;\n    return coFetchJSON.post(resourceURL(model, Object.assign({ ns: (_a = data === null || data === void 0 ? void 0 : data.metadata) === null || _a === void 0 ? void 0 : _a.namespace }, opts)), data, null, null);\n};\n/**\n * It creates a resource in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model - Kubernetes model\n * @param options.data - payload for the resource to be created\n * @param options.path - Appends as subpath if provided\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource created.\n * In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sCreateResource = adapterFunc(k8sCreate, [\n    'model',\n    'data',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sUpdateResource} instead. Support for k8sUpdate will be removed in a future release.\n * It updates the entire resource in the cluster, based on the provided model, data, name, namespace.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param model Kubernetes model\n * @param data payload for the resource to be updated.\n * @param ns namespace to look into, it should not be specified for cluster-scoped resources.\n * @param name resource name to be updated.\n * @param opts The options to pass\n * @returns A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sUpdate = (model, data, ns, name, opts) => {\n    var _a, _b;\n    return coFetchJSON.put(resourceURL(model, Object.assign({ ns: ns || ((_a = data.metadata) === null || _a === void 0 ? void 0 : _a.namespace), name: name || ((_b = data.metadata) === null || _b === void 0 ? void 0 : _b.name) }, opts)), data, null, null);\n};\n/**\n * It updates the entire resource in the cluster, based on the provided options.\n * When a client needs to replace an existing resource entirely, the client can use k8sUpdate.\n * Alternatively, the client can use k8sPatch to perform the partial update.\n * @param options which are passed as key-value pair in the map\n * @param options.model - Kubernetes model\n * @param options.data - payload for the Kubernetes resource to be updated\n * @param options.ns - namespace to look into, it should not be specified for cluster-scoped resources.\n * @param options.name - resource name to be updated.\n * @param options.path - appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sUpdateResource = adapterFunc(k8sUpdate, [\n    'model',\n    'data',\n    'ns',\n    'name',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sPatchResource} instead. Support for k8sPatch will be removed in a future release.\n * It patches any resource in the cluster, based on provided model, resource, data.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more https://datatracker.ietf.org/doc/html/rfc6902\n * @param model Kubernetes model\n * @param resource The resource to be patched\n * @param data Only the data to be patched on existing resource with the operation, path, and value\n * @param opts The options to pass\n * @returns A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sPatch = (model, resource, data, opts = {}) => {\n    const patches = _.compact(data);\n    if (_.isEmpty(patches)) {\n        return Promise.resolve(resource);\n    }\n    return coFetchJSON.patch(resourceURL(model, Object.assign({\n        ns: resource.metadata.namespace,\n        name: resource.metadata.name,\n    }, opts)), patches, null, null);\n};\n/**\n * It patches any resource in the cluster, based on the provided options.\n * When a client needs to perform the partial update, the client can use k8sPatch.\n * Alternatively, the client can use k8sUpdate to replace an existing resource entirely.\n * See more https://datatracker.ietf.org/doc/html/rfc6902\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model - Kubernetes model\n * @param options.resource - The resource to be patched.\n * @param options.data - Only the data to be patched on existing resource with the operation, path, and value.\n * @param options.path - Appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sPatchResource = adapterFunc(k8sPatch, [\n    'model',\n    'resource',\n    'data',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sDeleteResource} instead. Support for k8sKill will be removed in a future release.\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * See more https://kubernetes.io/docs/concepts/architecture/garbage-collection/\n * @param model Kubernetes model\n * @param resource The resource to be deleted.\n * @param opts The Options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @param options.json - Can control garbage collection of resource explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @returns A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sKill = (model, resource, opts = {}, requestInit = {}, json = null) => {\n    const { propagationPolicy } = model;\n    const jsonData = json !== null && json !== void 0 ? json : (propagationPolicy && { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy });\n    return coFetchJSON.delete(resourceURL(model, Object.assign({ ns: resource.metadata.namespace, name: resource.metadata.name }, opts)), jsonData, requestInit, null);\n};\n/**\n * It deletes resources from the cluster, based on the provided model and resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with `propagationPolicy` property in provided model or passed in json.\n * @param options which are passed as key-value pair in the map.\n * @param options.model - Kubernetes model\n * @param options.resource - The resource to be deleted.\n * @param options.path - Appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, etc. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @param options.json - Can control garbage collection of resources explicitly if provided else will default to model's `propagationPolicy`.\n * @example\n * ```\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * ```\n * @returns A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n *  */\nexport const k8sDeleteResource = adapterFunc(k8sKill, [\n    'model',\n    'resource',\n    'opts',\n    'requestInit',\n    'json',\n]);\n/**\n * @deprecated Use {@link k8sListResource} instead. Support for k8sList will be removed in a future release.\n * It lists the resources as an array in the cluster, based on the provided model, queryParams(label selector).\n * @param model Kubernetes model\n * @param queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param raw If true then returns raw data i.e if the query is for Pod then resolved resources will not be in an array but a resource will be returned of kind PodList\n * and it will have a key \"item\" which will be an array of Pod kind.\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response with the resources in an array.\n * In case of failure promise gets rejected with HTTP error response.\n * */\nexport const k8sList = (model, queryParams = {}, raw = false, requestInit = {}) => {\n    const query = _.map(_.omit(queryParams, 'ns'), (v, k) => {\n        let newVal;\n        if (k === 'labelSelector') {\n            newVal = selectorToString(v);\n        }\n        return `${encodeURIComponent(k)}=${encodeURIComponent(newVal !== null && newVal !== void 0 ? newVal : v)}`;\n    }).join('&');\n    const listURL = resourceURL(model, { ns: queryParams.ns });\n    return coFetchJSON(`${listURL}?${query}`, 'GET', requestInit, null).then((result) => {\n        var _a;\n        const typedItems = (_a = result.items) === null || _a === void 0 ? void 0 : _a.map((i) => (Object.assign({ kind: model.kind, apiVersion: result.apiVersion }, i)));\n        return raw ? Object.assign(Object.assign({}, result), { items: typedItems }) : typedItems;\n    });\n};\n/**\n * It lists the resources as an array in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model - Kubernetes model\n * @param options.queryParams - The query parameters to be included in the URL. It can also pass label selectors by using the `labelSelector` key.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, and so forth. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response\n */\nexport const k8sListResource = adapterFunc(k8sList, [\n    'model',\n    'queryParams',\n    'raw',\n    'requestInit',\n]);\n/**\n * Same interface as k8sListResource but returns the sub items.\n * @see K8sListResource\n */\nexport const k8sListResourceItems = (options) => k8sListResource(options).then((response) => {\n    if (Array.isArray(response)) {\n        return response;\n    }\n    return response.items;\n});\n//# sourceMappingURL=k8s-resource.js.map","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n    constructor(message) {\n        super(message);\n        // set error name as constructor name, make it not enumerable to keep native Error behavior\n        // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n        Object.defineProperty(this, 'name', {\n            value: new.target.name,\n            enumerable: false,\n            configurable: true,\n        });\n        // Use captureStackTrace when available to remove contructor from stack trace\n        // Add message to the stack trace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            this.stack = new Error(message).stack;\n        }\n        // fix the extended error prototype chain\n        // because typescript __extends implementation can't\n        // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexport class ErrorWithCause extends CustomError {\n    constructor(message, cause) {\n        super(message);\n        this.cause = cause;\n    }\n}\n//# sourceMappingURL=custom-error.js.map","import { Map as ImmutableMap } from 'immutable';\nimport { ActionType } from '../actions/core';\n/**\n * Reducer function for the core\n * @param state the reducer state\n * @param action provided associated action type alongwith payload\n * @param action.type type of the action\n * @param action.payload associated payload for the action\n * @see CoreAction\n * @returns The the updated state.\n */\nexport const coreReducer = (state = {\n    user: {},\n    admissionWebhookWarnings: ImmutableMap(),\n}, action) => {\n    switch (action.type) {\n        case ActionType.BeginImpersonate:\n            return Object.assign(Object.assign({}, state), { impersonate: {\n                    kind: action.payload.kind,\n                    name: action.payload.name,\n                    subprotocols: action.payload.subprotocols,\n                } });\n        case ActionType.EndImpersonate: {\n            const stateKeys = Object.keys(state);\n            return stateKeys.reduce((acc, key) => {\n                if (key !== 'impersonate') {\n                    return Object.assign(Object.assign({}, acc), { [key]: state[key] });\n                }\n                return acc;\n            }, {});\n        }\n        case ActionType.SetUser:\n            return Object.assign(Object.assign({}, state), { user: action.payload.userInfo });\n        case ActionType.SetAdmissionWebhookWarning:\n            return Object.assign(Object.assign({}, state), { admissionWebhookWarnings: state.admissionWebhookWarnings.set(action.payload.id, action.payload.warning) });\n        case ActionType.RemoveAdmissionWebhookWarning:\n            return Object.assign(Object.assign({}, state), { admissionWebhookWarnings: state.admissionWebhookWarnings.remove(action.payload.id) });\n        default:\n            return state;\n    }\n};\n//# sourceMappingURL=core.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\n/**\n * Hook that retrieves all current k8s models from redux.\n *\n * @returns An array with the first item as the list of k8s model and second item as inFlight status\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const [models, inFlight] = UseK8sModels();\n *   return ...\n * }\n * ```\n */\nexport const useK8sModels = () => {\n    var _a, _b, _c;\n    return [\n        (_b = (_a = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'models']))) === null || _a === void 0 ? void 0 : _a.toJS()) !== null && _b !== void 0 ? _b : {},\n        (_c = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']))) !== null && _c !== void 0 ? _c : false,\n    ];\n};\n//# sourceMappingURL=useK8sModels.js.map","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { getReduxIdPayload } from '../../../app/k8s/reducers/k8sSelector';\nimport { getIDAndDispatch, getReduxData, NoModelError } from './k8s-watcher';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { useK8sModel } from './useK8sModel';\nimport { useModelsLoaded } from './useModelsLoaded';\n/**\n * Hook that retrieves the Kubernetes resource along with their respective status for loaded and error.\n * @param initResource resources need to be watched as key-value pair, wherein key will be unique to resource and value will be options needed to watch for the respective resource.\n * @returns An array with first item as resource(s), second item as loaded status and third item as error state if any.\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const watchRes = {\n        ...\n      }\n *   const [data, loaded, error] = useK8sWatchResource(watchRes)\n *   return ...\n * }\n * ```\n */\nexport const useK8sWatchResource = (initResource) => {\n    const resource = useDeepCompareMemoize(initResource, true);\n    const modelsLoaded = useModelsLoaded();\n    const [k8sModel] = useK8sModel((resource === null || resource === void 0 ? void 0 : resource.groupVersionKind) || (resource === null || resource === void 0 ? void 0 : resource.kind));\n    const reduxID = React.useMemo(() => getIDAndDispatch(resource, k8sModel), [k8sModel, resource]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        if (reduxID) {\n            dispatch(reduxID.dispatch);\n        }\n        return () => {\n            if (reduxID) {\n                dispatch(k8sActions.stopK8sWatch(reduxID.id));\n            }\n        };\n    }, [dispatch, reduxID]);\n    const resourceK8s = useSelector((state) => reduxID ? getReduxIdPayload(state, reduxID.id) : null);\n    return React.useMemo(() => {\n        if (!resource) {\n            return [undefined, true, undefined];\n        }\n        if (!resourceK8s) {\n            const data = (resource === null || resource === void 0 ? void 0 : resource.isList) ? [] : {};\n            return modelsLoaded && !k8sModel\n                ? [data, true, new NoModelError()]\n                : [data, false, undefined];\n        }\n        const data = getReduxData(resourceK8s.get('data'), resource);\n        const loaded = resourceK8s.get('loaded');\n        const loadError = resourceK8s.get('loadError');\n        return [data, loaded, loadError];\n    }, [resource, resourceK8s, modelsLoaded, k8sModel]);\n};\n//# sourceMappingURL=useK8sWatchResource.js.map","import * as _ from 'lodash';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { CustomError } from '../../error/custom-error';\nimport { getReferenceForModel } from '../k8s-ref';\nexport class NoModelError extends CustomError {\n    constructor() {\n        super('Model does not exist');\n    }\n}\nexport const makeReduxID = (k8sKind, query) => {\n    let qs = '';\n    if (!_.isEmpty(query)) {\n        qs = `---${JSON.stringify(query)}`;\n    }\n    return `${getReferenceForModel(k8sKind || {})}${qs}`;\n};\nexport const makeQuery = (namespace, labelSelector, fieldSelector, name, limit) => {\n    const query = {};\n    if (!_.isEmpty(labelSelector)) {\n        query.labelSelector = labelSelector;\n    }\n    if (!_.isEmpty(namespace)) {\n        query.ns = namespace;\n    }\n    if (!_.isEmpty(name)) {\n        query.name = name;\n    }\n    if (fieldSelector) {\n        query.fieldSelector = fieldSelector;\n    }\n    if (limit) {\n        query.limit = limit;\n    }\n    return query;\n};\nexport const INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL = Symbol('_cachedToArrayResult');\nexport const INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL = Symbol('_cachedToJSONResult');\nexport const getReduxData = (immutableData, resource) => {\n    if (!immutableData) {\n        return null;\n    }\n    if (resource.isList && immutableData.toArray) {\n        if (!immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL]) {\n            immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL] = immutableData\n                .toArray()\n                .map((a) => {\n                if (a.toJSON) {\n                    if (!a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL]) {\n                        a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL] = a.toJSON();\n                    }\n                    return a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL];\n                }\n                return a;\n            });\n        }\n        return immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL];\n    }\n    if (immutableData.toJSON) {\n        if (!immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL]) {\n            immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL] = immutableData.toJSON();\n        }\n        return immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL];\n    }\n    return null;\n};\nexport const getIDAndDispatch = (resource, k8sModel) => {\n    if (!k8sModel || !resource) {\n        return null;\n    }\n    const query = makeQuery(resource.namespace, resource.selector, resource.fieldSelector, resource.name, resource.limit);\n    const id = makeReduxID(k8sModel, query);\n    const dispatch = resource.isList\n        ? k8sActions.watchK8sList(id, query, k8sModel, null, resource.partialMetadata)\n        : k8sActions.watchK8sObject(id, resource.name, resource.namespace, query, k8sModel, resource.partialMetadata);\n    return { id, dispatch };\n};\n//# sourceMappingURL=k8s-watcher.js.map","import * as React from 'react';\nimport * as _ from 'lodash';\nexport const useDeepCompareMemoize = (value, strinfigy) => {\n    const ref = React.useRef();\n    if (strinfigy\n        ? JSON.stringify(value) !== JSON.stringify(ref.current)\n        : !_.isEqual(value, ref.current)) {\n        ref.current = value;\n    }\n    return ref.current;\n};\n//# sourceMappingURL=useDeepCompareMemoize.js.map","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\n/**\n * Wait until internal models (CRDs) are loaded.\n *\n * Note: When loading is 'in flight' (in progress) when the component\n * that uses this hook is mounted, this hook waits until this is resolved, too.\n */\nexport const useModelsLoaded = () => {\n    const ref = React.useRef(false);\n    const loaded = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'loaded']));\n    const inFlight = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']));\n    if (!ref.current && loaded && !inFlight) {\n        ref.current = true;\n    }\n    return ref.current;\n};\n//# sourceMappingURL=useModelsLoaded.js.map","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { transformGroupVersionKindToReference, getReferenceForModel, getGroupVersionKindForReference, } from '../k8s-ref';\nimport { getIDAndDispatch, getReduxData, NoModelError } from './k8s-watcher';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { getK8sModel } from './useK8sModel';\nimport { useModelsLoaded } from './useModelsLoaded';\nimport { usePrevious } from './usePrevious';\n/**\n * Hook that retrieves the Kubernetes resources along with their respective status for loaded and error.\n * @param initResources resources need to be watched as key-value pair, wherein key will be unique to resource and value will be options needed to watch for the respective resource.\n * @returns A map where keys are as provided in initResouces and value has three properties data, loaded and error.\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const watchResources = {\n        'deployment': {...},\n        'pod': {...}\n        ...\n      }\n *   const {deployment, pod} = useK8sWatchResources(watchResources)\n *   return ...\n * }\n * ```\n */\nexport const useK8sWatchResources = (initResources) => {\n    const resources = useDeepCompareMemoize(initResources, true);\n    const modelsLoaded = useModelsLoaded();\n    const allK8sModels = useSelector((state) => state.k8s.getIn(['RESOURCES', 'models']));\n    const prevK8sModels = usePrevious(allK8sModels);\n    const prevResources = usePrevious(resources);\n    const k8sModelsRef = React.useRef(ImmutableMap());\n    if (prevResources !== resources ||\n        (prevK8sModels !== allK8sModels &&\n            Object.values(resources).some((r) => {\n                const modelReference = transformGroupVersionKindToReference(r.groupVersionKind || r.kind);\n                return (getK8sModel(prevK8sModels, modelReference) !== getK8sModel(allK8sModels, modelReference));\n            }))) {\n        const requiredModels = Object.values(resources).map((r) => transformGroupVersionKindToReference(r.groupVersionKind || r.kind));\n        k8sModelsRef.current = allK8sModels.filter((model) => requiredModels.includes(getReferenceForModel(model)) || requiredModels.includes(model.kind));\n    }\n    const k8sModels = k8sModelsRef.current;\n    const reduxIDs = React.useMemo(() => modelsLoaded\n        ? Object.keys(resources).reduce((ids, key) => {\n            const modelReference = transformGroupVersionKindToReference(resources[key].groupVersionKind || resources[key].kind);\n            const resourceModel = modelReference &&\n                (k8sModels.get(modelReference) ||\n                    k8sModels.get(getGroupVersionKindForReference(modelReference).kind));\n            if (!resourceModel) {\n                ids[key] = {\n                    noModel: true,\n                };\n            }\n            else {\n                const idAndDispatch = getIDAndDispatch(resources[key], resourceModel);\n                if (idAndDispatch) {\n                    ids[key] = idAndDispatch;\n                }\n            }\n            return ids;\n        }, {})\n        : null, [k8sModels, modelsLoaded, resources]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        const reduxIDKeys = Object.keys(reduxIDs || {});\n        reduxIDKeys.forEach((k) => {\n            if (reduxIDs[k].dispatch) {\n                dispatch(reduxIDs[k].dispatch);\n            }\n        });\n        return () => {\n            reduxIDKeys.forEach((k) => {\n                if (reduxIDs[k].dispatch) {\n                    dispatch(k8sActions.stopK8sWatch(reduxIDs[k].id));\n                }\n            });\n        };\n    }, [dispatch, reduxIDs]);\n    const resourceK8sSelectorCreator = React.useMemo(() => createSelectorCreator(\n    // specifying createSelectorCreator<ImmutableMap<string, K8sKind>> throws type error\n    defaultMemoize, (oldK8s, newK8s) => Object.keys(reduxIDs || {})\n        .filter((k) => !reduxIDs[k].noModel)\n        .every((k) => oldK8s.get(reduxIDs[k].id) === newK8s.get(reduxIDs[k].id))), [reduxIDs]);\n    const resourceK8sSelector = React.useMemo(() => resourceK8sSelectorCreator((state) => state.k8s, (k8s) => k8s), [resourceK8sSelectorCreator]);\n    const resourceK8s = useSelector(resourceK8sSelector);\n    const results = React.useMemo(() => Object.keys(resources).reduce((acc, key) => {\n        if (reduxIDs === null || reduxIDs === void 0 ? void 0 : reduxIDs[key].noModel) {\n            acc[key] = {\n                data: resources[key].isList ? [] : {},\n                loaded: true,\n                loadError: new NoModelError(),\n            };\n        }\n        else if (resourceK8s.has(reduxIDs === null || reduxIDs === void 0 ? void 0 : reduxIDs[key].id)) {\n            const data = getReduxData(resourceK8s.getIn([reduxIDs[key].id, 'data']), resources[key]);\n            const loaded = resourceK8s.getIn([reduxIDs[key].id, 'loaded']);\n            const loadError = resourceK8s.getIn([reduxIDs[key].id, 'loadError']);\n            acc[key] = { data, loaded, loadError };\n        }\n        else {\n            acc[key] = {\n                data: resources[key].isList ? [] : {},\n                loaded: false,\n                loadError: undefined,\n            };\n        }\n        return acc;\n    }, {}), [resources, reduxIDs, resourceK8s]);\n    return results;\n};\n//# sourceMappingURL=useK8sWatchResources.js.map","import { isNode, Node, GraphElement } from '@patternfly/react-topology';\nimport { labelForNodeKind } from '@console/shared';\nimport { getResourceKind } from '../../utils/topology-utils';\n\nexport const getChildKinds = (children: GraphElement[]) => {\n  const childNodes = children.filter((n) => isNode(n)) as Node[];\n  const kindsMap = childNodes.reduce((acc, n) => {\n    const kind = getResourceKind(n);\n    if (!acc[kind]) {\n      acc[kind] = [];\n    }\n    acc[kind].push(n);\n    return acc;\n  }, {});\n  const kindKeys = Object.keys(kindsMap).sort((a, b) =>\n    labelForNodeKind(a).localeCompare(labelForNodeKind(b)),\n  );\n\n  return { kindsMap, kindKeys };\n};\n\nexport const sortGroupChildren = (children: GraphElement[]): Node[] => {\n  const childNodes = children.filter((child) => isNode(child)) as Node[];\n  return childNodes\n    .sort((a, b) =>\n      labelForNodeKind(getResourceKind(a)).localeCompare(labelForNodeKind(getResourceKind(b))),\n    )\n    .sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n};\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { isValidUrl, labelForNodeKind } from '@console/shared';\nimport { showKind, useDisplayFilters } from '../../../filters';\n\ninterface GroupResourcesCellProps {\n  group: Node;\n}\n\nconst GroupResourcesCell: React.FC<GroupResourcesCellProps> = ({ group }) => {\n  const displayFilters = useDisplayFilters();\n  const { groupResources } = group.getData();\n  const shownResources = groupResources.filter((res) =>\n    showKind(res.resourceKind || res.resource?.kind, displayFilters),\n  );\n\n  const childKindsMap = shownResources.reduce((acc, child) => {\n    const kind = child.resourceKind || child.resource?.kind;\n    if (!acc[kind]) {\n      acc[kind] = 0;\n    }\n    acc[kind]++;\n    return acc;\n  }, {});\n  const kindKeys = Object.keys(childKindsMap).sort((a, b) =>\n    labelForNodeKind(a).localeCompare(labelForNodeKind(b)),\n  );\n  return (\n    <DataListCell key=\"resources\" id={`${group.getId()}_resources`}>\n      {kindKeys.map((key) => {\n        let itemIcon;\n        let imageClass;\n        if (imageClass) {\n          itemIcon = (\n            <image\n              className=\"co-m-resource-icon--md\"\n              xlinkHref={isValidUrl(imageClass) ? imageClass : getImageForIconClass(imageClass)}\n            />\n          );\n        } else {\n          itemIcon = <ResourceIcon className=\"co-m-resource-icon--md\" kind={key} />;\n        }\n        return (\n          <span key={key} className=\"odc-topology-list-view__group-resource-count\">\n            {childKindsMap[key]}\n            {itemIcon}\n          </span>\n        );\n      })}\n    </DataListCell>\n  );\n};\n\nexport default observer(GroupResourcesCell);\n","export { default as AlertsCell } from './AlertsCell';\nexport { default as GroupResourcesCell } from './GroupResourcesCell';\nexport * from './CpuCell';\nexport * from './MemoryCell';\nexport * from './StatusCell';\nexport { default as TypedResourceBadgeCell } from './TypedResourceBadgeCell';\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { formatCores } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../../../utils/topology-utils';\nimport { useMetricStats } from '../../../utils/useMetricStats';\nimport MetricsTooltip from './MetricsTooltip';\n\nimport './MetricsCell.scss';\n\ntype CpuCellComponentProps = {\n  cpuByPod: any;\n  totalCores: number;\n};\n\nconst CpuCellComponent: React.FC<CpuCellComponentProps> = React.memo(({ cpuByPod, totalCores }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-topology-list-view__metrics-cell__detail--cpu\">\n      <MetricsTooltip metricLabel={t('topology~CPU')} byPod={cpuByPod}>\n        <span>\n          <span className=\"odc-topology-list-view__metrics-cell__metric-value\">\n            {formatCores(totalCores)}\n          </span>\n          &nbsp;\n          <span className=\"odc-topology-list-view__metrics-cell__metric-unit\">cores</span>\n        </span>\n      </MetricsTooltip>\n    </div>\n  );\n});\n\ntype CpuCellProps = {\n  item: Node;\n};\n\nconst CpuCell: React.FC<CpuCellProps> = ({ item }) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const memoryStats = useMetricStats(resource);\n\n  return (\n    <DataListCell id={`${item.getId()}_metrics`}>\n      {!memoryStats || !memoryStats.totalBytes || !memoryStats.totalCores ? null : (\n        <CpuCellComponent cpuByPod={memoryStats.cpuByPod} totalCores={memoryStats.totalCores} />\n      )}\n    </DataListCell>\n  );\n};\n\nexport { CpuCell, CpuCellComponent };\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { formatBytesAsMiB } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../../../utils/topology-utils';\nimport { useMetricStats } from '../../../utils/useMetricStats';\nimport MetricsTooltip from './MetricsTooltip';\n\nimport './MemoryCell.scss';\n\ntype MemoryCellProps = {\n  item: Node;\n};\n\ntype MemoryCellComponentProps = {\n  totalBytes: number;\n  memoryByPod: any;\n};\n\nconst MemoryCellComponent: React.FC<MemoryCellComponentProps> = React.memo(\n  ({ totalBytes, memoryByPod }) => (\n    <div className=\"odc-topology-list-view__metrics-cell__detail--memory\">\n      <MetricsTooltip metricLabel=\"Memory\" byPod={memoryByPod}>\n        <span>\n          <span className=\"odc-topology-list-view__metrics-cell__metric-value\">\n            {formatBytesAsMiB(totalBytes)}\n          </span>\n          &nbsp;\n          <span className=\"odc-topology-list-view__metrics-cell__metric-unit\">MiB</span>\n        </span>\n      </MetricsTooltip>\n    </div>\n  ),\n);\n\nconst MemoryCell: React.FC<MemoryCellProps> = ({ item }) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const memoryStats = useMetricStats(resource);\n\n  return (\n    <DataListCell id={`${item.getId()}_memory`}>\n      {!memoryStats || !memoryStats.totalBytes || !memoryStats.totalCores ? null : (\n        <MemoryCellComponent\n          totalBytes={memoryStats.totalBytes}\n          memoryByPod={memoryStats.memoryByPod}\n        />\n      )}\n    </DataListCell>\n  );\n};\n\nexport { MemoryCell, MemoryCellComponent };\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { resourceObjPath } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { K8sResourceKind, PodKind, podPhase } from '@console/internal/module/k8s';\nimport { usePodsWatcher, PodRCData } from '@console/shared';\nimport { getTopologyResourceObject } from '../../../utils/topology-utils';\n\nimport './StatusCell.scss';\n\ntype StatusCellResourceLinkProps = {\n  desired: number;\n  ready: number;\n  resource: K8sResourceKind;\n};\n\nconst StatusCellResourceLink: React.FC<StatusCellResourceLinkProps> = ({\n  desired = 0,\n  ready = 0,\n  resource,\n}) => {\n  const { t } = useTranslation();\n  const href = `${resourceObjPath(resource, resource.kind)}/pods`;\n  return (\n    <Link to={href}>\n      {t('topology~{{ready, number}} of {{count, number}} Pod', { ready, count: desired })}\n    </Link>\n  );\n};\n\ninterface StatusCellResourceStatus {\n  obj: K8sResourceKind;\n  podData: PodRCData;\n}\n\nconst StatusCellResourceStatus: React.FC<StatusCellResourceStatus> = ({ obj, podData }) => {\n  const { t } = useTranslation();\n  if (obj.kind === DaemonSetModel.kind) {\n    return (\n      <StatusCellResourceLink\n        desired={obj?.status?.desiredNumberScheduled}\n        ready={obj?.status?.currentNumberScheduled}\n        resource={obj}\n      />\n    );\n  }\n  if (obj.spec?.replicas === undefined) {\n    const href = `${resourceObjPath(obj, obj.kind)}/pods`;\n    const filteredPods = podData.pods?.filter((p) => podPhase(p as PodKind) !== 'Completed') ?? [];\n    if (!filteredPods.length) {\n      return null;\n    }\n    return <Link to={href}>{t('topology~{{length}} Pods', { length: filteredPods.length })}</Link>;\n  }\n\n  return podData.isRollingOut ? (\n    <span className=\"text-muted\">{t('topology~Rollout in progress...')}</span>\n  ) : (\n    <StatusCellResourceLink\n      desired={obj.spec.replicas}\n      ready={obj.status.replicas}\n      resource={podData.current ? podData.current.obj : obj}\n    />\n  );\n};\n\ntype StatusProps = {\n  item: Node;\n};\n\nconst StatusCell: React.FC<StatusProps> = ({ item }) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n\n  return (\n    <DataListCell id={`${item.getId()}_status`}>\n      <div className=\"odc-topology-list-view__detail--status\">\n        {loaded && !loadError ? (\n          <StatusCellResourceStatus obj={resource} podData={podData} />\n        ) : null}\n      </div>\n    </DataListCell>\n  );\n};\n\nexport { StatusCell, StatusCellResourceStatus };\n","let config;\n/**\n * Set the {@link UtilsConfig} reference.\n *\n * This must be done before using any of the Kubernetes utilities.\n */\nexport const setUtilsConfig = (c) => {\n    if (config !== undefined) {\n        throw new Error('setUtilsConfig has already been called');\n    }\n    config = Object.freeze(Object.assign({}, c));\n};\n/**\n * Get the {@link UtilsConfig} reference.\n *\n * Throws an error if the reference isn't already set.\n */\nexport const getUtilsConfig = () => {\n    if (config === undefined) {\n        throw new Error('setUtilsConfig has not been called');\n    }\n    return config;\n};\n//# sourceMappingURL=configSetup.js.map","export * from './core';\n//# sourceMappingURL=index.js.map","import { CustomError } from './custom-error';\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n    constructor(message, code, response, json) {\n        super(message);\n        this.code = code;\n        this.response = response;\n        this.json = json;\n    }\n    static fromCode(code) {\n        return new HttpError(HttpError.messages[code], code);\n    }\n}\nHttpError.messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Payload Too Large',\n    414: 'URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable',\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\",\n    421: 'Misdirected Request',\n    426: 'Upgrade Required',\n    428: 'Precondition Required',\n    429: 'Too Many Requests',\n    431: 'Request Header Fields Too Large',\n    451: 'Unavailable For Legal Reasons',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates',\n    510: 'Not Extended',\n    511: 'Network Authentication Required', // RFC 6585\n};\nexport class TimeoutError extends CustomError {\n    constructor(url, ms) {\n        super(`Call to ${url} timed out after ${ms}ms.`);\n        this.url = url;\n        this.ms = ms;\n    }\n}\nexport class IncompleteDataError extends CustomError {\n    constructor(labels) {\n        super(`Could not fetch all data. This data are missing: ${labels.join(', ')}.`);\n        this.labels = labels;\n    }\n}\nexport class RetryError extends CustomError {\n}\n//# sourceMappingURL=http-error.js.map","export { coreReducer } from './core';\nexport * from './coreSelectors';\n//# sourceMappingURL=index.js.map","export const k8sBasePath = `${window.SERVER_FLAGS.basePath}api/kubernetes`;\n//# sourceMappingURL=k8s.js.map","const createURL = (host, path) => {\n    let url;\n    if (host === 'auto') {\n        if (window.location.protocol === 'https:') {\n            url = 'wss://';\n        }\n        else {\n            url = 'ws://';\n        }\n        url += window.location.host;\n    }\n    else {\n        url = host;\n    }\n    if (path) {\n        url += path;\n    }\n    return url;\n};\n/**\n * @class WebSocket factory and utility wrapper.\n */\nexport class WSFactory {\n    /**\n     * @param id - unique id for the WebSocket.\n     * @param options - websocket options to initate the WebSocket with.\n     */\n    constructor(id, options) {\n        this.id = id;\n        this.options = options;\n        this.bufferMax = options.bufferMax || 0;\n        this.paused = false;\n        this.handlers = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n            destroy: [],\n            bulkmessage: [],\n        };\n        this.connect();\n        if (this.bufferMax) {\n            this.flushCanceler = setInterval(this.flushMessageBuffer.bind(this), this.options.bufferFlushInterval || 500);\n        }\n    }\n    reconnect() {\n        if (this.connectionAttempt || this.state === 'destroyed') {\n            return;\n        }\n        let delay = 1000;\n        const attempt = () => {\n            if (!this.options.reconnect || this.state === 'open') {\n                clearTimeout(this.connectionAttempt);\n                this.connectionAttempt = null;\n                return;\n            }\n            if (this.options.timeout && delay > this.options.timeout) {\n                clearTimeout(this.connectionAttempt);\n                this.connectionAttempt = null;\n                this.destroy();\n                return;\n            }\n            this.connect();\n            delay = Math.round(Math.min(1.5 * delay, 60000));\n            this.connectionAttempt = setTimeout(attempt, delay);\n            // eslint-disable-next-line no-console\n            console.log(`attempting reconnect in ${delay / 1000} seconds...`);\n        };\n        this.connectionAttempt = setTimeout(attempt, delay);\n    }\n    connect() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.state = 'init';\n        this.messageBuffer = [];\n        const url = createURL(this.options.host, this.options.path);\n        try {\n            this.ws = new WebSocket(url, this.options.subprotocols);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error creating websocket:', e);\n            this.reconnect();\n            return;\n        }\n        this.ws.onopen = function () {\n            // eslint-disable-next-line no-console\n            console.log(`websocket open: ${that.id}`);\n            that.state = 'open';\n            that.triggerEvent('open', undefined);\n            if (that.connectionAttempt) {\n                clearTimeout(that.connectionAttempt);\n                that.connectionAttempt = null;\n            }\n        };\n        this.ws.onclose = function (evt) {\n            // eslint-disable-next-line no-console\n            console.log(`websocket closed: ${that.id}`, evt);\n            that.state = 'closed';\n            that.triggerEvent('close', evt);\n            that.reconnect();\n        };\n        this.ws.onerror = function (evt) {\n            // eslint-disable-next-line no-console\n            console.log(`websocket error: ${that.id}`);\n            that.state = 'error';\n            that.triggerEvent('error', evt);\n        };\n        this.ws.onmessage = function (evt) {\n            var _a;\n            const msg = ((_a = that.options) === null || _a === void 0 ? void 0 : _a.jsonParse) ? JSON.parse(evt.data) : evt.data;\n            // In some browsers, onmessage can fire after onclose/error. Don't update state to be incorrect.\n            if (that.state !== 'destroyed' && that.state !== 'closed') {\n                that.state = 'open';\n            }\n            that.triggerEvent('message', msg);\n        };\n    }\n    registerHandler(type, fn) {\n        if (this.state === 'destroyed') {\n            return;\n        }\n        this.handlers[type].push(fn);\n    }\n    /**\n     * Invoke all registered handler callbacks for a given event type.\n     */\n    invokeHandlers(type, data) {\n        const handlers = this.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        handlers.forEach(function (h) {\n            try {\n                h(data);\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                console.error('WS handling failed:', e);\n            }\n        });\n    }\n    /**\n     * Triggers event to be buffered or invoked depending on config.\n     */\n    triggerEvent(type, event) {\n        if (this.state === 'destroyed') {\n            return;\n        }\n        // Only buffer \"message\" events, so \"error\" and \"close\" etc can pass thru.\n        if (this.bufferMax && type === 'message') {\n            this.messageBuffer.push(event);\n            if (this.messageBuffer.length > this.bufferMax) {\n                this.messageBuffer.shift();\n            }\n            return;\n        }\n        this.invokeHandlers(type, event);\n    }\n    onmessage(fn) {\n        this.registerHandler('message', fn);\n        return this;\n    }\n    onbulkmessage(fn) {\n        this.registerHandler('bulkmessage', fn);\n        return this;\n    }\n    onerror(fn) {\n        this.registerHandler('error', fn);\n        return this;\n    }\n    onopen(fn) {\n        this.registerHandler('open', fn);\n        return this;\n    }\n    onclose(fn) {\n        this.registerHandler('close', fn);\n        return this;\n    }\n    ondestroy(fn) {\n        this.registerHandler('destroy', fn);\n        return this;\n    }\n    flushMessageBuffer() {\n        if (this.paused) {\n            return;\n        }\n        if (!this.messageBuffer.length) {\n            return;\n        }\n        if (this.handlers.bulkmessage.length) {\n            this.invokeHandlers('bulkmessage', this.messageBuffer);\n        }\n        else {\n            this.messageBuffer.forEach((e) => this.invokeHandlers('message', e));\n        }\n        this.messageBuffer = [];\n    }\n    /**\n     *  Pausing prevents any buffer flushing until unpaused.\n     */\n    pause() {\n        this.paused = true;\n    }\n    unpause() {\n        this.paused = false;\n        this.flushMessageBuffer();\n    }\n    isPaused() {\n        return this.paused;\n    }\n    getState() {\n        return this.state;\n    }\n    bufferSize() {\n        return this.messageBuffer.length;\n    }\n    destroy(eventData) {\n        // eslint-disable-next-line no-console\n        console.log(`destroying websocket: ${this.id}`);\n        if (this.state === 'destroyed') {\n            return;\n        }\n        try {\n            if (this.ws) {\n                this.ws.close();\n            }\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error while close WS socket', e);\n        }\n        clearInterval(this.flushCanceler);\n        clearTimeout(this.connectionAttempt);\n        if (this.ws) {\n            this.ws.onopen = null;\n            this.ws.onclose = null;\n            this.ws.onerror = null;\n            this.ws.onmessage = null;\n            delete this.ws;\n        }\n        try {\n            this.triggerEvent('destroy', eventData);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error while trigger destroy event for WS socket', e);\n        }\n        this.state = 'destroyed';\n        this.messageBuffer = [];\n    }\n    send(data) {\n        this.ws && this.ws.send(data);\n    }\n}\n//# sourceMappingURL=ws-factory.js.map","export const getReduxIdPayload = (state, reduxId) => state.k8s.get(reduxId);\nexport const getK8sDataById = (state, id) => state.getIn([id, 'data']);\n//# sourceMappingURL=k8sSelector.js.map","import * as React from 'react';\nexport const usePrevious = (value, deps) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps || [value]);\n    return ref.current;\n};\n//# sourceMappingURL=usePrevious.js.map","import * as React from 'react';\nimport { QuickStart } from '@patternfly/quickstarts';\nimport { useTranslation } from 'react-i18next';\nimport QuickStartsLoader from '@console/app/src/components/quick-starts/loader/QuickStartsLoader';\nimport {\n  QuickSearchController,\n  QuickSearchProviders,\n  CatalogService,\n  CatalogServiceProvider,\n} from '@console/shared';\nimport { useTransformedQuickStarts } from './topology-quick-search-utils';\n\ninterface QuickSearchProps {\n  namespace: string;\n  viewContainer?: HTMLElement;\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}\n\nconst Contents: React.FC<\n  {\n    quickStarts: QuickStart[];\n    quickStartsLoaded: boolean;\n    catalogService: CatalogService;\n    catalogServiceSample: CatalogService;\n  } & QuickSearchProps\n> = ({\n  quickStarts,\n  quickStartsLoaded,\n  catalogService,\n  catalogServiceSample,\n  namespace,\n  viewContainer,\n  isOpen,\n  setIsOpen,\n}) => {\n  const { t } = useTranslation();\n\n  const DEFAULT_LIMIT_ITEM_COUNT = 5;\n  const quickStartItems = useTransformedQuickStarts(quickStarts);\n  const quickSearchProviders: QuickSearchProviders = [\n    {\n      catalogType: 'devCatalog',\n      items: catalogService.items,\n      loaded: catalogService.loaded,\n      getCatalogURL: (searchTerm: string, ns: string) => `/catalog/ns/${ns}?keyword=${searchTerm}`,\n      // t('topology~View all developer catalog items ({{itemCount, number}})')\n      catalogLinkLabel: 'topology~View all developer catalog items ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n    {\n      catalogType: 'quickStarts',\n      items: quickStartItems,\n      loaded: quickStartsLoaded,\n      getCatalogURL: (searchTerm: string) => `/quickstart?keyword=${searchTerm}`,\n      // t('topology~View all quick starts ({{itemCount, number}})'\n      catalogLinkLabel: 'topology~View all quick starts ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n    {\n      catalogType: 'Samples',\n      items: catalogServiceSample.items,\n      loaded: catalogServiceSample.loaded,\n      getCatalogURL: (searchTerm: string, ns: string) => `/samples/ns/${ns}?keyword=${searchTerm}`,\n      // t('topology~View all samples ({{itemCount, number}})'\n      catalogLinkLabel: 'topology~View all samples ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n  ];\n  return (\n    <QuickSearchController\n      quickSearchProviders={quickSearchProviders}\n      allItemsLoaded={catalogService.loaded && quickStartsLoaded}\n      searchPlaceholder={`${t('topology~Add to Project')}...`}\n      namespace={namespace}\n      viewContainer={viewContainer}\n      isOpen={isOpen}\n      limitItemCount={DEFAULT_LIMIT_ITEM_COUNT}\n      setIsOpen={setIsOpen}\n    />\n  );\n};\n\nconst TopologyQuickSearch: React.FC<QuickSearchProps> = ({\n  namespace,\n  viewContainer,\n  isOpen,\n  setIsOpen,\n}) => {\n  return (\n    <CatalogServiceProvider namespace={namespace} catalogId=\"dev-catalog\">\n      {(catalogService: CatalogService) => (\n        <CatalogServiceProvider namespace={namespace} catalogId=\"samples-catalog\">\n          {(catalogServiceSample: CatalogService) => (\n            <QuickStartsLoader>\n              {(quickStarts, quickStartsLoaded) => (\n                <Contents\n                  {...{\n                    namespace,\n                    viewContainer,\n                    isOpen,\n                    setIsOpen,\n                    catalogService,\n                    catalogServiceSample,\n                    quickStarts,\n                    quickStartsLoaded,\n                  }}\n                />\n              )}\n            </QuickStartsLoader>\n          )}\n        </CatalogServiceProvider>\n      )}\n    </CatalogServiceProvider>\n  );\n};\n\nexport default React.memo(TopologyQuickSearch);\n","import * as React from 'react';\nimport { QuickStart } from '@patternfly/quickstarts';\nimport { TextList, TextListItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport { useQuickStartContext } from '@console/shared/src/hooks/useQuickStartContext';\n\nexport const useTransformedQuickStarts = (quickStarts: QuickStart[]): CatalogItem[] => {\n  const { setActiveQuickStart } = useQuickStartContext();\n  const { t } = useTranslation();\n  return React.useMemo(\n    () =>\n      quickStarts.map((qs: QuickStart) => {\n        const prerequisites = qs.spec.prerequisites?.filter((p) => p);\n        const description = (\n          <>\n            <p>{qs.spec.description}</p>\n            {prerequisites?.length > 0 && (\n              <>\n                <h5>{t('topology~Prerequisites')}</h5>\n                <TextList>\n                  {prerequisites.map((prerequisite, index) => (\n                    // eslint-disable-next-line react/no-array-index-key\n                    <TextListItem key={index}>{prerequisite}</TextListItem>\n                  ))}\n                </TextList>\n              </>\n            )}\n          </>\n        );\n        return {\n          name: qs.spec.displayName,\n          type: t('topology~Quick Starts'),\n          uid: qs.metadata.uid,\n          cta: {\n            callback: () => setActiveQuickStart(qs.metadata.name, qs.spec.tasks?.length),\n            label: t('topology~Start'),\n          },\n          icon: {\n            url: qs.spec.icon as string,\n          },\n          description,\n        };\n      }),\n    [t, quickStarts, setActiveQuickStart],\n  );\n};\n","import * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport QuickSearchIcon from '@console/shared/src/components/quick-search/QuickSearchIcon';\nimport './TopologyQuickSearchButton.scss';\n\ninterface QuickSearchButtonProps {\n  onClick: () => void;\n}\n\nconst TopologyQuickSearchButton: React.FC<QuickSearchButtonProps> = ({ onClick }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip position=\"right\" content={t('topology~Add to Project')}>\n      <Button\n        className=\"odc-topology-quick-search-button\"\n        data-test=\"quick-search\"\n        variant=\"plain\"\n        onClick={(e) => {\n          e.stopPropagation();\n          onClick();\n        }}\n        aria-label={t('topology~Quick search button')}\n      >\n        <QuickSearchIcon />\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default TopologyQuickSearchButton;\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  useK8sWatchResources,\n  YellowExclamationTriangleIcon,\n} from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind, ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { checkQuotaLimit } from '@console/topology/src/components/utils/checkResourceQuota';\n\nexport interface ResourceQuotaAlertProps {\n  namespace: string;\n}\n\nexport const ResourceQuotaAlert: React.FC<ResourceQuotaAlertProps> = ({ namespace }) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [warningMessageFlag, setWarningMessageFlag] = React.useState<boolean>();\n  const [resourceQuotaName, setResourceQuotaName] = React.useState(null);\n  const [resourceQuotaKind, setResourceQuotaKind] = React.useState(null);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      resourcequotas: {\n        groupVersionKind: {\n          kind: ResourceQuotaModel.kind,\n          version: ResourceQuotaModel.apiVersion,\n        },\n        namespace,\n        isList: true,\n      },\n      appliedclusterresourcequotas: {\n        groupVersionKind: {\n          kind: AppliedClusterResourceQuotaModel.kind,\n          version: AppliedClusterResourceQuotaModel.apiVersion,\n          group: AppliedClusterResourceQuotaModel.apiGroup,\n        },\n        namespace,\n        isList: true,\n      },\n    }),\n    [namespace],\n  );\n\n  const { resourcequotas, appliedclusterresourcequotas } = useK8sWatchResources<{\n    resourcequotas: ResourceQuotaKind[];\n    appliedclusterresourcequotas: AppliedClusterResourceQuotaKind[];\n  }>(watchedResources);\n\n  const [totalRQatQuota = [], quotaName, quotaKind] = React.useMemo(\n    () =>\n      resourcequotas.loaded && !resourcequotas.loadError\n        ? checkQuotaLimit(resourcequotas.data)\n        : [],\n    [resourcequotas],\n  );\n\n  const [totalACRQatQuota = [], clusterRQName, clusterRQKind] = React.useMemo(\n    () =>\n      appliedclusterresourcequotas.loaded && !appliedclusterresourcequotas.loadError\n        ? checkQuotaLimit(appliedclusterresourcequotas.data)\n        : [],\n    [appliedclusterresourcequotas],\n  );\n\n  let totalResourcesAtQuota = React.useMemo(() => [...totalRQatQuota, ...totalACRQatQuota], [\n    totalRQatQuota,\n    totalACRQatQuota,\n  ]);\n  totalResourcesAtQuota = totalResourcesAtQuota.filter((resourceAtQuota) => resourceAtQuota !== 0);\n\n  React.useEffect(() => {\n    if (totalResourcesAtQuota.length === 1) {\n      setResourceQuotaName(quotaName || clusterRQName);\n      setResourceQuotaKind(quotaKind || clusterRQKind);\n    } else {\n      setResourceQuotaName(null);\n      setResourceQuotaKind(null);\n    }\n  }, [clusterRQKind, clusterRQName, totalResourcesAtQuota, quotaKind, quotaName]);\n\n  React.useEffect(() => {\n    if (totalResourcesAtQuota.length > 0) {\n      setWarningMessageFlag(true);\n    } else {\n      setWarningMessageFlag(false);\n    }\n  }, [totalResourcesAtQuota]);\n\n  const getRedirectLink = () => {\n    if (resourceQuotaName && resourceQuotaKind === AppliedClusterResourceQuotaModel.kind) {\n      return resourcePathFromModel(AppliedClusterResourceQuotaModel, resourceQuotaName, namespace);\n    }\n    if (resourceQuotaName) {\n      return resourcePathFromModel(ResourceQuotaModel, resourceQuotaName, namespace);\n    }\n    return resourcePathFromModel(ResourceQuotaModel, null, namespace);\n  };\n\n  const onResourceQuotaLinkClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Label Clicked');\n  };\n\n  return (\n    <>\n      {warningMessageFlag && resourcequotas.loaded && appliedclusterresourcequotas.loaded ? (\n        <Label color=\"orange\" icon={<YellowExclamationTriangleIcon />}>\n          <Link\n            to={getRedirectLink()}\n            data-test=\"resource-quota-warning\"\n            onClick={onResourceQuotaLinkClick}\n          >\n            {t('devconsole~{{count}} resource reached quota', {\n              count: totalResourcesAtQuota.reduce((a, b) => a + b, 0),\n            })}\n          </Link>\n        </Label>\n      ) : null}\n    </>\n  );\n};\n\nexport default ResourceQuotaAlert;\n","import { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { ResourceQuotaModel } from '@console/internal/models';\n\ntype ResourceQuotaReturnItems = [number[], string, string];\n\nexport const checkQuotaLimit = (resourceQuotas: any): ResourceQuotaReturnItems => {\n  let quotaName = '';\n  let quotaKind = '';\n  const resourceQuotaResources = resourceQuotas.map((quota) => {\n    let resourcesAtQuota;\n    if (quota?.kind === ResourceQuotaModel.kind) {\n      resourcesAtQuota = Object.keys(quota?.status?.hard || {}).reduce(\n        (acc, resource) =>\n          getUsedPercentage(quota?.status?.hard[resource], quota?.status?.used?.[resource]) >= 100\n            ? acc + 1\n            : acc,\n        0,\n      );\n    } else {\n      resourcesAtQuota = Object.keys(quota?.status?.total?.hard || {}).reduce(\n        (acc, resource) =>\n          getUsedPercentage(\n            quota?.status?.total?.hard[resource],\n            quota?.status?.total?.used?.[resource],\n          ) >= 100\n            ? acc + 1\n            : acc,\n        0,\n      );\n    }\n\n    if (resourcesAtQuota > 0) {\n      quotaName = quota.metadata.name;\n      quotaKind = quota.kind;\n    }\n    return resourcesAtQuota;\n  });\n  return [resourceQuotaResources, quotaName, quotaKind];\n};\n","import * as React from 'react';\nimport { Button, AlertVariant, Flex, FlexItem } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport {\n  ModalTitle,\n  ModalBody,\n  ModalComponentProps,\n  ModalFooter,\n  createModalLauncher,\n} from '@console/internal/components/factory/modal';\nimport { dateTimeFormatter } from '@console/internal/components/utils/datetime';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  USERSETTINGS_PREFIX,\n  useUserSettings,\n  TOAST_TIMEOUT_DEFAULT,\n  TOAST_TIMEOUT_LONG,\n} from '@console/shared/src';\nimport { ToastContextType } from '@console/shared/src/components/toast/ToastContext';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport {\n  createExportResource,\n  getExportAppData,\n  getExportResource,\n  killExportResource,\n} from '../../utils/export-app-utils';\nimport ExportViewLogButton from './ExportViewLogButton';\nimport { ExportAppUserSettings } from './types';\n\nexport type ExportApplicationModalProps = ModalComponentProps & {\n  name: string;\n  namespace: string;\n  toast?: ToastContextType;\n  exportResource?: K8sResourceKind;\n};\n\nexport const ExportApplicationModal: React.FC<ExportApplicationModalProps> = (props) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const { cancel, name, namespace, exportResource, toast } = props;\n  const [startTime, setStartTime] = React.useState<string>(null);\n  const [errMessage, setErrMessage] = React.useState<string>('');\n  const [exportAppToast, setExportAppToast] = useUserSettings<ExportAppUserSettings>(\n    `${USERSETTINGS_PREFIX}.exportApp`,\n    {},\n    true,\n  );\n\n  React.useEffect(() => {\n    if (exportResource && exportResource.status?.completed !== true) {\n      setStartTime(dateTimeFormatter().format(new Date(exportResource.metadata.creationTimestamp)));\n    }\n  }, [exportResource]);\n\n  const createExportCR = async () => {\n    try {\n      const exportRes = await createExportResource(getExportAppData(name, namespace));\n      fireTelemetryEvent('Export Application Started');\n      const key = `${namespace}-${name}`;\n      const exportAppToastConfig = {\n        ...exportAppToast,\n        [key]: {\n          groupVersionKind: getGroupVersionKindForResource(exportRes),\n          uid: exportRes.metadata.uid,\n          name,\n          namespace,\n        },\n      };\n      toast?.addToast({\n        variant: AlertVariant.info,\n        title: t('topology~Export application'),\n        content: (\n          <>\n            <Trans t={t} ns=\"topology\">\n              Export of resources in <strong>{{ namespace }}</strong> has started.\n            </Trans>\n            <ExportViewLogButton name={name} namespace={namespace} />\n          </>\n        ),\n        dismissible: true,\n        timeout: TOAST_TIMEOUT_LONG,\n      });\n      setExportAppToast(exportAppToastConfig);\n    } catch (error) {\n      toast?.addToast({\n        variant: AlertVariant.danger,\n        title: t('topology~Export application'),\n        content: (\n          <Trans t={t} ns=\"topology\">\n            Export of resources in <strong>{{ namespace }}</strong> has failed with error:{' '}\n            {error.message}\n          </Trans>\n        ),\n        dismissible: true,\n        timeout: TOAST_TIMEOUT_DEFAULT,\n      });\n    }\n  };\n\n  const killExportCR = async (): Promise<boolean> => {\n    if (exportResource) {\n      await killExportResource(exportResource);\n    }\n    return true;\n  };\n\n  const restartExportCR = async (): Promise<boolean> => {\n    try {\n      if (exportResource) {\n        await killExportResource(exportResource);\n      }\n      const exportRes = await getExportResource(name, namespace);\n      if (exportRes) {\n        setTimeout(createExportCR, 2000);\n      } else {\n        await createExportCR();\n      }\n    } catch (err) {\n      createExportCR().catch((createError) =>\n        // eslint-disable-next-line no-console\n        console.warn('Could not createExportCR:', createError),\n      );\n    }\n    return true;\n  };\n\n  const handleStartExport = async () => {\n    try {\n      if (exportResource && exportResource.status?.completed) {\n        await killExportResource(exportResource);\n        const exportAppToastConfig = _.omit(exportAppToast, `${namespace}-${name}`);\n        setExportAppToast(exportAppToastConfig);\n        await createExportCR();\n      } else {\n        await createExportCR();\n      }\n    } catch (error) {\n      createExportCR().catch((createError) =>\n        // eslint-disable-next-line no-console\n        console.warn('Could not createExportCR:', createError),\n      );\n    }\n    cancel();\n  };\n\n  const handleCancel = async () => {\n    try {\n      await killExportCR();\n      cancel();\n    } catch (err) {\n      setErrMessage(err.message);\n    }\n  };\n\n  const handleRestart = async () => {\n    try {\n      await restartExportCR();\n      cancel();\n    } catch (err) {\n      setErrMessage(err.message);\n    }\n  };\n  const exportInProgress = exportResource && exportResource.status?.completed !== true;\n\n  return (\n    <div className=\"modal-content\" data-test=\"export-application-modal\">\n      <ModalTitle>{t('topology~Export Application')}</ModalTitle>\n      <ModalBody>\n        {exportInProgress ? (\n          startTime ? (\n            <Trans t={t} ns=\"topology\">\n              Application export in <strong>{{ namespace }}</strong> is in progress. Started at{' '}\n              {{ startTime }}.\n            </Trans>\n          ) : (\n            <Trans t={t} ns=\"topology\">\n              Application export in <strong>{{ namespace }}</strong> is in progress.\n            </Trans>\n          )\n        ) : (\n          <Trans t={t} ns=\"topology\">\n            Do you want to export your application?\n          </Trans>\n        )}\n      </ModalBody>\n      <ModalFooter inProgress={false} errorMessage={errMessage}>\n        <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n          <FlexItem>\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              data-test={exportInProgress ? 'export-cancel-btn' : 'cancel-btn'}\n              onClick={() => (exportInProgress ? handleCancel() : cancel())}\n            >\n              {exportInProgress ? t('topology~Cancel Export') : t('topology~Cancel')}\n            </Button>\n          </FlexItem>\n          {exportInProgress && (\n            <>\n              <FlexItem>\n                <Button\n                  type=\"button\"\n                  variant=\"secondary\"\n                  data-test=\"export-restart-btn\"\n                  onClick={handleRestart}\n                >\n                  {t('topology~Restart Export')}\n                </Button>\n              </FlexItem>\n              <FlexItem>\n                <ExportViewLogButton name={name} namespace={namespace} onViewLog={cancel} />\n              </FlexItem>\n            </>\n          )}\n          <FlexItem>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              data-test={\n                exportResource && exportResource.status?.completed !== true\n                  ? 'export-close-btn'\n                  : 'close-btn'\n              }\n              onClick={() =>\n                exportResource && exportResource.status?.completed !== true\n                  ? cancel()\n                  : handleStartExport()\n              }\n            >\n              {t('topology~OK')}\n            </Button>\n          </FlexItem>\n        </Flex>\n      </ModalFooter>\n    </div>\n  );\n};\n\nexport const exportApplicationModal = createModalLauncher<ExportApplicationModalProps>(\n  ExportApplicationModal,\n);\n\nexport const handleExportApplication = async (\n  name: string,\n  namespace: string,\n  toast: ToastContextType,\n) => {\n  try {\n    const exportRes = await getExportResource(name, namespace);\n    exportApplicationModal({\n      name,\n      namespace,\n      exportResource: exportRes,\n      toast,\n    });\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Error while getting export resource:', err);\n    exportApplicationModal({\n      name,\n      namespace,\n      toast,\n    });\n  }\n};\n","import { k8sCreate, k8sGet, k8sKill, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ExportModel } from '../models/gitops-primer';\n\nexport const getExportAppData = (name: string, namespace: string) => {\n  return {\n    apiVersion: `${ExportModel.apiGroup}/${ExportModel.apiVersion}`,\n    kind: ExportModel.kind,\n    metadata: {\n      name,\n      namespace,\n    },\n    spec: {\n      method: 'download',\n    },\n  };\n};\n\nexport const createExportResource = (res: K8sResourceKind) => k8sCreate(ExportModel, res);\n\nexport const getExportResource = (name: string, namespace: string) =>\n  k8sGet(ExportModel, name, namespace);\n\nexport const killExportResource = (res: K8sResourceKind) => k8sKill(ExportModel, res);\n","import * as React from 'react';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePath, history } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { JobModel, PodModel } from '@console/internal/models';\nimport { PodKind, JobKind } from '@console/internal/module/k8s';\nimport { isModifiedEvent } from '@console/shared';\nimport { EXPORT_JOB_PREFIX } from '../../const';\n\ninterface ExportViewLogButtonProps {\n  name: string;\n  namespace: string;\n  onViewLog?: () => void;\n}\n\nconst ExportViewLogButton: React.FC<ExportViewLogButtonProps> = ({\n  name,\n  namespace,\n  onViewLog,\n}) => {\n  const { t } = useTranslation();\n  const [job, jobLoaded] = useK8sWatchResource<JobKind>({\n    kind: JobModel.kind,\n    name: EXPORT_JOB_PREFIX + name,\n    namespace,\n    isList: false,\n  });\n\n  const podResource = React.useMemo(\n    () =>\n      jobLoaded && job?.metadata\n        ? {\n            kind: PodModel.kind,\n            isList: false,\n            namespace: job.metadata.namespace,\n            selector: job.spec.selector,\n          }\n        : null,\n    [job, jobLoaded],\n  );\n\n  const [podData, podLoaded] = useK8sWatchResource<PodKind>(podResource);\n\n  const path =\n    podLoaded &&\n    podData?.kind === PodModel?.kind &&\n    podData?.metadata &&\n    `${resourcePath(PodModel.kind, podData?.metadata.name, podData?.metadata.namespace)}/logs`;\n\n  const viewLog = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    e.preventDefault();\n    history.push(path);\n    onViewLog?.();\n  };\n\n  const linkedButton = (\n    <Button\n      component=\"a\"\n      variant=\"link\"\n      data-test=\"export-view-log-btn\"\n      href={path}\n      onClick={viewLog}\n    >\n      {t('topology~View Logs')}\n    </Button>\n  );\n  const disabledButton = (\n    <Tooltip content={t('topology~Logs not available yet')}>\n      <Button component=\"a\" variant=\"link\" data-test=\"export-view-log-btn\" isAriaDisabled>\n        {t('topology~View Logs')}\n      </Button>\n    </Tooltip>\n  );\n\n  return path ? linkedButton : disabledButton;\n};\n\nexport default ExportViewLogButton;\n","import * as React from 'react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport {\n  BuildConfigModel,\n  DeploymentConfigModel,\n  ImageStreamImportsModel,\n  ImageStreamModel,\n  RouteModel,\n  SecretModel,\n  ServiceModel,\n} from '@console/internal/models';\nimport { AccessReviewResourceAttributes, K8sKind } from '@console/internal/module/k8s';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport { useFlag } from '@console/shared';\nimport { allCatalogImageResourceAccess, allImportResourceAccess } from '../actions/add-resources';\nimport { SERVICE_BINDING_ENABLED } from '../const';\n\nconst resourceAttributes = (model: K8sKind, namespace: string): AccessReviewResourceAttributes => {\n  return {\n    group: model.apiGroup || '',\n    resource: model.plural,\n    namespace,\n    verb: 'create',\n  };\n};\n\nexport const useAddToProjectAccess = (activeNamespace: string): string[] => {\n  const buildConfigsAccess = useAccessReview(resourceAttributes(BuildConfigModel, activeNamespace));\n  const imageStreamAccess = useAccessReview(resourceAttributes(ImageStreamModel, activeNamespace));\n  const deploymentConfigAccess = useAccessReview(\n    resourceAttributes(DeploymentConfigModel, activeNamespace),\n  );\n  const imageStreamImportAccess = useAccessReview(\n    resourceAttributes(ImageStreamImportsModel, activeNamespace),\n  );\n  const secretAccess = useAccessReview(resourceAttributes(SecretModel, activeNamespace));\n  const routeAccess = useAccessReview(resourceAttributes(RouteModel, activeNamespace));\n  const serviceAccess = useAccessReview(resourceAttributes(ServiceModel, activeNamespace));\n\n  const serviceBindingEnabled = useFlag(ALLOW_SERVICE_BINDING_FLAG);\n\n  return React.useMemo(() => {\n    const createResourceAccess: string[] = [];\n    if (\n      buildConfigsAccess &&\n      imageStreamAccess &&\n      deploymentConfigAccess &&\n      secretAccess &&\n      routeAccess &&\n      serviceAccess\n    ) {\n      createResourceAccess.push(allImportResourceAccess);\n      if (imageStreamImportAccess) {\n        createResourceAccess.push(allCatalogImageResourceAccess);\n      }\n    }\n    if (serviceBindingEnabled) {\n      createResourceAccess.push(SERVICE_BINDING_ENABLED);\n    }\n    return createResourceAccess;\n  }, [\n    buildConfigsAccess,\n    deploymentConfigAccess,\n    imageStreamAccess,\n    imageStreamImportAccess,\n    routeAccess,\n    secretAccess,\n    serviceAccess,\n    serviceBindingEnabled,\n  ]);\n};\n","import { Alert } from '@console/dynamic-plugin-sdk';\nimport * as _ from 'lodash';\nimport { PROMETHEUS_TENANCY_BASE_PATH } from '../graphs';\nimport { coFetchJSON } from '../../co-fetch';\nimport { getAlertsAndRules } from '../monitoring/utils';\nimport { getPrometheusURL, PrometheusEndpoint } from '../graphs/helpers';\n\nexport type MetricValuesByPod = {\n  [podName: string]: number;\n};\n\nexport type OverviewMetrics = {\n  cpu?: MetricValuesByPod;\n  memory?: MetricValuesByPod;\n};\n\n// Return codes indicating no retry\nexport const METRICS_FAILURE_CODES = [401, 403, 502, 503];\n\nexport const fetchOverviewMetrics = (\n  namespace: string,\n): Promise<{ [key: string]: MetricValuesByPod }> => {\n  if (!PROMETHEUS_TENANCY_BASE_PATH) {\n    return Promise.resolve(null);\n  }\n\n  const queries = {\n    memory: `sum(container_memory_working_set_bytes{namespace='${namespace}',container='',pod!=''}) BY (pod, namespace)`,\n    cpu: `pod:container_cpu_usage:sum{namespace=\"${namespace}\"}`,\n  };\n\n  const promises = _.map(queries, (query, name) => {\n    const url = `${PROMETHEUS_TENANCY_BASE_PATH}/api/v1/query?namespace=${namespace}&query=${encodeURIComponent(\n      query,\n    )}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      const byPod: MetricValuesByPod = result.reduce((acc, { metric, value }) => {\n        acc[metric.pod] = Number(value[1]);\n        return acc;\n      }, {});\n      return { [name]: byPod };\n    });\n  });\n\n  return Promise.all(promises).then((data) => {\n    return data.reduce(\n      (acc: OverviewMetrics, metric): OverviewMetrics => _.assign(acc, metric),\n      {},\n    );\n  });\n};\n\nexport const fetchMonitoringAlerts = (namespace: string): Promise<Alert[]> => {\n  if (!PROMETHEUS_TENANCY_BASE_PATH) {\n    return Promise.resolve(null);\n  }\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n  return coFetchJSON(url).then(({ data }) => {\n    const { alerts } = getAlertsAndRules(data);\n    return alerts;\n  });\n};\n","import * as React from 'react';\nimport {\n  DataList,\n  DataListCell,\n  DataListContent,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport { GraphElement, isNode, Node, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { getTitleForNodeKind } from '@console/shared';\nimport ListElementWrapper from './ListElementWrapper';\n\ninterface TopologyListViewKindGroupProps {\n  groupLabel: string;\n  kind: string;\n  childElements: GraphElement[];\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst TopologyListViewKindGroup: React.FC<TopologyListViewKindGroupProps> = ({\n  groupLabel,\n  kind,\n  childElements,\n  selectedIds,\n  onSelect,\n}) => {\n  const { t } = useTranslation();\n  const resourceLabel = getTitleForNodeKind(kind);\n\n  const childNodes = childElements.filter((n) => isNode(n)) as Node[];\n  childNodes.sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n\n  return (\n    <DataListItem\n      key={kind}\n      aria-labelledby={`${groupLabel}-${resourceLabel}-label`.replace(' ', '-')}\n      isExpanded\n    >\n      <DataListItemRow className=\"odc-topology-list-view__kind-row\">\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              key={kind}\n              className=\"odc-topology-list-view__kind-label\"\n              id={`${groupLabel}-${resourceLabel}-label`.replace(' ', '-')}\n            >\n              {resourceLabel}\n            </DataListCell>,\n          ]}\n        />\n      </DataListItemRow>\n      <DataListContent\n        aria-label={t('topology~{{groupLabel}} {{resourceLabel}}', { groupLabel, resourceLabel })}\n        id={`${groupLabel}-${resourceLabel}`}\n        isHidden={false}\n      >\n        <DataList\n          aria-label={t('topology~{{resourceLabel}} sub-resources', { resourceLabel })}\n          selectedDataListItemId={selectedIds[0]}\n          onSelectDataListItem={(_event, id) => onSelect(selectedIds[0] === id ? [] : [id])}\n        >\n          {childNodes.map((child) => (\n            <ListElementWrapper\n              key={child.getId()}\n              item={child}\n              selectedIds={selectedIds}\n              onSelect={onSelect}\n            />\n          ))}\n        </DataList>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nexport default observer(TopologyListViewKindGroup);\n","import * as React from 'react';\nimport { DataListCell, Tooltip } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Status as TooltipStatus,\n  useBuildConfigsWatcher,\n  getBuildAlerts,\n  getResourcePausedAlert,\n  usePodsWatcher,\n  useReplicationControllersWatcher,\n  getReplicationControllerAlerts,\n  useIsMobile,\n  OverviewItemAlerts,\n} from '@console/shared';\nimport { getResource } from '../../../utils';\nimport { useResourceQuotaAlert } from '../../workload';\n\nimport './AlertsCell.scss';\n\ntype AlertsProps = {\n  item: Node;\n};\n\nconst AlertTooltip = ({ alerts, severity, isMobile }) => {\n  if (!alerts) {\n    return null;\n  }\n\n  const count = alerts.length;\n  const message = _.uniq(alerts.map((a) => a.message)).join('\\n');\n\n  const status = (\n    <span className=\"odc-topology-list-view__alert-cell--status\">\n      <TooltipStatus status={severity} title={String(count)} />\n    </span>\n  );\n\n  // No tooltip on mobile since a touch also opens the sidebar, which\n  // immediately covers the tooltip content.\n  if (isMobile) {\n    return status;\n  }\n\n  const tipContent = [\n    <span key=\"message\" className=\"co-pre-wrap\">\n      {message}\n    </span>,\n  ];\n  return (\n    <Tooltip content={tipContent} distance={10}>\n      {status}\n    </Tooltip>\n  );\n};\n\nconst AlertsCell: React.FC<AlertsProps> = ({ item }) => {\n  const { t } = useTranslation();\n  const isMobile = useIsMobile();\n  const resource = getResource(item);\n  const { podData, loaded } = usePodsWatcher(resource);\n  const { buildConfigs, loaded: buildConfigsLoaded } = useBuildConfigsWatcher(resource);\n  const { loaded: rcsLoaded, mostRecentRC } = useReplicationControllersWatcher(resource);\n  const workloadRqAlert = useResourceQuotaAlert(item);\n  const workloadRqAlerts: OverviewItemAlerts = workloadRqAlert\n    ? {\n        rqAlert: {\n          message: workloadRqAlert.content as string,\n          severity: workloadRqAlert.variant,\n        },\n      }\n    : {};\n\n  const currentAlerts = React.useMemo(() => {\n    if (loaded && podData.current) {\n      return podData.current.alerts;\n    }\n    return {};\n  }, [loaded, podData]);\n\n  const previousAlerts = React.useMemo(() => {\n    if (loaded && podData.previous) {\n      return podData.current.alerts;\n    }\n    return {};\n  }, [loaded, podData]);\n\n  const buildConfigAlerts = React.useMemo(() => {\n    if (buildConfigsLoaded && buildConfigs) {\n      return getBuildAlerts(buildConfigs);\n    }\n    return {};\n  }, [buildConfigsLoaded, buildConfigs]);\n\n  const rollOutAlerts = React.useMemo(() => {\n    if (rcsLoaded && mostRecentRC) {\n      return getReplicationControllerAlerts(mostRecentRC);\n    }\n    return {};\n  }, [mostRecentRC, rcsLoaded]);\n\n  const alerts = {\n    ...getResourcePausedAlert(resource),\n    ...rollOutAlerts,\n    ...buildConfigAlerts,\n    ...currentAlerts,\n    ...previousAlerts,\n    ...workloadRqAlerts,\n  };\n\n  if (alerts?.length) {\n    return null;\n  }\n\n  const {\n    error,\n    warning,\n    info,\n    buildNew,\n    buildPending,\n    buildRunning,\n    buildFailed,\n    buildError,\n  } = _.groupBy(alerts, 'severity');\n  return (\n    <DataListCell id={`${item.getId()}_alerts`}>\n      <div className=\"odc-topology-list-view__alert-cell\">\n        {(error || warning || info) && (\n          <div className=\"odc-topology-list-view__alert-cell__status\">\n            <span className=\"odc-topology-list-view__alert-cell__label\">\n              {t('topology~Alerts:')}\n            </span>\n            <AlertTooltip severity=\"Error\" alerts={error} isMobile={isMobile} />\n            <AlertTooltip severity=\"Warning\" alerts={warning} isMobile={isMobile} />\n            <AlertTooltip severity=\"Info\" alerts={info} isMobile={isMobile} />\n          </div>\n        )}\n        {(buildNew || buildPending || buildRunning || buildFailed || buildError) && (\n          <div className=\"odc-topology-list-view__alert-cell__status\">\n            <span className=\"odc-topology-list-view__alert-cell__label\">\n              {t('topology~Builds:')}\n            </span>\n            <AlertTooltip severity=\"New\" alerts={buildNew} isMobile={isMobile} />\n            <AlertTooltip severity=\"Pending\" alerts={buildPending} isMobile={isMobile} />\n            <AlertTooltip severity=\"Running\" alerts={buildRunning} isMobile={isMobile} />\n            <AlertTooltip severity=\"Failed\" alerts={buildFailed} isMobile={isMobile} />\n            <AlertTooltip severity=\"Error\" alerts={buildError} isMobile={isMobile} />\n          </div>\n        )}\n      </div>\n    </DataListCell>\n  );\n};\n\nexport default AlertsCell;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { useIsMobile } from '@console/shared';\n\ntype MetricsTooltipProps = {\n  metricLabel: string;\n  byPod: {\n    formattedValue: string;\n    name: string;\n    value: number;\n  }[];\n};\n\nconst MetricsTooltip: React.FC<MetricsTooltipProps> = ({ metricLabel, byPod, children }) => {\n  const { t } = useTranslation();\n  const isMobile = useIsMobile();\n\n  // Disable the tooltip on mobile since a touch also opens the sidebar, which\n  // immediately covers the tooltip content.\n  if (isMobile) {\n    return <>{children}</>;\n  }\n\n  const sortedMetrics = _.orderBy(byPod, ['value', 'name'], ['desc', 'asc']);\n  const content: any[] = _.isEmpty(sortedMetrics)\n    ? [\n        <React.Fragment key=\"no-metrics\">\n          {t('topology~No {{metricLabel}} metrics available.', { metricLabel })}\n        </React.Fragment>,\n      ]\n    : _.concat(\n        <div className=\"odc-topology-list-view__metrics-cell__tooltip-title\" key=\"#title\">\n          {t('topology~{{metricLabel}} usage by Pod', { metricLabel })}\n        </div>,\n        sortedMetrics.map(({ name, formattedValue }) => (\n          <div key={name} className=\"odc-topology-list-view__metrics-cell__metric-tooltip\">\n            <div className=\"odc-topology-list-view__metrics-cell__tooltip-name\">\n              <span className=\"no-wrap\">{truncateMiddle(name)}</span>\n            </div>\n            <div className=\"odc-topology-list-view__metrics-cell__metric-tooltip-value\">\n              {formattedValue}\n            </div>\n          </div>\n        )),\n      );\n\n  const keepLines = 6;\n  // Don't remove a single line to show a \"1 other\" message since there's space to show the last pod in that case.\n  // Make sure we always remove at least 2 lines if we truncate.\n  if (content.length > keepLines + 1) {\n    const numRemoved = content.length - keepLines;\n    content.splice(\n      keepLines,\n      numRemoved,\n      <div key=\"#removed-pods\">and {numRemoved} other pods</div>,\n    );\n  }\n\n  return (\n    <Tooltip content={content} distance={15}>\n      <>{children}</>\n    </Tooltip>\n  );\n};\n\nexport default MetricsTooltip;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { useQueryParams, useUserSettingsCompatibility } from '@console/shared';\nimport { ErrorBoundaryFallbackPage, withFallback } from '@console/shared/src/components/error';\nimport {\n  LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY,\n  LAST_TOPOLOGY_VIEW_LOCAL_STORAGE_KEY,\n  TOPOLOGY_VIEW_CONFIG_STORAGE_KEY,\n} from '../../const';\nimport DataModelProvider from '../../data-transforms/DataModelProvider';\nimport { TOPOLOGY_SEARCH_FILTER_KEY } from '../../filters';\nimport { FilterProvider } from '../../filters/FilterProvider';\nimport { TopologyViewType } from '../../topology-types';\nimport { usePreferredTopologyView } from '../../user-preferences/usePreferredTopologyView';\nimport TopologyDataRenderer from './TopologyDataRenderer';\nimport TopologyPageToolbar from './TopologyPageToolbar';\n\ninterface TopologyPageProps {\n  activeViewStorageKey?: string;\n  hideProjects?: boolean;\n  defaultViewType?: TopologyViewType;\n}\n\ntype PageContentsProps = {\n  viewType: TopologyViewType;\n};\n\nconst PageContents: React.FC<PageContentsProps> = ({ viewType }) => {\n  const { t } = useTranslation();\n  const { name: namespace } = useParams();\n\n  return namespace ? (\n    <TopologyDataRenderer viewType={viewType} />\n  ) : (\n    <CreateProjectListPage title={t('topology~Topology')}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"topology\">\n          Select a Project to view the topology\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\n\nexport const TopologyPage: React.FC<TopologyPageProps> = ({\n  activeViewStorageKey = LAST_TOPOLOGY_VIEW_LOCAL_STORAGE_KEY,\n  hideProjects = false,\n  defaultViewType = TopologyViewType.graph,\n}) => {\n  const [preferredTopologyView, preferredTopologyViewLoaded] = usePreferredTopologyView();\n  const [\n    topologyLastView,\n    setTopologyLastView,\n    isTopologyLastViewLoaded,\n  ] = useUserSettingsCompatibility<TopologyViewType>(\n    TOPOLOGY_VIEW_CONFIG_STORAGE_KEY,\n    activeViewStorageKey,\n    defaultViewType,\n  );\n  const params = useParams();\n\n  const loaded: boolean = preferredTopologyViewLoaded && isTopologyLastViewLoaded;\n\n  const topologyViewState = React.useMemo((): TopologyViewType => {\n    if (!loaded) {\n      return null;\n    }\n\n    if (preferredTopologyView === 'latest') {\n      return topologyLastView;\n    }\n\n    return (preferredTopologyView || topologyLastView) as TopologyViewType;\n  }, [loaded, preferredTopologyView, topologyLastView]);\n\n  const namespace = params.name;\n  const queryParams = useQueryParams();\n  const viewType =\n    (queryParams.get('view') as TopologyViewType) || topologyViewState || defaultViewType;\n\n  React.useEffect(() => {\n    const lastOverviewOpen = JSON.parse(\n      sessionStorage.getItem(LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY) ?? '{}',\n    );\n    if (loaded && namespace in lastOverviewOpen && !getQueryArgument('selectId')) {\n      setQueryArgument('selectId', lastOverviewOpen[namespace]);\n    }\n  }, [loaded, namespace]);\n\n  React.useEffect(() => {\n    if (!queryParams.get('view') && loaded) {\n      setQueryArgument('view', topologyViewState || defaultViewType);\n    }\n  }, [defaultViewType, topologyViewState, queryParams, loaded]);\n\n  const onViewChange = React.useCallback(\n    (newViewType: TopologyViewType) => {\n      setQueryArgument('view', newViewType);\n      setTopologyLastView(newViewType);\n    },\n    [setTopologyLastView],\n  );\n\n  const handleNamespaceChange = (ns: string) => {\n    if (ns !== namespace) {\n      removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n    }\n  };\n\n  const namespacedPageVariant = namespace\n    ? viewType === TopologyViewType.graph\n      ? NamespacedPageVariants.default\n      : NamespacedPageVariants.light\n    : NamespacedPageVariants.light;\n\n  return (\n    <FilterProvider>\n      <DataModelProvider namespace={namespace}>\n        <NamespacedPage\n          variant={namespacedPageVariant}\n          onNamespaceChange={handleNamespaceChange}\n          hideProjects={hideProjects}\n          toolbar={<TopologyPageToolbar viewType={viewType} onViewChange={onViewChange} />}\n          data-test-id={\n            viewType === TopologyViewType.graph ? 'topology-graph-page' : 'topology-list-page'\n          }\n        >\n          <PageContentsWithStartGuide viewType={viewType} />\n        </NamespacedPage>\n      </DataModelProvider>\n    </FilterProvider>\n  );\n};\n\nexport default withFallback(TopologyPage, ErrorBoundaryFallbackPage);\n","import { useUserSettings } from '@console/shared';\n\nconst PREFERRED_TOPOLOGY_VIEW_USER_SETTING_KEY = 'topology.preferredView';\n\nexport const usePreferredTopologyView = (): [string, boolean] => {\n  const [preferredTopologyView, , preferredTopologyViewLoaded] = useUserSettings<string>(\n    PREFERRED_TOPOLOGY_VIEW_USER_SETTING_KEY,\n  );\n  return [preferredTopologyView, preferredTopologyViewLoaded];\n};\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { StatusBox } from '@console/internal/components/utils';\nimport { ModelContext, ExtensibleModel } from '../../data-transforms/ModelContext';\nimport { TopologyViewType } from '../../topology-types';\nimport { DroppableTopologyComponent } from './DroppableTopologyComponent';\n\ninterface TopologyDataRendererProps {\n  viewType: TopologyViewType;\n}\n\nconst TopologyDataRenderer: React.FC<TopologyDataRendererProps> = observer(\n  function TopologyDataRenderer({ viewType }) {\n    const { t } = useTranslation();\n    const { namespace, model, loaded, loadError } = React.useContext<ExtensibleModel>(ModelContext);\n\n    return (\n      <StatusBox\n        skeleton={\n          viewType === TopologyViewType.list && (\n            <div className=\"co-m-pane__body skeleton-overview\">\n              <div className=\"skeleton-overview--head\" />\n              <div className=\"skeleton-overview--tile\" />\n              <div className=\"skeleton-overview--tile\" />\n              <div className=\"skeleton-overview--tile\" />\n            </div>\n          )\n        }\n        data={model}\n        label={t('topology~Topology')}\n        loaded={loaded}\n        loadError={loadError}\n      >\n        <DroppableTopologyComponent viewType={viewType} model={model} namespace={namespace} />\n      </StatusBox>\n    );\n  },\n);\n\nexport default TopologyDataRenderer;\n","import * as React from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { DropTarget, DropTargetConnector } from 'react-dnd';\nimport { NativeTypes } from 'react-dnd-html5-backend';\nimport { DropTargetMonitor } from 'react-dnd/lib/interfaces';\nimport {\n  FileUploadContextType,\n  FileUploadContext,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport withDragDropContext from '@console/internal/components/utils/drag-drop-context';\nimport { TopologyViewType } from '../../topology-types';\nimport TopologyView, { TopologyViewProps } from './TopologyView';\n\nconst boxTarget = {\n  drop(props, monitor) {\n    if (props.onDrop && monitor.isOver()) {\n      props.onDrop(monitor);\n    }\n  },\n};\n\nconst DroppableTopology = DropTarget(\n  NativeTypes.FILE,\n  boxTarget,\n  (connectObj: DropTargetConnector, monitor: DropTargetMonitor, props: TopologyViewProps) => {\n    return {\n      connectDropTarget: connectObj.dropTarget(),\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop() && props.canDropFile,\n    };\n  },\n)(TopologyView);\n\nexport const DroppableTopologyComponent = withDragDropContext<DroppableTopologyComponentProps>(\n  (props) => {\n    const { setFileUpload, extensions } = React.useContext<FileUploadContextType>(\n      FileUploadContext,\n    );\n\n    const handleFileDrop = (monitor: DropTargetMonitor) => {\n      if (!monitor) {\n        return;\n      }\n      const [file] = monitor.getItem().files;\n      if (!file) {\n        return;\n      }\n      setFileUpload(file);\n    };\n\n    return (\n      <DroppableTopology {...props} onDrop={handleFileDrop} canDropFile={extensions.length > 0} />\n    );\n  },\n);\n\nexport type DroppableTopologyComponentProps = {\n  model: Model;\n  namespace: string;\n  viewType: TopologyViewType;\n};\n","import * as React from 'react';\nimport { Drawer, DrawerContent, DrawerContentBody, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  GraphElement,\n  isGraph,\n  Model,\n  TopologyQuadrant,\n  Visualization,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { ConnectDropTarget, DropTargetMonitor } from 'react-dnd';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport {\n  FileUploadContextType,\n  FileUploadContext,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport { useAddToProjectAccess } from '@console/dev-console/src/utils/useAddToProjectAccess';\nimport {\n  useResolvedExtensions,\n  isTopologyCreateConnector as isDynamicTopologyCreateConnector,\n  isTopologyDecoratorProvider as isDynamicTopologyDecoratorProvider,\n  isTopologyDisplayFilters as isDynamicTopologyDisplayFilters,\n  TopologyCreateConnector as DynamicTopologyCreateConnector,\n  TopologyDecoratorProvider as DynamicTopologyDecoratorProvider,\n  TopologyDisplayFilters as DynamicTopologyDisplayFilters,\n  TopologyRelationshipProvider,\n  isTopologyRelationshipProvider,\n} from '@console/dynamic-plugin-sdk';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { getEventSourceStatus } from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { useDeepCompareMemoize, useQueryParams } from '@console/shared';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY } from '../../const';\nimport { updateModelFromFilters } from '../../data-transforms/updateModelFromFilters';\nimport {\n  isTopologyCreateConnector,\n  isTopologyDecoratorProvider,\n  isTopologyDisplayFilters,\n  TopologyCreateConnector,\n  TopologyDecoratorProvider,\n  TopologyDisplayFilters,\n} from '../../extensions/topology';\nimport {\n  getTopologySearchQuery,\n  TOPOLOGY_LABELS_FILTER_KEY,\n  TOPOLOGY_SEARCH_FILTER_KEY,\n  useAppliedDisplayFilters,\n  useDisplayFilters,\n} from '../../filters';\nimport { FilterContext } from '../../filters/FilterProvider';\nimport TopologyFilterBar from '../../filters/TopologyFilterBar';\nimport { setSupportedTopologyFilters, setSupportedTopologyKinds } from '../../redux/action';\nimport {\n  GraphData,\n  TopologyDecorator,\n  TopologyDisplayFilterType,\n  TopologyViewType,\n} from '../../topology-types';\nimport Topology from '../graph-view/Topology';\nimport TopologyListView from '../list-view/TopologyListView';\nimport TopologyQuickSearch from '../quick-search/TopologyQuickSearch';\nimport { isSidebarRenderable, SelectedEntityDetails } from '../side-bar/SelectedEntityDetails';\nimport TopologySideBar from '../side-bar/TopologySideBar';\nimport { LimitExceededState } from './LimitExceededState';\nimport TopologyEmptyState from './TopologyEmptyState';\n\nimport './TopologyView.scss';\n\nconst FILTER_ACTIVE_CLASS = 'odc-m-filter-active';\nconst MAX_NODES_LIMIT = 300;\n\ninterface StateProps {\n  application?: string;\n  eventSourceEnabled?: boolean;\n}\n\ninterface DispatchProps {\n  onSelectTab?: (name: string) => void;\n  onSupportedFiltersChange?: (supportedFilterIds: string[]) => void;\n  onSupportedKindsChange?: (supportedKinds: { [key: string]: number }) => void;\n}\n\nexport interface TopologyViewProps {\n  model: Model;\n  namespace: string;\n  viewType: TopologyViewType;\n  connectDropTarget?: ConnectDropTarget;\n  isOver?: boolean;\n  canDrop?: boolean;\n  onDrop?: (monitor: DropTargetMonitor) => void;\n  canDropFile?: boolean;\n}\n\ntype ComponentProps = TopologyViewProps & StateProps & DispatchProps;\n\nexport const ConnectedTopologyView: React.FC<ComponentProps> = ({\n  model,\n  namespace,\n  viewType,\n  eventSourceEnabled,\n  application,\n  onSupportedFiltersChange,\n  onSupportedKindsChange,\n  connectDropTarget,\n  isOver,\n  canDrop,\n}) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [viewContainer, setViewContainer] = React.useState<HTMLElement>(null);\n  const { setTopologyFilters: onFiltersChange } = React.useContext(FilterContext);\n  const [filteredModel, setFilteredModel] = React.useState<Model>();\n  const [selectedEntity, setSelectedEntity] = React.useState<GraphElement>(null);\n  const [visualization, setVisualization] = React.useState<Visualization>();\n  const [showTopologyAnyway, setShowTopologyAnyway] = React.useState(false);\n  const displayFilters = useDisplayFilters();\n  const filters = useDeepCompareMemoize(displayFilters);\n  const applicationRef = React.useRef<string>(null);\n  const createResourceAccess: string[] = useAddToProjectAccess(namespace);\n  const [isQuickSearchOpen, setIsQuickSearchOpen] = React.useState<boolean>(\n    typeof getQueryArgument('catalogSearch') === 'string',\n  );\n  const setIsQuickSearchOpenAndFireEvent = React.useCallback(\n    (open: boolean) => {\n      if (open) {\n        fireTelemetryEvent('Quick Search Accessed');\n      }\n      setIsQuickSearchOpen(open);\n    },\n    [fireTelemetryEvent],\n  );\n  const appliedFilters = useAppliedDisplayFilters();\n  const [displayFilterExtensions, displayFilterExtensionsResolved] = useResolvedExtensions<\n    TopologyDisplayFilters\n  >(isTopologyDisplayFilters);\n\n  const [createConnectors, createConnectorsResolved] = useResolvedExtensions<\n    TopologyCreateConnector\n  >(isTopologyCreateConnector);\n  const [extensionDecorators, extensionDecoratorsResolved] = useResolvedExtensions<\n    TopologyDecoratorProvider\n  >(isTopologyDecoratorProvider);\n\n  const [\n    dynamicDisplayFilterExtensions,\n    dynamicDisplayFilterExtensionsResolved,\n  ] = useResolvedExtensions<DynamicTopologyDisplayFilters>(isDynamicTopologyDisplayFilters);\n  const [dynamicCreateConnectors, dynamicCreateConnectorsResolved] = useResolvedExtensions<\n    DynamicTopologyCreateConnector\n  >(isDynamicTopologyCreateConnector);\n  const [dynamicExtensionDecorators, dynamicExtensionDecoratorsResolved] = useResolvedExtensions<\n    DynamicTopologyDecoratorProvider\n  >(isDynamicTopologyDecoratorProvider);\n  const [relationshipProvider] = useResolvedExtensions<TopologyRelationshipProvider>(\n    isTopologyRelationshipProvider,\n  );\n\n  const [topologyDecorators, setTopologyDecorators] = React.useState<{\n    [key: string]: TopologyDecorator[];\n  }>({});\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const queryParams = useQueryParams();\n  const { extensions: supportedFileExtensions } = React.useContext<FileUploadContextType>(\n    FileUploadContext,\n  );\n\n  const searchParams = queryParams.get(TOPOLOGY_SEARCH_FILTER_KEY);\n  const labelParams = queryParams.get(TOPOLOGY_LABELS_FILTER_KEY);\n  const fileTypes = supportedFileExtensions.map((ex) => `.${ex}`).toString();\n\n  const onSelect = React.useCallback(\n    (entity?: GraphElement) => {\n      // set empty selection when selecting the graph\n      const selEntity = isGraph(entity) ? undefined : entity;\n      setSelectedEntity(selEntity);\n      if (!selEntity) {\n        removeQueryArgument('selectId');\n        sessionStorage.removeItem(LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY);\n      } else {\n        setQueryArgument('selectId', selEntity.getId());\n        sessionStorage.setItem(\n          LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY,\n          JSON.stringify({ [namespace]: selEntity.getId() }),\n        );\n      }\n    },\n    [namespace],\n  );\n\n  const graphData: GraphData = React.useMemo(\n    () => ({\n      createResourceAccess,\n      namespace,\n      eventSourceEnabled,\n      createConnectorExtensions:\n        createConnectorsResolved && dynamicCreateConnectorsResolved\n          ? [...createConnectors, ...dynamicCreateConnectors].map(\n              (creator) => creator.properties.getCreateConnector,\n            )\n          : [],\n      decorators: topologyDecorators,\n      relationshipProviderExtensions: relationshipProvider,\n    }),\n    [\n      createConnectors,\n      createConnectorsResolved,\n      createResourceAccess,\n      dynamicCreateConnectors,\n      dynamicCreateConnectorsResolved,\n      eventSourceEnabled,\n      namespace,\n      relationshipProvider,\n      topologyDecorators,\n    ],\n  );\n\n  React.useEffect(() => {\n    if (visualization) {\n      visualization.getGraph().setData(graphData);\n    }\n  }, [visualization, graphData]);\n\n  React.useEffect(() => {\n    if (extensionDecoratorsResolved && dynamicExtensionDecoratorsResolved) {\n      const allDecorators = [...extensionDecorators, ...dynamicExtensionDecorators].reduce(\n        (acc, extensionDecorator) => {\n          const decorator: TopologyDecorator = extensionDecorator.properties;\n          if (!acc[decorator.quadrant]) {\n            acc[decorator.quadrant] = [];\n          }\n          acc[decorator.quadrant].push(decorator);\n          return acc;\n        },\n        {\n          [TopologyQuadrant.upperLeft]: [],\n          [TopologyQuadrant.upperRight]: [],\n          [TopologyQuadrant.lowerLeft]: [],\n          [TopologyQuadrant.lowerRight]: [],\n        },\n      );\n      Object.keys(allDecorators).forEach((key) =>\n        allDecorators[key].sort((a, b) => a.priority - b.priority),\n      );\n      setTopologyDecorators(allDecorators);\n    }\n  }, [\n    dynamicExtensionDecorators,\n    dynamicExtensionDecoratorsResolved,\n    extensionDecorators,\n    extensionDecoratorsResolved,\n  ]);\n\n  React.useEffect(() => {\n    if (displayFilterExtensionsResolved && dynamicDisplayFilterExtensionsResolved) {\n      const updateFilters = [...filters];\n      [...displayFilterExtensions, ...dynamicDisplayFilterExtensions].forEach((extension) => {\n        const extFilters = extension.properties.getTopologyFilters();\n        extFilters?.forEach((filter) => {\n          if (!updateFilters.find((f) => f.id === filter.id)) {\n            if (appliedFilters[filter.id] !== undefined) {\n              filter.value = appliedFilters[filter.id];\n            }\n            updateFilters.push(filters.find((f) => f.id === filter.id) || filter);\n          }\n        });\n        onFiltersChange(updateFilters);\n        setFiltersLoaded(true);\n      });\n    }\n    // Only update on extension changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    displayFilterExtensionsResolved,\n    dynamicDisplayFilterExtensionsResolved,\n    displayFilterExtensions,\n    dynamicDisplayFilterExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (filtersLoaded) {\n      const newModel = updateModelFromFilters(\n        model,\n        filters,\n        application,\n        [...displayFilterExtensions, ...dynamicDisplayFilterExtensions].map(\n          (extension) => extension.properties.applyDisplayOptions,\n        ),\n        onSupportedFiltersChange,\n        onSupportedKindsChange,\n      );\n      applicationRef.current = application;\n      setFilteredModel(newModel);\n    }\n  }, [\n    model,\n    filters,\n    application,\n    filtersLoaded,\n    onSupportedFiltersChange,\n    onSupportedKindsChange,\n    displayFilterExtensions,\n    dynamicDisplayFilterExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (filters.find((f) => f.type !== TopologyDisplayFilterType.kind)) {\n      const updatedFilters = filters.filter((f) => f.type !== TopologyDisplayFilterType.kind);\n      onFiltersChange(updatedFilters);\n    }\n    // Only clear kind filters on namespace change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    const searchQuery = getTopologySearchQuery();\n    if (searchQuery.length > 0) {\n      document.body.classList.add(FILTER_ACTIVE_CLASS);\n    } else {\n      document.body.classList.remove(FILTER_ACTIVE_CLASS);\n    }\n  }, [searchParams, labelParams]);\n\n  const nodesLength = filteredModel?.nodes?.length ?? 0;\n\n  const viewContent = React.useMemo(\n    () =>\n      nodesLength <= MAX_NODES_LIMIT || showTopologyAnyway ? (\n        viewType === TopologyViewType.list ? (\n          <TopologyListView\n            model={filteredModel}\n            namespace={namespace}\n            onSelect={onSelect}\n            setVisualization={setVisualization}\n          />\n        ) : (\n          <Topology\n            model={filteredModel}\n            namespace={namespace}\n            application={applicationRef.current}\n            onSelect={onSelect}\n            setVisualization={setVisualization}\n          />\n        )\n      ) : null,\n    [filteredModel, namespace, onSelect, viewType, nodesLength, showTopologyAnyway],\n  );\n\n  const isSidebarAvailable = isSidebarRenderable(selectedEntity);\n\n  if (!filteredModel) {\n    return null;\n  }\n\n  const topologyViewComponent = (\n    <div className=\"odc-topology\">\n      <Stack>\n        <StackItem isFilled={false}>\n          <TopologyFilterBar\n            viewType={viewType}\n            visualization={visualization}\n            setIsQuickSearchOpen={setIsQuickSearchOpenAndFireEvent}\n            isDisabled={\n              !model.nodes?.length || (nodesLength > MAX_NODES_LIMIT && !showTopologyAnyway)\n            }\n          />\n        </StackItem>\n        <StackItem isFilled className=\"pf-topology-container\">\n          <div className=\"co-file-dropzone co-file-dropzone__flex\">\n            <Drawer isExpanded={isSidebarAvailable} isInline>\n              <DrawerContent\n                panelContent={\n                  <TopologySideBar onClose={() => onSelect()}>\n                    <SelectedEntityDetails selectedEntity={selectedEntity} />\n                  </TopologySideBar>\n                }\n              >\n                <DrawerContentBody>\n                  <div\n                    ref={setViewContainer}\n                    className=\"pf-topology-content ocs-quick-search-modal__no-backdrop\"\n                  >\n                    {canDrop && isOver && (\n                      <div\n                        className={classNames(\n                          'co-file-dropzone-container',\n                          'co-file-dropzone--drop-over',\n                          'odc-topology__dropzone',\n                        )}\n                      >\n                        <span className=\"co-file-dropzone__drop-text odc-topology__dropzone-text\">\n                          {t('topology~Drop file ({{fileTypes}}) here', { fileTypes })}\n                        </span>\n                      </div>\n                    )}\n                    {nodesLength > MAX_NODES_LIMIT && !showTopologyAnyway ? (\n                      <LimitExceededState\n                        onShowTopologyAnyway={() => setShowTopologyAnyway(true)}\n                      />\n                    ) : (\n                      viewContent\n                    )}\n                    {!model.nodes?.length ? (\n                      <TopologyEmptyState setIsQuickSearchOpen={setIsQuickSearchOpenAndFireEvent} />\n                    ) : null}\n                  </div>\n                </DrawerContentBody>\n              </DrawerContent>\n            </Drawer>\n          </div>\n        </StackItem>\n        <TopologyQuickSearch\n          namespace={namespace}\n          viewContainer={viewContainer}\n          isOpen={isQuickSearchOpen}\n          setIsOpen={setIsQuickSearchOpenAndFireEvent}\n        />\n      </Stack>\n    </div>\n  );\n\n  return typeof connectDropTarget === 'function'\n    ? connectDropTarget(topologyViewComponent)\n    : topologyViewComponent;\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    application: getActiveApplication(state),\n    eventSourceEnabled: getEventSourceStatus(state),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onSelectTab: (name) => dispatch(selectOverviewDetailsTab(name)),\n  onSupportedFiltersChange: (supportedFilterIds: string[]) => {\n    dispatch(setSupportedTopologyFilters(supportedFilterIds));\n  },\n  onSupportedKindsChange: (supportedKinds: { [key: string]: number }) => {\n    dispatch(setSupportedTopologyKinds(supportedKinds));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, TopologyViewProps>(\n  TopologyStateToProps,\n  TopologyDispatchToProps,\n)(ConnectedTopologyView);\n","import { createAggregateEdges, Model, NodeModel } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { ALL_APPLICATIONS_KEY, UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src';\nimport { TYPE_AGGREGATE_EDGE, TYPE_APPLICATION_GROUP } from '../const';\nimport {\n  DEFAULT_SUPPORTED_FILTER_IDS,\n  EXPAND_APPLICATION_GROUPS_FILTER_ID,\n  isExpanded,\n  showKind,\n} from '../filters';\nimport { DisplayFilters, OdcNodeModel, TopologyApplyDisplayOptions } from '../topology-types';\nimport { getTopologyResourceObject } from '../utils/topology-utils';\n\nconst getApplicationGroupForNode = (node: NodeModel, groups: NodeModel[]): NodeModel => {\n  if (node.type === TYPE_APPLICATION_GROUP) {\n    return node;\n  }\n  const group = groups.find((g) => g.group && g.children?.includes(node.id));\n  if (!group) {\n    return null;\n  }\n  if (group.type === TYPE_APPLICATION_GROUP) {\n    return group;\n  }\n  return getApplicationGroupForNode(group, groups);\n};\n\nconst getNodeKind = (node: NodeModel) => {\n  let { resource } = node as OdcNodeModel;\n  if (resource) {\n    const ref = referenceFor(resource);\n    if (ref) {\n      return ref;\n    }\n  }\n  const kind = (node as OdcNodeModel).resourceKind;\n  if (kind) {\n    return kind;\n  }\n  resource = getTopologyResourceObject(node.data);\n  if (resource) {\n    return referenceFor(resource);\n  }\n\n  return null;\n};\n\nconst isNodeShown = (node: NodeModel, filters: DisplayFilters, allNodes: NodeModel[]): boolean => {\n  let shown = showKind(getNodeKind(node), filters);\n  if (!shown) {\n    const parentNode = allNodes.find(\n      (n) => n.group && n.type !== TYPE_APPLICATION_GROUP && n.children?.includes(node.id),\n    );\n    shown = parentNode && isNodeShown(parentNode, filters, allNodes);\n  }\n  return shown;\n};\n\nexport const updateModelFromFilters = (\n  model: Model,\n  filters: DisplayFilters,\n  application: string = ALL_APPLICATIONS_KEY,\n  displayFilterers?: TopologyApplyDisplayOptions[],\n  onSupportedFiltersChange?: (supportedFilterIds: string[]) => void,\n  onSupportedKindsChange?: (supportedFilterIds: { [key: string]: number }) => void,\n): Model => {\n  const dataModel: Model = {\n    nodes: _.cloneDeep(model.nodes),\n    edges: _.cloneDeep(model.edges),\n  };\n\n  const supportedFilters = [...DEFAULT_SUPPORTED_FILTER_IDS];\n  const supportedKinds = {};\n  let appGroupFound = false;\n  const expanded = isExpanded(EXPAND_APPLICATION_GROUPS_FILTER_ID, filters);\n  dataModel.nodes.forEach((d) => {\n    d.visible = true;\n    if (displayFilterers) {\n      displayFilterers.forEach((displayFilterer) => {\n        const appliedFilters = displayFilterer(dataModel, filters);\n        supportedFilters.push(...appliedFilters.filter((f) => !supportedFilters.includes(f)));\n      });\n    }\n    if (d.type === TYPE_APPLICATION_GROUP) {\n      if (!appGroupFound) {\n        appGroupFound = true;\n        supportedFilters.push(EXPAND_APPLICATION_GROUPS_FILTER_ID);\n      }\n      d.collapsed = !expanded;\n    }\n    const kind = getNodeKind(d);\n    if (kind) {\n      if (!supportedKinds[kind]) {\n        supportedKinds[kind] = 0;\n      }\n      supportedKinds[kind]++;\n    }\n  });\n\n  dataModel.nodes = dataModel.nodes.filter((d) => isNodeShown(d, filters, dataModel.nodes));\n\n  dataModel.nodes.forEach((d) => {\n    if (d.group && d.children) {\n      d.children = d.children.filter((id) => dataModel.nodes.find((n) => n.id === id));\n    }\n  });\n\n  // Flag any nodes hidden by the application filter\n  if (application !== ALL_APPLICATIONS_KEY) {\n    dataModel.nodes.forEach((g) => {\n      const group = getApplicationGroupForNode(g, dataModel.nodes);\n      g.visible =\n        (g.visible && group?.label === application) ||\n        (!group && application === UNASSIGNED_APPLICATIONS_KEY);\n    });\n  }\n\n  // create links from data, only include those which have a valid source and target\n  const edges = dataModel.edges.filter(\n    (d) =>\n      dataModel.nodes.find((n) => n.id === d.source) &&\n      dataModel.nodes.find((n) => n.id === d.target),\n  );\n\n  // Create any aggregate edges (those create from hidden endpoints)\n  dataModel.edges = createAggregateEdges(TYPE_AGGREGATE_EDGE, edges, dataModel.nodes);\n\n  if (onSupportedFiltersChange) {\n    onSupportedFiltersChange(supportedFilters);\n  }\n\n  if (onSupportedKindsChange) {\n    onSupportedKindsChange(supportedKinds);\n  }\n\n  return dataModel;\n};\n","import * as React from 'react';\nimport {\n  Toolbar,\n  ToolbarGroup,\n  ToolbarGroupVariant,\n  ToolbarItem,\n  ToolbarContent,\n  Popover,\n  Button,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { Visualization, isNode } from '@patternfly/react-topology';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport PDBAlert from '@console/app/src/components/pdb/PDBAlert';\nimport { ResourceQuotaAlert } from '@console/dev-console/src/components/resource-quota/ResourceQuotaAlert';\nimport { ExternalLink, setQueryArgument } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { requirementFromString } from '@console/internal/module/k8s/selector-requirement';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ServiceBindingWarningForTopology } from '@console/service-binding-plugin/src/components/service-binding-utils/ServiceBindingAlerts';\nimport { useFlag, useQueryParams } from '@console/shared';\nimport ExportApplication from '../components/export-app/ExportApplication';\nimport TopologyQuickSearchButton from '../components/quick-search/TopologyQuickSearchButton';\nimport { ALLOW_EXPORT_APP } from '../const';\nimport { TopologyViewType } from '../topology-types';\nimport { getResource } from '../utils';\nimport { getNamespaceDashboardKialiLink } from '../utils/topology-utils';\nimport {\n  clearAll,\n  clearLabelFilter,\n  clearNameFilter,\n  getSupportedTopologyFilters,\n  getSupportedTopologyKinds,\n  onSearchChange,\n  NameLabelFilterValues,\n  TOPOLOGY_LABELS_FILTER_KEY,\n  TOPOLOGY_SEARCH_FILTER_KEY,\n} from './filter-utils';\nimport FilterDropdown from './FilterDropdown';\nimport { FilterContext } from './FilterProvider';\nimport KindFilterDropdown from './KindFilterDropdown';\nimport NameLabelFilterDropdown from './NameLabelFilterDropdown';\nimport './TopologyFilterBar.scss';\n\ntype StateProps = {\n  supportedFilters: string[];\n  supportedKinds: { [key: string]: number };\n  namespace: string;\n};\n\ntype OwnProps = {\n  isDisabled: boolean;\n  visualization?: Visualization;\n  viewType: TopologyViewType;\n  setIsQuickSearchOpen: (isOpen: boolean) => void;\n};\n\ntype TopologyFilterBarProps = StateProps & OwnProps;\n\nconst TopologyFilterBar: React.FC<TopologyFilterBarProps> = ({\n  supportedFilters,\n  supportedKinds,\n  isDisabled,\n  visualization,\n  viewType,\n  namespace,\n  setIsQuickSearchOpen,\n}) => {\n  const { t } = useTranslation();\n  const { filters, setTopologyFilters: onFiltersChange } = React.useContext(FilterContext);\n  const [labelFilterInput, setLabelFilterInput] = React.useState('');\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const kialiLink = getNamespaceDashboardKialiLink(consoleLinks, namespace);\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get(TOPOLOGY_SEARCH_FILTER_KEY) || '';\n  const labelsQuery = queryParams.get(TOPOLOGY_LABELS_FILTER_KEY)?.split(',') || [];\n  const isExportApplicationEnabled = useFlag(ALLOW_EXPORT_APP);\n  const updateNameFilter = (value: string) => {\n    const query = value?.trim();\n    onSearchChange(query);\n  };\n\n  const updateLabelFilter = (value: string, endOfString: boolean) => {\n    setLabelFilterInput(value);\n    if (requirementFromString(value) !== undefined && endOfString) {\n      const updatedLabels = [...new Set([...labelsQuery, value])];\n      setQueryArgument(TOPOLOGY_LABELS_FILTER_KEY, updatedLabels.join(','));\n      setLabelFilterInput('');\n    }\n  };\n\n  const updateSearchFilter = (type: string, value: string, endOfString: boolean) => {\n    type === NameLabelFilterValues.Label\n      ? updateLabelFilter(value, endOfString)\n      : updateNameFilter(value);\n  };\n\n  const removeLabelFilter = (filter: string, value: string) => {\n    const newLabels = labelsQuery.filter((keepItem: string) => keepItem !== value);\n    newLabels.length > 0\n      ? setQueryArgument(TOPOLOGY_LABELS_FILTER_KEY, newLabels.join(','))\n      : clearLabelFilter();\n  };\n\n  const resources = (visualization?.getElements() || [])\n    .filter(isNode)\n    .map(getResource)\n    .filter((r) => !!r);\n\n  return (\n    <Toolbar className=\"co-namespace-bar odc-topology-filter-bar\" clearAllFilters={clearAll}>\n      <ToolbarContent>\n        <ToolbarItem>\n          <TopologyQuickSearchButton onClick={() => setIsQuickSearchOpen(true)} />\n        </ToolbarItem>\n        <ToolbarGroup variant={ToolbarGroupVariant['filter-group']}>\n          <ToolbarItem>\n            <FilterDropdown\n              filters={filters}\n              viewType={viewType}\n              supportedFilters={supportedFilters}\n              onChange={onFiltersChange}\n              isDisabled={isDisabled}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup variant={ToolbarGroupVariant['filter-group']}>\n          <ToolbarItem data-test=\"filter-by-resource\">\n            <KindFilterDropdown\n              filters={filters}\n              supportedKinds={supportedKinds}\n              onChange={onFiltersChange}\n              isDisabled={isDisabled}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup variant={ToolbarGroupVariant['filter-group']}>\n          <ToolbarItem>\n            <ToolbarFilter\n              deleteChipGroup={clearLabelFilter}\n              chips={[...labelsQuery]}\n              deleteChip={removeLabelFilter}\n              categoryName={t('topology~Label')}\n            >\n              <ToolbarFilter\n                chips={searchQuery.length > 0 ? [searchQuery] : []}\n                deleteChip={clearNameFilter}\n                categoryName={t('topology~Name')}\n              >\n                <NameLabelFilterDropdown\n                  onChange={updateSearchFilter}\n                  nameFilterInput={searchQuery}\n                  labelFilterInput={labelFilterInput}\n                  data={resources}\n                  isDisabled={isDisabled}\n                />\n              </ToolbarFilter>\n            </ToolbarFilter>\n          </ToolbarItem>\n          {viewType === TopologyViewType.graph ? (\n            <ToolbarItem>\n              <Popover\n                aria-label={t('topology~Find by name')}\n                position=\"left\"\n                bodyContent={\n                  <Trans ns=\"topology\">\n                    Search results may appear outside of the visible area.{' '}\n                    <Button\n                      variant=\"link\"\n                      onClick={() => visualization.getGraph().fit(80)}\n                      isInline\n                    >\n                      Click here\n                    </Button>{' '}\n                    to fit to the screen.\n                  </Trans>\n                }\n              >\n                <Button\n                  variant=\"link\"\n                  className=\"odc-topology-filter-bar__info-icon\"\n                  aria-label={t('topology~Find by name')}\n                  isDisabled={isDisabled}\n                >\n                  <InfoCircleIcon />\n                </Button>\n              </Popover>\n            </ToolbarItem>\n          ) : null}\n        </ToolbarGroup>\n        <ToolbarGroup\n          variant={ToolbarGroupVariant['button-group']}\n          align={{ default: 'alignRight' }}\n        >\n          <ToolbarItem>\n            <ServiceBindingWarningForTopology namespace={namespace} />\n          </ToolbarItem>\n          <ToolbarItem>\n            <PDBAlert namespace={namespace} />\n          </ToolbarItem>\n          <ToolbarItem\n            className={\n              isExportApplicationEnabled || kialiLink\n                ? 'odc-topology-filter-bar__resource-quota-warning-block'\n                : ''\n            }\n          >\n            <ResourceQuotaAlert namespace={namespace} />\n          </ToolbarItem>\n          {kialiLink && (\n            <ToolbarItem className=\"odc-topology-filter-bar__kiali-link1\">\n              <ExternalLink href={kialiLink} text={t('topology~Kiali')} />\n            </ToolbarItem>\n          )}\n          <ExportApplication namespace={namespace} isDisabled={isDisabled} />\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  const states = {\n    supportedFilters: getSupportedTopologyFilters(state),\n    supportedKinds: getSupportedTopologyKinds(state),\n    namespace: getActiveNamespace(state),\n  };\n  return states;\n};\n\nexport default connect<StateProps>(mapStateToProps)(TopologyFilterBar);\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  useK8sWatchResource,\n  YellowExclamationTriangleIcon,\n} from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { PodDisruptionBudgetModel } from '../../models';\nimport { PodDisruptionBudgetKind } from './types';\nimport { checkPodDisruptionBudgets } from './utils/get-pdb-resources';\n\nexport interface PDBAlertProps {\n  namespace: string;\n}\n\nexport const PDBAlert: React.FC<PDBAlertProps> = ({ namespace }) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n\n  const resource = React.useMemo(\n    () => ({\n      groupVersionKind: {\n        group: PodDisruptionBudgetModel.apiGroup,\n        kind: PodDisruptionBudgetModel.kind,\n        version: PodDisruptionBudgetModel.apiVersion,\n      },\n      isList: true,\n      namespaced: true,\n      namespace,\n    }),\n    [namespace],\n  );\n\n  const [resources, loaded, loadError] = useK8sWatchResource<PodDisruptionBudgetKind[]>(resource);\n\n  const { count: pdbCount, name: pdbName } = checkPodDisruptionBudgets(resources);\n  const getRedirectLink = () => {\n    return resourcePathFromModel(PodDisruptionBudgetModel, pdbName || null, namespace);\n  };\n\n  const onWarningLinkClick = () => {\n    fireTelemetryEvent('PodDisruptionBudget Warning Label Clicked');\n  };\n\n  return (\n    <>\n      {pdbCount > 0 && loaded && !loadError && (\n        <Label color=\"orange\" icon={<YellowExclamationTriangleIcon />}>\n          <Link to={getRedirectLink()} data-test=\"pdb-warning\" onClick={onWarningLinkClick}>\n            <Trans t={t} ns=\"console-app\" count={pdbCount}>\n              {{ count: pdbCount }} PodDisruptionBudget violated\n            </Trans>\n          </Link>\n        </Label>\n      )}\n    </>\n  );\n};\n\nexport default PDBAlert;\n","import * as React from 'react';\nimport { ToolbarItem, Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { useFlag, useIsMobile, useToast } from '@console/shared/src';\nimport { ALLOW_EXPORT_APP, EXPORT_CR_NAME } from '../../const';\nimport { ExportModel } from '../../models';\nimport { handleExportApplication } from './ExportApplicationModal';\n\ntype ExportApplicationProps = {\n  namespace: string;\n  isDisabled: boolean;\n};\n\nconst ExportApplication: React.FC<ExportApplicationProps> = ({ namespace, isDisabled }) => {\n  const { t } = useTranslation();\n  const isMobile = useIsMobile();\n  const toast = useToast();\n  const isExportAppAllowed = useFlag(ALLOW_EXPORT_APP);\n  const canExportApp = useAccessReview({\n    group: ExportModel.apiGroup,\n    resource: ExportModel.plural,\n    verb: 'create',\n    namespace,\n  });\n\n  const showExportAppBtn = canExportApp && isExportAppAllowed && !isMobile;\n  const name = EXPORT_CR_NAME;\n\n  return showExportAppBtn ? (\n    <ToolbarItem>\n      <Button\n        variant=\"secondary\"\n        data-test=\"export-app-btn\"\n        aria-label={t('topology~Export application')}\n        isDisabled={isDisabled}\n        onClick={() => handleExportApplication(name, namespace, toast)}\n      >\n        {t('topology~Export application')}\n      </Button>\n    </ToolbarItem>\n  ) : null;\n};\n\nexport default ExportApplication;\n","import * as React from 'react';\nimport {\n  Switch,\n  Divider,\n  Select,\n  SelectGroup,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { DisplayFilters, TopologyDisplayFilterType, TopologyViewType } from '../topology-types';\nimport { EXPAND_GROUPS_FILTER_ID } from './const';\n\nimport './FilterDropdown.scss';\n\ntype FilterDropdownProps = {\n  filters: DisplayFilters;\n  viewType: TopologyViewType;\n  supportedFilters: string[];\n  onChange: (filter: DisplayFilters) => void;\n  isDisabled?: boolean;\n  opened?: boolean; // Use only for testing\n};\n\nconst FilterDropdown: React.FC<FilterDropdownProps> = ({\n  filters,\n  viewType,\n  supportedFilters,\n  onChange,\n  isDisabled = false,\n  opened = false,\n}) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [isOpen, setIsOpen] = React.useState(opened);\n  const groupsExpanded = filters?.find((f) => f.id === EXPAND_GROUPS_FILTER_ID)?.value ?? true;\n\n  const onToggle = (_event, open: boolean): void => setIsOpen(open);\n  const onSelect = (e: React.MouseEvent, key: string) => {\n    const index = filters.findIndex((f) => f.id === key);\n    const filter = { ...filters[index], value: (e.target as HTMLInputElement).checked };\n    onChange([...filters.slice(0, index), filter, ...filters.slice(index + 1)]);\n    fireTelemetryEvent('Topology Display Option Changed', {\n      property: key,\n      value: (e.target as HTMLInputElement).checked,\n    });\n  };\n\n  const onGroupsExpandedChange = (_event, value: boolean) => {\n    const index = filters?.findIndex((f) => f.id === EXPAND_GROUPS_FILTER_ID) ?? -1;\n    if (index === -1) {\n      return;\n    }\n    const filter = {\n      ...filters[index],\n      value,\n    };\n    onChange([...filters.slice(0, index), filter, ...filters.slice(index + 1)]);\n    fireTelemetryEvent('Topology Display Option Changed', {\n      property: EXPAND_GROUPS_FILTER_ID,\n      value,\n    });\n  };\n\n  const expandFilters = filters\n    .filter(\n      (f) =>\n        f.type === TopologyDisplayFilterType.expand &&\n        f.id !== EXPAND_GROUPS_FILTER_ID &&\n        supportedFilters.includes(f.id),\n    )\n    .sort((a, b) => a.priority - b.priority);\n\n  const showFilters = filters\n    .filter((f) => f.type === TopologyDisplayFilterType.show && supportedFilters.includes(f.id))\n    .sort((a, b) => a.priority - b.priority);\n\n  const isSelectDisabled =\n    isDisabled ||\n    (viewType === TopologyViewType.graph\n      ? !expandFilters.length && !showFilters.length\n      : !expandFilters.length);\n\n  const selectContent = (\n    <div className=\"odc-topology-filter-dropdown\">\n      {expandFilters.length ? (\n        <div className=\"odc-topology-filter-dropdown__group\">\n          <span className=\"odc-topology-filter-dropdown__expand-groups-switcher\">\n            <span className=\"pf-v5-c-menu__group-title\">{t('topology~Expand')}</span>\n            <Switch\n              aria-label={t('topology~Collapse groups')}\n              isChecked={groupsExpanded}\n              onChange={onGroupsExpandedChange}\n            />\n          </span>\n          <SelectGroup className=\"odc-topology-filter-dropdown__expand-groups-label\" label={<></>}>\n            {expandFilters.map((filter) => (\n              <SelectOption\n                key={filter.id}\n                value={filter.id}\n                isDisabled={!groupsExpanded}\n                isSelected={filter.value}\n                hasCheckbox\n              >\n                {filter.labelKey ? t(filter.labelKey) : filter.label}\n              </SelectOption>\n            ))}\n          </SelectGroup>\n        </div>\n      ) : null}\n      {viewType === TopologyViewType.graph && showFilters.length ? (\n        <div>\n          <Divider />\n          <SelectGroup label={t('topology~Show')}>\n            {showFilters.map((filter) => (\n              <SelectOption key={filter.id} value={filter.id} isSelected={filter.value} hasCheckbox>\n                {filter.labelKey ? t(filter.labelKey) : filter.label}\n              </SelectOption>\n            ))}\n          </SelectGroup>\n        </div>\n      ) : null}\n    </div>\n  );\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={() => setIsOpen(!isOpen)}\n      isExpanded={isOpen}\n      isDisabled={isSelectDisabled}\n    >\n      {t('topology~Display options')}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      toggle={toggle}\n      className=\"odc-topology-filter-dropdown__select\"\n      onToggle={onToggle}\n      isOpen={isOpen}\n      onSelect={onSelect}\n      isGrouped\n      isCheckboxSelectionBadgeHidden\n      onOpenChange={(open) => setIsOpen(open)}\n    >\n      <SelectList>{selectContent}</SelectList>\n    </Select>\n  );\n};\n\nexport default FilterDropdown;\n","import * as React from 'react';\nimport {\n  Button,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { getTitleForNodeKind } from '@console/shared';\nimport { TopologyDisplayFilterType, DisplayFilters } from '../topology-types';\nimport './KindFilterDropdown.scss';\n\ntype KindFilterDropdownProps = {\n  filters: DisplayFilters;\n  supportedKinds: { [key: string]: number };\n  onChange: (filter: DisplayFilters) => void;\n  isDisabled?: boolean;\n  opened?: boolean; // Use only for testing\n};\n\nconst KindFilterDropdown: React.FC<KindFilterDropdownProps> = ({\n  filters,\n  supportedKinds,\n  onChange,\n  isDisabled = false,\n  opened = false,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState(opened);\n  const onToggle = (_event, open: boolean): void => setIsOpen(open);\n  let kindFilters = filters.filter(\n    (f) => f.type === TopologyDisplayFilterType.kind && supportedKinds[f.id],\n  );\n  const selectedFilterCount = kindFilters.filter((f) => f.value).length;\n  kindFilters = Object.keys(supportedKinds).reduce((acc, kind) => {\n    if (!filters.find((f) => f.id === kind)) {\n      acc.push({\n        type: TopologyDisplayFilterType.kind,\n        id: kind,\n        label: getTitleForNodeKind(kind),\n        value: false,\n        priority: 1,\n      });\n    }\n    return acc;\n  }, kindFilters);\n  kindFilters.sort((a, b) => a.label.localeCompare(b.label));\n\n  const onSelect = (e: React.MouseEvent, key: string) => {\n    const index = filters.findIndex((f) => f.id === key);\n    let updatedFilters;\n    if (index === -1) {\n      const newFilter = kindFilters.find((f) => f.id === key);\n      if (!newFilter) {\n        return;\n      }\n      const filter = { ...newFilter, value: (e.target as HTMLInputElement).checked };\n      updatedFilters = [...filters, filter];\n    } else {\n      const filter = { ...filters[index], value: (e.target as HTMLInputElement).checked };\n      updatedFilters = [...filters.slice(0, index), filter, ...filters.slice(index + 1)];\n    }\n    onChange(updatedFilters);\n  };\n\n  const onClearFilters = () => {\n    const updateFilters = filters.filter((f) => f.type !== TopologyDisplayFilterType.kind);\n    onChange(updateFilters);\n  };\n\n  const selectContent = (\n    <div className=\"odc-topology-filter-dropdown__group odc-kind-filter-dropdown\">\n      <span className=\"odc-kind-filter-dropdown__clear-button\">\n        <Button variant=\"link\" onClick={onClearFilters}>\n          {t('topology~Clear all filters')}\n        </Button>\n      </span>\n      {kindFilters.map((filter) => (\n        <SelectOption\n          key={filter.id}\n          value={filter.id}\n          isSelected={filter.value}\n          data-test={filter.label}\n          hasCheckbox\n        >\n          <ResourceIcon kind={filter.id} />\n          {filter.label} ({supportedKinds[filter.id]})\n        </SelectOption>\n      ))}\n    </div>\n  );\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={() => setIsOpen(!isOpen)}\n      isExpanded={isOpen}\n      isDisabled={isDisabled}\n    >\n      {t('topology~Filter by resource')}\n      {selectedFilterCount ? (\n        <span className=\"odc-kind-filter-dropdown__kind-count\">{selectedFilterCount}</span>\n      ) : null}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      toggle={toggle}\n      onToggle={onToggle}\n      isOpen={isOpen}\n      onSelect={onSelect}\n      onOpenChange={(open) => setIsOpen(open)}\n    >\n      <SelectList>{selectContent}</SelectList>\n    </Select>\n  );\n};\n\nexport default KindFilterDropdown;\n","import * as React from 'react';\nimport {\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { useTranslation } from 'react-i18next';\nimport AutocompleteInput from '@console/internal/components/autocomplete';\nimport { TextFilter } from '@console/internal/components/factory';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { NameLabelFilterValues } from './filter-utils';\n\ntype NameLabelFilterDropdownProps = {\n  isDisabled: boolean;\n  data: K8sResourceKind[];\n  onChange: (type: string, value: string, endOfString: boolean) => void;\n  nameFilterInput: string;\n  labelFilterInput: string;\n};\n\nconst NameLabelFilterDropdown: React.FC<NameLabelFilterDropdownProps> = (props) => {\n  const { data, onChange, nameFilterInput, labelFilterInput, isDisabled } = props;\n\n  const [isOpen, setOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState(NameLabelFilterValues.Name);\n\n  const { t } = useTranslation();\n\n  const onToggle = (_event, open: boolean) => setOpen(open);\n  const dropdownItems = [NameLabelFilterValues.Name, NameLabelFilterValues.Label];\n\n  const handleInputValue = (value: string) => {\n    onChange(selected, value, false);\n  };\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={(_event) => {\n        onToggle(_event, !isOpen);\n      }}\n      isDisabled={isDisabled}\n    >\n      <>\n        <FilterIcon className=\"span--icon__right-margin\" /> {t(selected)}\n      </>\n    </MenuToggle>\n  );\n\n  return (\n    <div className=\"pf-v5-c-input-group\">\n      <Select\n        onSelect={(_event, value: NameLabelFilterValues) => {\n          if (value) {\n            setSelected(value as NameLabelFilterValues);\n          }\n          setOpen(false);\n        }}\n        toggle={toggle}\n        isOpen={isOpen}\n        onOpenChange={(open) => setOpen(open)}\n      >\n        <SelectList>\n          {dropdownItems.map((item) => (\n            <SelectOption key={item} value={item} isSelected={selected === item}>\n              {t(item)}\n            </SelectOption>\n          ))}\n        </SelectList>\n      </Select>\n      {selected === NameLabelFilterValues.Label ? (\n        <AutocompleteInput\n          onSuggestionSelect={(label) => {\n            onChange(NameLabelFilterValues.Label, label, true);\n          }}\n          showSuggestions\n          textValue={labelFilterInput}\n          setTextValue={handleInputValue}\n          placeholder={t('topology~Find by label...')}\n          data={data}\n          className=\"co-text-node\"\n          labelPath={'metadata.labels'}\n        />\n      ) : (\n        <TextFilter\n          onChange={(_event, value) => handleInputValue(value)}\n          placeholder={t('topology~Find by name...')}\n          value={nameFilterInput}\n          aria-labelledby=\"toggle-id\"\n          isDisabled={isDisabled}\n          autoFocus\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NameLabelFilterDropdown;\n","import * as React from 'react';\nimport { DataList } from '@patternfly/react-core';\nimport {\n  observer,\n  isGraph,\n  Node,\n  isNode,\n  Visualization,\n  GraphElement,\n  Model,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { alertingLoaded } from '@console/internal/actions/observe';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { OverviewMetrics } from '@console/internal/components/overview/metricUtils';\nimport { useQueryParams } from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TYPE_APPLICATION_GROUP } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { subscribeOverviewAlerts } from '../utils/subscribeOverviewAlerts';\nimport { subscribeOverviewMetrics } from '../utils/subscribeOverviewMetrics';\nimport { getChildKinds, sortGroupChildren } from './list-view-utils';\nimport TopologyListViewAppGroup from './TopologyListViewAppGroup';\nimport TopologyListViewUnassignedGroup from './TopologyListViewUnassignedGroup';\n\nimport './TopologyListView.scss';\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  selectedId: string;\n  onSelect: (entity?: GraphElement) => void;\n  applicationGroups: Node[];\n  unassignedItems: Node[];\n}\n\nconst TopologyListViewComponent: React.FC<TopologyGraphViewProps> = React.memo(\n  function TopologyListViewComponent({\n    visualizationReady,\n    visualization,\n    onSelect,\n    applicationGroups,\n    unassignedItems,\n    selectedId,\n  }) {\n    if (!visualizationReady) {\n      return null;\n    }\n\n    return (\n      <div className=\"odc-topology-list-view\">\n        <DataList\n          aria-label=\"Topology List View\"\n          className=\"odc-topology-list-view__data-list\"\n          selectedDataListItemId={selectedId}\n          onSelectDataListItem={(_event, id) =>\n            onSelect(selectedId === id ? undefined : visualization.getElementById(id))\n          }\n        >\n          {applicationGroups.map((g) => (\n            <TopologyListViewAppGroup\n              key={g.getId()}\n              appGroup={g}\n              selectedIds={[selectedId]}\n              onSelect={(ids) => onSelect(ids ? visualization.getElementById(ids[0]) : undefined)}\n            />\n          ))}\n          {unassignedItems.length > 0 ? (\n            <TopologyListViewUnassignedGroup\n              key=\"unassigned\"\n              showCategory={applicationGroups.length > 0}\n              items={unassignedItems}\n              selectedIds={[selectedId]}\n              onSelect={(ids) => onSelect(ids ? visualization.getElementById(ids[0]) : undefined)}\n            />\n          ) : null}\n        </DataList>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => {\n    if (\n      prevProps.visualizationReady !== nextProps.visualizationReady ||\n      prevProps.visualization !== nextProps.visualization ||\n      prevProps.onSelect !== nextProps.onSelect ||\n      prevProps.selectedId !== nextProps.selectedId\n    ) {\n      return false;\n    }\n    return (\n      _.isEqual(\n        prevProps.applicationGroups.map((g) => ({\n          label: g.getId(),\n        })),\n        nextProps.applicationGroups.map((g) => ({\n          label: g.getId(),\n        })),\n      ) &&\n      _.isEqual(\n        prevProps.unassignedItems.map((g) => ({\n          label: g.getId(),\n        })),\n        nextProps.unassignedItems.map((g) => ({\n          label: g.getId(),\n        })),\n      )\n    );\n  },\n);\n\nconst TOPOLOGY_LIST_ID = 'odc-topology-list';\nconst listModel: Model = {\n  graph: {\n    id: TOPOLOGY_LIST_ID,\n    type: 'graph',\n  },\n};\ninterface TopologyListViewPropsFromState {\n  metrics: OverviewMetrics;\n}\n\ninterface TopologyListViewPropsFromDispatch {\n  updateMetrics: (metrics: OverviewMetrics) => void;\n  updateMonitoringAlerts: (alerts: Alert[]) => void;\n}\n\ninterface TopologyListViewProps {\n  model: Model;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst ConnectedTopologyListView: React.FC<\n  TopologyListViewProps & TopologyListViewPropsFromDispatch & TopologyListViewPropsFromState\n> = observer(function TopologyListView({\n  model,\n  onSelect,\n  setVisualization,\n  namespace,\n  metrics,\n  updateMetrics,\n  updateMonitoringAlerts,\n}) {\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n\n  const createVisualization = () => {\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.fromModel(listModel);\n    return newVisualization;\n  };\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n\n  const visualization = visualizationRef.current;\n\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model) {\n      // Clear out any layout that might have been saved\n      if (model.graph?.layout) {\n        delete model.graph.layout;\n      }\n      visualization.fromModel(model);\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    setVisualizationReady(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, onSelect, visualization]);\n\n  const nodes = visualization.getElements().filter((e) => isNode(e)) as Node[];\n  const applicationGroups = nodes.filter((n) => n.getType() === TYPE_APPLICATION_GROUP);\n  applicationGroups.sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n  const unassignedItems = nodes.filter(\n    (n) => n.getType() !== TYPE_APPLICATION_GROUP && isGraph(n.getParent()) && n.isVisible(),\n  );\n\n  React.useLayoutEffect(() => {\n    if (visualizationReady && selectedId) {\n      const element = document.getElementById(selectedId);\n      if (element) {\n        element.scrollIntoView({ block: 'nearest' });\n      }\n    }\n  }, [selectedId, visualizationReady]);\n\n  React.useEffect(() => {\n    const getFlattenedItems = (): Node[] => {\n      const flattened = [];\n      const addFlattenedNode = (node: Node) => {\n        if (node) {\n          flattened.push(node);\n          const childNodes = sortGroupChildren(node.getChildren());\n          childNodes.forEach((child) => {\n            if (isNode(child)) {\n              addFlattenedNode(child);\n            }\n          });\n        }\n      };\n\n      const addFlattenedKinds = (children: GraphElement[]) => {\n        const { kindsMap, kindKeys } = getChildKinds(children);\n        kindKeys.forEach((key) => {\n          kindsMap[key]\n            .sort((a, b) => a.getLabel().localeCompare(b.getLabel()))\n            .forEach((child) => {\n              addFlattenedNode(child);\n            });\n        });\n      };\n\n      applicationGroups.forEach((appGroup) => {\n        flattened.push(appGroup);\n        addFlattenedKinds(appGroup.getChildren());\n      });\n      addFlattenedKinds(unassignedItems);\n      return flattened;\n    };\n\n    const selectPrevious = () => {\n      const flattenedItems = getFlattenedItems();\n      const index = flattenedItems.findIndex((item) => selectedId === item.getId());\n      if (index > 0) {\n        onSelect(flattenedItems[index - 1]);\n      }\n    };\n\n    const onEnter = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement;\n      const entity = target?.id && visualization.getElementById(target.id);\n      entity && onSelect(entity);\n    };\n\n    const selectNext = () => {\n      const flattenedItems = getFlattenedItems();\n      const index = flattenedItems.findIndex((item) => selectedId === item.getId());\n      if (index < flattenedItems.length - 1) {\n        onSelect(flattenedItems[index + 1]);\n      }\n    };\n\n    const stopEvent = (e: KeyboardEvent) => {\n      document.activeElement instanceof HTMLElement && document.activeElement.blur();\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      const { nodeName } = e.target as Element;\n      if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n        return;\n      }\n\n      switch (e.key) {\n        case 'Escape':\n          stopEvent(e);\n          onSelect();\n          break;\n        case 'Enter':\n          stopEvent(e);\n          onEnter(e);\n          break;\n        case 'k':\n        case 'ArrowUp':\n          stopEvent(e);\n          selectPrevious();\n          break;\n        case 'j':\n        case 'ArrowDown':\n          stopEvent(e);\n          selectNext();\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (visualization) {\n      window.addEventListener('keydown', onKeyDown);\n    }\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, [visualization, selectedId, applicationGroups, unassignedItems, onSelect]);\n\n  React.useEffect(() => {\n    const clearMetricsInterval = subscribeOverviewMetrics(namespace, metrics, updateMetrics);\n    const clearAlertsInterval = subscribeOverviewAlerts(namespace, updateMonitoringAlerts);\n\n    return () => {\n      clearMetricsInterval();\n      clearAlertsInterval();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace, updateMetrics, updateMonitoringAlerts]);\n\n  return (\n    <TopologyListViewComponent\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      selectedId={selectedId}\n      onSelect={onSelect}\n      applicationGroups={applicationGroups}\n      unassignedItems={unassignedItems}\n    />\n  );\n});\n\nconst stateToProps = ({ UI }): TopologyListViewPropsFromState => {\n  return { metrics: UI.get('overview').toJS() };\n};\n\nconst dispatchToProps = (dispatch): TopologyListViewPropsFromDispatch => ({\n  updateMetrics: (metrics: OverviewMetrics) => dispatch(UIActions.updateOverviewMetrics(metrics)),\n  updateMonitoringAlerts: (alerts: Alert[]) => dispatch(alertingLoaded('devAlerts', alerts, 'dev')),\n});\n\nconst TopologyListView = withFallback(\n  connect<TopologyListViewPropsFromState, TopologyListViewPropsFromDispatch, TopologyListViewProps>(\n    stateToProps,\n    dispatchToProps,\n  )(React.memo(ConnectedTopologyListView)),\n  ErrorBoundaryFallbackPage,\n);\n\nexport default TopologyListView;\n","import { Alert } from '@console/dynamic-plugin-sdk';\nimport { fetchMonitoringAlerts } from '@console/internal/components/overview/metricUtils';\n\ntype UnsubscribeCallback = () => void;\n\nexport const subscribeOverviewAlerts = (\n  namespace: string,\n  updateMonitoringAlerts: (alerts: Alert[]) => void,\n  interval: number = 15 * 1000,\n): UnsubscribeCallback => {\n  let alertsInterval: any = null;\n\n  const fetchAlerts = (): void => {\n    fetchMonitoringAlerts(namespace)\n      .then((alerts) => {\n        updateMonitoringAlerts(alerts);\n      })\n      .catch((e) => {\n        console.error('Failed to fetch monitoring alerts', e); // eslint-disable-line no-console\n      })\n      .then(() => {\n        alertsInterval = setTimeout(fetchAlerts, interval);\n      })\n      .catch((e) => {\n        console.error('Failed to fetch monitoring alerts', e); // eslint-disable-line no-console\n      });\n  };\n\n  fetchAlerts();\n\n  return () => {\n    clearTimeout(alertsInterval);\n  };\n};\n","import * as _ from 'lodash';\nimport { PROMETHEUS_TENANCY_BASE_PATH } from '@console/internal/components/graphs';\nimport {\n  fetchOverviewMetrics,\n  METRICS_FAILURE_CODES,\n  OverviewMetrics,\n} from '@console/internal/components/overview/metricUtils';\nimport { METRICS_POLL_INTERVAL } from '@console/shared/src';\n\ntype UnsubscribeCallback = () => void;\n\nexport const subscribeOverviewMetrics = (\n  namespace: string,\n  metrics: OverviewMetrics,\n  updateMetrics: (metrics: OverviewMetrics) => void,\n  interval: number = METRICS_POLL_INTERVAL,\n): UnsubscribeCallback => {\n  let metricsInterval = null;\n\n  const fetchMetrics = () => {\n    if (!PROMETHEUS_TENANCY_BASE_PATH) {\n      return;\n    }\n    fetchOverviewMetrics(namespace)\n      .then((updatedMetrics) => {\n        updateMetrics(updatedMetrics);\n      })\n      .catch((res) => {\n        const status = res?.response?.status;\n        // eslint-disable-next-line no-console\n        console.error('Could not fetch metrics, status:', status);\n        // Don't retry on some status codes unless a previous request succeeded.\n        if (_.includes(METRICS_FAILURE_CODES, status) && _.isEmpty(metrics)) {\n          throw new Error(`Could not fetch metrics, status: ${status}`);\n        }\n      })\n      .then(() => {\n        metricsInterval = setTimeout(fetchMetrics, interval);\n      })\n      .catch((e) => {\n        console.error('Failed to fetch metrics', e); // eslint-disable-line no-console\n      });\n  };\n\n  fetchMetrics();\n\n  return () => {\n    clearTimeout(metricsInterval);\n  };\n};\n","import * as React from 'react';\nimport {\n  DataListCell,\n  DataList,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { showKind, useDisplayFilters, useSearchFilter } from '../../filters';\nimport { ApplicationModel } from '../../models';\nimport GroupResourcesCell from './cells/GroupResourcesCell';\nimport { getChildKinds } from './list-view-utils';\nimport TopologyListViewKindGroup from './TopologyListViewKindGroup';\n\ninterface TopologyListViewAppGroupProps {\n  appGroup: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst TopologyListViewAppGroup: React.FC<TopologyListViewAppGroupProps> = ({\n  appGroup,\n  selectedIds,\n  onSelect,\n}) => {\n  const [filtered] = useSearchFilter(appGroup.getLabel());\n  const displayFilters = useDisplayFilters();\n  const id = appGroup.getId();\n  const visible = appGroup.isVisible();\n  const label = appGroup.getLabel();\n  const collapsed = appGroup.isCollapsed();\n  const children = appGroup.getChildren();\n  const { groupResources } = appGroup.getData();\n\n  if (\n    !visible ||\n    (!collapsed && !children?.length) ||\n    (collapsed &&\n      !groupResources.find((res) =>\n        showKind(res.resourceKind || res.resource?.kind, displayFilters),\n      ))\n  ) {\n    return null;\n  }\n\n  const { kindsMap, kindKeys } = getChildKinds(children);\n\n  const cells = [];\n  cells.push(\n    <DataListCell\n      key={id}\n      className=\"odc-topology-list-view__application-label-cell\"\n      id={`${id}_label`}\n    >\n      <ResourceIcon\n        className=\"odc-topology-list-view__resource-icon co-m-resource-icon--lg\"\n        kind={ApplicationModel.kind}\n      />\n      <span className=\"odc-topology-list-view__application-label\">{label}</span>\n    </DataListCell>,\n  );\n  if (collapsed) {\n    cells.push(\n      <DataListCell key=\"resources\" id={`${id}_resources`}>\n        <GroupResourcesCell group={appGroup} />\n      </DataListCell>,\n    );\n  }\n  const className = classNames('odc-topology-list-view__application-row', {\n    'is-filtered': filtered,\n  });\n  return (\n    <DataListItem\n      className=\"odc-topology-list-view__application\"\n      key={id}\n      id={id}\n      aria-labelledby={`${id}_label`}\n      isExpanded\n    >\n      <DataListItemRow className={className} data-test={id}>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n      {!collapsed && (\n        <DataList aria-label={id} id={`${id}_kinds`}>\n          {kindKeys.map((key) => (\n            <TopologyListViewKindGroup\n              key={key}\n              groupLabel={appGroup.getLabel()}\n              kind={key}\n              childElements={kindsMap[key]}\n              selectedIds={selectedIds}\n              onSelect={onSelect}\n            />\n          ))}\n        </DataList>\n      )}\n    </DataListItem>\n  );\n};\n\nexport default observer(TopologyListViewAppGroup);\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Node, isNode } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { labelForNodeKind } from '@console/shared';\nimport { getResourceKind } from '../../utils/topology-utils';\nimport { listViewNodeComponentFactory } from './listViewComponentFactory';\n\ninterface ListElementWrapperProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\n// in a separate component so that changes to behaviors do not re-render children\nconst ListElementComponent: React.FC<ListElementWrapperProps> = observer(\n  function ListElementComponent({ item, selectedIds, onSelect, children }) {\n    const type = item.getType();\n\n    const Component = React.useMemo(() => listViewNodeComponentFactory(type), [type]);\n    return (\n      <Component key={item.getId()} item={item} selectedIds={selectedIds} onSelect={onSelect}>\n        {children}\n      </Component>\n    );\n  },\n);\n\nconst ListElementChildren: React.FC<ListElementWrapperProps> = observer(\n  function ListElementChildren({ item, selectedIds, onSelect }) {\n    return (\n      <>\n        {item\n          .getChildren()\n          .filter(isNode)\n          .sort((a, b) =>\n            labelForNodeKind(getResourceKind(a)).localeCompare(\n              labelForNodeKind(getResourceKind(b)),\n            ),\n          )\n          .map((e) => (\n            <ListElementWrapper\n              key={e.getId()}\n              item={e as Node}\n              onSelect={onSelect}\n              selectedIds={selectedIds}\n            />\n          ))}\n      </>\n    );\n  },\n);\n\nconst ListElementWrapper: React.FC<ListElementWrapperProps> = observer(function ListElementWrapper({\n  item,\n  selectedIds,\n  onSelect,\n}) {\n  if (!item.isVisible()) {\n    return null;\n  }\n\n  return (\n    <ListElementComponent item={item} onSelect={onSelect} selectedIds={selectedIds}>\n      <ListElementChildren item={item} onSelect={onSelect} selectedIds={selectedIds} />\n    </ListElementComponent>\n  );\n});\n\nexport default ListElementWrapper;\n","/* eslint-disable import/no-cycle */\nimport * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { TYPE_HELM_RELEASE } from '@console/helm-plugin/src/topology/components/const';\nimport HelmReleaseListViewNode from '@console/helm-plugin/src/topology/listView/HelmReleaseListViewNode';\nimport { knativeListViewNodeComponentFactory } from '@console/knative-plugin/src/topology/listView/knativeListViewComponentFactory';\nimport { TYPE_WORKLOAD } from '../../const';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../../operators/components/const';\nimport OperatorGroupListViewNode from '../../operators/listView/OperatorGroupListViewNode';\nimport { kubevirtListViewNodeComponentFactory } from './kubevirtListViewComponentFactory';\nimport TopologyListViewNode from './TopologyListViewNode';\n\nexport const listViewNodeComponentFactory = (\n  type,\n):\n  | React.ComponentType<{\n      item: Node;\n      selectedIds: string[];\n      onSelect: (ids: string[]) => void;\n    }>\n  | undefined => {\n  // TODO: Move to plugins\n  const knativeComponent = knativeListViewNodeComponentFactory(type);\n  if (knativeComponent) {\n    return knativeComponent;\n  }\n  const kubevirtComponent = kubevirtListViewNodeComponentFactory(type);\n  if (kubevirtComponent) {\n    return kubevirtComponent;\n  }\n\n  switch (type) {\n    case TYPE_WORKLOAD:\n      return TopologyListViewNode;\n    case TYPE_OPERATOR_BACKED_SERVICE:\n      return OperatorGroupListViewNode;\n    case TYPE_HELM_RELEASE:\n      return HelmReleaseListViewNode;\n    default:\n      return TopologyListViewNode;\n  }\n};\n","import * as React from 'react';\nimport { Node, observer } from '@patternfly/react-topology';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { getResourceKind } from '@console/topology/src/utils/topology-utils';\n\ninterface HelmReleaseListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst HelmReleaseListViewNode: React.FC<HelmReleaseListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const { data } = item.getData();\n  const kind = getResourceKind(item);\n  const typeIconClass = data.chartIcon || 'icon-helm';\n\n  const badgeCell = (\n    <TypedResourceBadgeCell key=\"type-icon\" kind={kind} typeIconClass={typeIconClass} />\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      badgeCell={badgeCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nexport default observer(HelmReleaseListViewNode);\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport {\n  TYPE_KNATIVE_SERVICE,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\nimport { KnativeRevisionListViewNode } from './KnativeRevisionListViewNode';\nimport { KnativeServiceListViewNode } from './KnativeServiceListViewNode';\nimport { NoStatusListViewNode } from './NoStatusListViewNode';\nimport { SinkUriListViewNode } from './SinkUriListViewNode';\n\nexport const knativeListViewNodeComponentFactory = (\n  type,\n):\n  | React.ComponentType<{\n      item: Node;\n      selectedIds: string[];\n      onSelect: (ids: string[]) => void;\n    }>\n  | undefined => {\n  switch (type) {\n    case TYPE_KNATIVE_SERVICE:\n      return KnativeServiceListViewNode;\n    case TYPE_KNATIVE_REVISION:\n      return KnativeRevisionListViewNode;\n    case TYPE_SINK_URI:\n      return SinkUriListViewNode;\n    case TYPE_EVENT_PUB_SUB_LINK:\n    case TYPE_EVENT_SOURCE:\n    case TYPE_EVENT_SOURCE_LINK:\n    case TYPE_EVENT_SINK_LINK:\n    case TYPE_EVENT_PUB_SUB:\n    case TYPE_EVENT_SOURCE_KAFKA:\n      return NoStatusListViewNode;\n    default:\n      return null;\n  }\n};\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { CpuCellComponent } from '@console/topology/src/components/list-view/cells/CpuCell';\nimport { MemoryCellComponent } from '@console/topology/src/components/list-view/cells/MemoryCell';\nimport { StatusCellResourceStatus } from '@console/topology/src/components/list-view/cells/StatusCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport {\n  getTopologyResourceObject,\n  useOverviewMetrics,\n  getPodMetricStats,\n} from '@console/topology/src/utils';\nimport { usePodsForRevisions } from '../../utils/usePodsForRevisions';\n\ninterface KnativeRevisionListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst ObservedKnativeRevisionListViewNode: React.FC<KnativeRevisionListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const metrics = useOverviewMetrics();\n  const { loaded, pods } = usePodsForRevisions(resource.metadata.uid, resource.metadata.namespace);\n  const podData = React.useMemo(() => {\n    if (!loaded) {\n      return null;\n    }\n    const [current, previous] = pods;\n    const isRollingOut = !!current && !!previous;\n    return {\n      current,\n      previous,\n      obj: current?.obj || resource,\n      isRollingOut,\n      pods: [...(current?.pods || []), ...(previous?.pods || [])],\n    };\n  }, [loaded, pods, resource]);\n\n  const metricStats = React.useMemo(() => {\n    if (!podData) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [metrics, podData]);\n\n  const memoryCell = (\n    <DataListCell key=\"memory\" id={`${item.getId()}_memory`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <MemoryCellComponent\n          totalBytes={metricStats.totalBytes}\n          memoryByPod={metricStats.memoryByPod}\n        />\n      )}\n    </DataListCell>\n  );\n  const cpuCell = (\n    <DataListCell key=\"cpu\" id={`${item.getId()}_metrics`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <CpuCellComponent cpuByPod={metricStats.cpuByPod} totalCores={metricStats.totalCores} />\n      )}\n    </DataListCell>\n  );\n\n  const statusCell = (\n    <DataListCell key=\"status\" id={`${item.getId()}_status`}>\n      <div className=\"odc-topology-list-view__detail--status\">\n        {podData ? <StatusCellResourceStatus obj={podData.obj} podData={podData} /> : null}\n      </div>\n    </DataListCell>\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      memoryCell={memoryCell}\n      cpuCell={cpuCell}\n      statusCell={statusCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nconst KnativeRevisionListViewNode = observer(ObservedKnativeRevisionListViewNode);\nexport { KnativeRevisionListViewNode };\n","import * as React from 'react';\nimport { Node, observer } from '@patternfly/react-topology';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { getResource, getResourceKind } from '@console/topology/src/utils';\nimport { isServerlessFunction } from '../knative-topology-utils';\n\ninterface KnativeServiceListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst ObservedKnativeServiceListViewNode: React.FC<KnativeServiceListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const kind = getResourceKind(item);\n\n  const typeIconClass: string = isServerlessFunction(getResource(item))\n    ? 'icon-serverless-function'\n    : 'icon-knative';\n\n  const badgeCell = (\n    <TypedResourceBadgeCell key=\"type-icon\" kind={kind} typeIconClass={typeIconClass} />\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      badgeCell={badgeCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nconst KnativeServiceListViewNode = observer(ObservedKnativeServiceListViewNode);\nexport { KnativeServiceListViewNode };\n","import * as React from 'react';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { OdcBaseNode } from '@console/topology/src/elements';\nimport { getResourceKind } from '@console/topology/src/utils';\nimport { EventSourceIcon, eventIconStyle } from '../../utils/icons';\nimport { NodeType } from '../topology-types';\n\ninterface NoStatusListViewNodeProps {\n  item: OdcBaseNode;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst NoStatusListViewNode: React.FC<NoStatusListViewNodeProps> = (props) => {\n  const kind = getResourceKind(props.item);\n  const badgeCell = (\n    <TypedResourceBadgeCell\n      key=\"type-icon\"\n      kind={kind}\n      typeIcon={<EventSourceIcon style={eventIconStyle} />}\n    />\n  );\n  return (\n    <TopologyListViewNode\n      noPods\n      {...props}\n      badgeCell={props.item.getType() === NodeType.EventSource ? badgeCell : null}\n    />\n  );\n};\nexport { NoStatusListViewNode };\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { observer } from '@patternfly/react-topology';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { OdcBaseNode } from '@console/topology/src/elements';\n\ninterface SinkUriListViewNodeProps {\n  item: OdcBaseNode;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst ObservedSinkUriListViewNode: React.FC<SinkUriListViewNodeProps> = ({ item, ...rest }) => {\n  const sinkUri = item.getResource()?.spec?.sinkUri;\n\n  const labelCell = (\n    <DataListCell className=\"odc-topology-list-view__label-cell\" key=\"label\" id={sinkUri}>\n      <TypedResourceBadgeCell key=\"type-icon\" kind={item.getResourceKind()} />\n      {sinkUri}\n    </DataListCell>\n  );\n\n  return <TopologyListViewNode item={item} labelCell={labelCell} noPods {...rest} />;\n};\n\nconst SinkUriListViewNode = observer(ObservedSinkUriListViewNode);\nexport { SinkUriListViewNode };\n","import * as React from 'react';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { TypedResourceBadgeCell } from '../../components/list-view/cells';\nimport TopologyListViewNode from '../../components/list-view/TopologyListViewNode';\nimport { getResourceKind } from '../../utils/topology-utils';\n\ninterface OperatorGroupListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst OperatorGroupListViewNode: React.FC<OperatorGroupListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const { data } = item.getData();\n  const kind = data.operatorKind || getResourceKind(item);\n  const typeIconClass = data?.builderImage;\n\n  const badgeCell = (\n    <TypedResourceBadgeCell key=\"type-icon\" kind={kind} typeIconClass={typeIconClass} />\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      badgeCell={badgeCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nexport default observer(OperatorGroupListViewNode);\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport VMListViewNode from './VMListViewNode';\n\nconst TYPE_VIRTUAL_MACHINE = 'virtual-machine';\n\nexport const kubevirtListViewNodeComponentFactory = (\n  type,\n):\n  | React.ComponentType<{\n      item: Node;\n      selectedIds: string[];\n      onSelect: (ids: string[]) => void;\n    }>\n  | undefined => {\n  switch (type) {\n    case TYPE_VIRTUAL_MACHINE:\n      return VMListViewNode;\n    default:\n      return null;\n  }\n};\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { getPodMetricStats, getTopologyResourceObject, useOverviewMetrics } from '../../utils';\nimport { usePodsForVm } from '../../utils/usePodsForVM';\nimport { CpuCellComponent, MemoryCellComponent } from './cells';\nimport TopologyListViewNode from './TopologyListViewNode';\n\ninterface VMListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst VMListViewNode: React.FC<VMListViewNodeProps> = observer(({ item, ...rest }) => {\n  const vm = getTopologyResourceObject(item.getData());\n  const metrics = useOverviewMetrics();\n  const { podData } = usePodsForVm(vm);\n\n  const metricStats = React.useMemo(() => {\n    if (!podData) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [metrics, podData]);\n\n  const memoryCell = (\n    <DataListCell key=\"memory\" id={`${item.getId()}_memory`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <MemoryCellComponent\n          totalBytes={metricStats.totalBytes}\n          memoryByPod={metricStats.memoryByPod}\n        />\n      )}\n    </DataListCell>\n  );\n  const cpuCell = (\n    <DataListCell key=\"cpu\" id={`${item.getId()}_metrics`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <CpuCellComponent cpuByPod={metricStats.cpuByPod} totalCores={metricStats.totalCores} />\n      )}\n    </DataListCell>\n  );\n\n  // No status cell\n  const statusCell = <DataListCell key=\"status\" id={`${item.getId()}_status`} />;\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      memoryCell={memoryCell}\n      cpuCell={cpuCell}\n      statusCell={statusCell}\n      {...rest}\n    />\n  );\n});\n\nexport default VMListViewNode;\n","import * as React from 'react';\nimport { useK8sWatchResources } from '@console/dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks';\nimport { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { PodModel, ReplicationControllerModel } from '@console/internal/models';\nimport { K8sResourceCommon, K8sResourceKind, PodKind } from '@console/internal/module/k8s';\nimport {\n  getReplicationControllersForResource,\n  useDebounceCallback,\n  useDeepCompareMemoize,\n} from '@console/shared';\nimport { VirtualMachineInstanceModel } from './kubevirt-models';\nimport { VMIKind } from './kubevirt-types';\nimport { findVMIPod } from './kubevirt-utils';\nimport { PodRCData } from './pod-utils';\n\nexport const usePodsForVm = (\n  vm: K8sResourceKind,\n): { loaded: boolean; loadError: string; podData: PodRCData } => {\n  const { namespace } = vm.metadata;\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const [podData, setPodData] = React.useState<PodRCData>();\n  const vmName = vm.metadata.name;\n  const vmRef = React.useRef<K8sResourceKind>(vm);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      replicationControllers: {\n        isList: true,\n        groupVersionKind: getGroupVersionKindForModel(ReplicationControllerModel),\n        namespace,\n      },\n      pods: {\n        isList: true,\n        groupVersionKind: getGroupVersionKindForModel(PodModel),\n        namespace,\n      },\n      virtualmachineinstances: {\n        isList: true,\n        groupVersionKind: getGroupVersionKindForModel(VirtualMachineInstanceModel),\n        namespace,\n        optional: true,\n      },\n    }),\n    [namespace],\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceCommon[] }>(watchedResources);\n\n  const updateResults = React.useCallback(\n    (updatedResources) => {\n      const errorKey = Object.keys(updatedResources).find((key) => updatedResources[key].loadError);\n      if (errorKey) {\n        setLoadError(updatedResources[errorKey].loadError);\n        return;\n      }\n      if (\n        Object.keys(updatedResources).length > 0 &&\n        Object.keys(updatedResources).every((key) => updatedResources[key].loaded)\n      ) {\n        const vmis = updatedResources.virtualmachineinstances.data;\n        const vmi = vmis.find((instance) => instance.metadata.name === vmName) as VMIKind;\n        const { visibleReplicationControllers } = getReplicationControllersForResource(\n          vmRef.current,\n          updatedResources,\n        );\n        const [current, previous] = visibleReplicationControllers;\n        const launcherPod = findVMIPod(vmi, updatedResources.pods.data as PodKind[]);\n        const podRCData: PodRCData = {\n          current,\n          previous,\n          isRollingOut: false,\n          pods: launcherPod ? [launcherPod] : [],\n          obj: vm,\n        };\n        setLoaded(true);\n        setLoadError(null);\n        setPodData(podRCData);\n      }\n    },\n    // Don't update on a resource change, we want the debounce callback to be consistent\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [vmName],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(updateResults, 250);\n\n  React.useEffect(() => {\n    debouncedUpdateResources(resources);\n  }, [debouncedUpdateResources, resources]);\n\n  return useDeepCompareMemoize({ loaded, loadError, podData });\n};\n","import { K8sModel } from '@console/internal/module/k8s/types';\n\nexport const VirtualMachineInstanceModel: K8sModel = {\n  label: 'Virtual Machine Instance',\n  labelPlural: 'Virtual Machine Instances',\n  apiVersion: 'v1',\n  apiGroup: 'kubevirt.io',\n  plural: 'virtualmachineinstances',\n  abbr: 'VMI',\n  namespaced: true,\n  kind: 'VirtualMachineInstance',\n  id: 'virtualmachineinstance',\n  color: '#002F5D',\n  crd: true,\n};\n\nexport const SubscriptionModel: K8sModel = {\n  kind: 'Subscription',\n  label: 'Subscription',\n  labelPlural: 'Subscriptions',\n  apiGroup: 'operators.coreos.com',\n  apiVersion: 'v1alpha1',\n  abbr: 'SUB',\n  namespaced: true,\n  crd: true,\n  plural: 'subscriptions',\n  legacyPluralURL: true,\n};\n\nexport const PackageManifestModel: K8sModel = {\n  kind: 'PackageManifest',\n  label: 'PackageManifest',\n  labelPlural: 'PackageManifests',\n  apiGroup: 'packages.operators.coreos.com',\n  apiVersion: 'v1',\n  abbr: 'PM',\n  namespaced: true,\n  crd: true,\n  plural: 'packagemanifests',\n};\n","import { PodKind } from '@console/internal/module/k8s';\nimport { getNamespace, getOwnerReferences, getUID } from '@console/shared';\nimport { VMIKind } from './kubevirt-types';\n\nconst isPodReady = (pod: PodKind): boolean =>\n  pod?.status?.phase === 'Running' && pod?.status?.containerStatuses?.every((s) => s.ready);\n\nexport const findVMIPod = (vmi?: VMIKind, pods?: PodKind[]) => {\n  if (!pods || !vmi) {\n    return null;\n  }\n\n  const vmUID = getUID(vmi);\n  const prefixedPods = pods.filter((p) => {\n    const podOwnerReferences = getOwnerReferences(p);\n    return (\n      getNamespace(p) === getNamespace(vmi) &&\n      podOwnerReferences &&\n      podOwnerReferences.some((podOwnerReference) => podOwnerReference.uid === vmUID)\n    );\n  });\n\n  // Return the newest, most ready Pod created\n  return prefixedPods\n    .sort((a: PodKind, b: PodKind) =>\n      a.metadata.creationTimestamp > b.metadata.creationTimestamp ? -1 : 1,\n    )\n    .sort((a: PodKind) => (isPodReady(a) ? -1 : 1))[0];\n};\n","import * as React from 'react';\nimport {\n  DataListCell,\n  DataList,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { getChildKinds } from './list-view-utils';\nimport TopologyListViewKindGroup from './TopologyListViewKindGroup';\n\ninterface TopologyListViewUnassignedGroupProps {\n  items: Node[];\n  showCategory: boolean;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst TopologyListViewUnassignedGroup: React.FC<TopologyListViewUnassignedGroupProps> = ({\n  items,\n  showCategory,\n  selectedIds,\n  onSelect,\n}) => {\n  const { t } = useTranslation();\n  if (!items?.length) {\n    return null;\n  }\n\n  const { kindsMap, kindKeys } = getChildKinds(items);\n\n  const unassignedContent = (\n    <DataList aria-label=\"unassigned items\" id=\"unassigned-items\">\n      {kindKeys.map((key) => (\n        <TopologyListViewKindGroup\n          groupLabel={t('topology~unassigned')}\n          key={key}\n          kind={key}\n          childElements={kindsMap[key]}\n          selectedIds={selectedIds}\n          onSelect={onSelect}\n        />\n      ))}\n    </DataList>\n  );\n\n  if (!showCategory) {\n    return unassignedContent;\n  }\n\n  const cells = [];\n  cells.push(\n    <DataListCell\n      key=\"label\"\n      className=\"odc-topology-list-view__unassigned-label\"\n      id=\"unassigned_label\"\n    >\n      {t('topology~No application group')}\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem\n      className=\"odc-topology-list-view__application\"\n      key=\"unassigned\"\n      aria-labelledby=\"unassigned_label\"\n      isExpanded\n    >\n      <DataListItemRow className=\"odc-topology-list-view__application-row odc-topology-list-view__unassigned-group\">\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n      {unassignedContent}\n    </DataListItem>\n  );\n};\n\nexport default observer(TopologyListViewUnassignedGroup);\n","import * as React from 'react';\nimport { GraphElement, BaseEdge, isEdge, isNode } from '@patternfly/react-topology';\nimport {\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n  TYPE_EVENT_SINK_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport ConnectedTopologyEdgePanel from './TopologyEdgePanel';\nimport TopologySideBarContent from './TopologySideBarContent';\n\nexport const isSidebarRenderable = (selectedEntity: GraphElement): boolean => {\n  if (isNode(selectedEntity) || isEdge(selectedEntity)) {\n    return true;\n  }\n  return false;\n};\n\nexport const SelectedEntityDetails: React.FC<{ selectedEntity: GraphElement }> = ({\n  selectedEntity,\n}) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  if (isNode(selectedEntity)) {\n    return <TopologySideBarContent element={selectedEntity} />;\n  }\n\n  if (isEdge(selectedEntity)) {\n    if (\n      [\n        TYPE_REVISION_TRAFFIC,\n        TYPE_EVENT_SOURCE_LINK,\n        TYPE_EVENT_SINK_LINK,\n        TYPE_KAFKA_CONNECTION_LINK,\n        TYPE_SERVICE_BINDING,\n        TYPE_EVENT_PUB_SUB_LINK,\n        TYPE_CONNECTS_TO,\n      ].includes(selectedEntity.getType())\n    ) {\n      return <TopologySideBarContent element={selectedEntity} />;\n    }\n\n    return <ConnectedTopologyEdgePanel edge={selectedEntity as BaseEdge} />;\n  }\n  return null;\n};\n","/**\n * @deprecated This file needs to be removed after migrating the Traffic connector side-panel to dynamic extensions\n */\nimport * as React from 'react';\nimport { Edge, isNode, Node } from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { ActionsMenu } from '@console/internal/components/utils';\nimport { edgeActions } from '../../actions/edgeActions';\nimport { TYPE_TRAFFIC_CONNECTOR } from '../../const';\nimport TopologyEdgeResourcesPanel from './TopologyEdgeResourcesPanel';\n\ntype TopologyEdgePanelProps = {\n  edge: Edge;\n};\n\nconst connectorTypeToTitleKey = (type: string): string => {\n  switch (type) {\n    case TYPE_TRAFFIC_CONNECTOR:\n      // t('topology~Traffic connector')\n      return 'topology~Traffic connector';\n    default:\n      return '';\n  }\n};\n\nconst TopologyEdgePanel: React.FC<TopologyEdgePanelProps> = ({ edge }) => {\n  const { t } = useTranslation();\n  const nodes = edge\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <div className=\"overview__sidebar-pane-head resource-overview__heading\">\n        <h1 className=\"co-m-pane__heading\">\n          <div className=\"co-m-pane__name co-resource-item\">\n            {t(connectorTypeToTitleKey(edge.getType()))}\n          </div>\n          <div className=\"co-actions\">\n            <ActionsMenu actions={edgeActions(edge, nodes)} />\n          </div>\n        </h1>\n      </div>\n      <ul\n        className={classNames(\n          'co-m-horizontal-nav__menu',\n          'co-m-horizontal-nav__menu--within-sidebar',\n          'co-m-horizontal-nav__menu--within-overview-sidebar',\n          'odc-application-resource-tab',\n        )}\n      >\n        <li className=\"co-m-horizontal-nav__menu-item\">\n          <button type=\"button\">{t('topology~Resources')}</button>\n        </li>\n      </ul>\n      <TopologyEdgeResourcesPanel edge={edge} />\n    </div>\n  );\n};\n\nexport default TopologyEdgePanel;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport SideBarBody from './components/SideBarBody';\nimport SideBarHeading from './components/SideBarHeading';\n\nconst TopologySideBarContent: React.FC<{ element: GraphElement }> = ({ element }) => {\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <SideBarHeading element={element} />\n      <SideBarBody element={element} />\n    </div>\n  );\n};\n\nexport default TopologySideBarContent;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { SimpleTabNav, Tab } from '@console/internal/components/utils';\nimport { useQueryParams } from '@console/shared/src';\nimport SideBarTabLoader from '../providers/SideBarTabLoader';\n\nconst SimpleTabNavWrapper: React.FC<{ tabs: Tab[] }> = ({ tabs }) => {\n  const { t } = useTranslation();\n  const selectedTab = useSelector(({ UI }) => UI.getIn(['overview', 'selectedDetailsTab']));\n  const dispatch = useDispatch();\n  const queryParams = useQueryParams();\n  const selectTabParam = queryParams.get('selectTab');\n  const handleClickTab = React.useCallback(\n    (name) => {\n      dispatch(UIActions.selectOverviewDetailsTab(name));\n    },\n    [dispatch],\n  );\n  return (\n    <SimpleTabNav\n      selectedTab={selectTabParam || selectedTab || t('topology~Details')}\n      tabs={tabs}\n      tabProps={null}\n      onClickTab={handleClickTab}\n      additionalClassNames=\"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\"\n    />\n  );\n};\n\nconst SideBarBody: React.FC<{ element: GraphElement }> = ({ element }) => {\n  const uid = element.getId();\n  return (\n    <SideBarTabLoader key={uid} element={element}>\n      {(tabs, loaded) => (loaded ? <SimpleTabNavWrapper tabs={tabs} /> : null)}\n    </SideBarTabLoader>\n  );\n};\n\nexport default SideBarBody;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Tab } from '@console/internal/components/utils';\nimport SideBarTabHookResolver from './SideBarTabHookResolver';\nimport { useDetailsTab } from './useDetailsTab';\nimport { useDetailsTabSection } from './useDetailsTabSection';\n\ntype SideBarTabLoaderProps = {\n  element: GraphElement;\n  children: (tabs: Tab[], loaded: boolean) => React.ReactElement;\n};\n\nconst SideBarTabLoader: React.FC<SideBarTabLoaderProps> = ({ element, children }) => {\n  const tabExtensions = useDetailsTab();\n  const [tabSectionExtensions, tabSectionExtensionsResolved] = useDetailsTabSection();\n\n  if (!tabSectionExtensionsResolved) {\n    return children([], false);\n  }\n\n  return (\n    <SideBarTabHookResolver\n      element={element}\n      tabExtensions={tabExtensions}\n      tabSectionExtensions={tabSectionExtensions}\n    >\n      {children}\n    </SideBarTabHookResolver>\n  );\n};\n\nexport default SideBarTabLoader;\n","import * as React from 'react';\nimport { GraphElement, isEdge } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react-lite';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTab, DetailsTabSection, ResolvedExtension } from '@console/dynamic-plugin-sdk';\nimport { Tab } from '@console/internal/components/utils';\nimport { orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport { getResource } from '@console/topology/src/utils';\nimport { DefaultResourceSideBar } from '../DefaultResourceSideBar';\nimport TopologyEdgeResourcesPanel from '../TopologyEdgeResourcesPanel';\n\ntype ResolvedTabSection = Omit<DetailsTabSection['properties'], 'tab' | 'provider' | 'section'> & {\n  contentElement: React.ReactNode;\n};\n\ntype ResolvedTabSections = {\n  [tabId: string]: ResolvedTabSection[];\n};\n\ntype TabBarTabHookResolverProps = {\n  element: GraphElement;\n  children: (tabs: Tab[], loaded: boolean) => React.ReactElement;\n  tabSectionExtensions: ResolvedExtension<DetailsTabSection>['properties'][];\n  tabExtensions: DetailsTab['properties'][];\n};\n\nconst blamedDeprecatedPlugins: Record<string, boolean> = {};\nconst renderNullNoop = () => null;\n\nconst TabBarTabHookResolver: React.FC<TabBarTabHookResolverProps> = ({\n  element: graphElement,\n  children,\n  tabSectionExtensions,\n  tabExtensions,\n}) => {\n  const { t } = useTranslation();\n\n  // resolving hooks in loop since number of extensions will remain the same\n  // TODO: Render each hook in its own child component...\n  const resolvedTabSections = tabSectionExtensions.reduce<ResolvedTabSections>(\n    (acc, { provider, section, tab: tabId, ...rest }) => {\n      let contentElement: React.ReactNode;\n\n      if (provider) {\n        const hookResult = provider(graphElement);\n        if (!hookResult) {\n          return acc;\n        }\n        [contentElement] = hookResult;\n      } else if (section) {\n        if (!blamedDeprecatedPlugins[rest.id]) {\n          blamedDeprecatedPlugins[rest.id] = true;\n          // eslint-disable-next-line no-console\n          console.warn(\n            `TabSectionExtension \"${rest.id}\" should be updated from section to provider (hook)`,\n          );\n        }\n        // Fallback to deprecated section\n        contentElement = section(graphElement, renderNullNoop);\n      }\n\n      if (!contentElement) {\n        return acc;\n      }\n      return {\n        ...acc,\n        ...(acc[tabId]\n          ? { [tabId]: [...acc[tabId], { ...rest, contentElement }] }\n          : { [tabId]: [{ ...rest, contentElement }] }),\n      };\n    },\n    {},\n  );\n\n  const [tabs, tabsLoaded] = React.useMemo(() => {\n    if (Object.keys(resolvedTabSections).length === 0) return [[], true];\n\n    const resolvedTabs: Tab[] = tabExtensions.reduce((acc, { id: tabId, label }) => {\n      if (!resolvedTabSections[tabId]) {\n        return acc;\n      }\n\n      const orderedResolvedExtensions = orderExtensionBasedOnInsertBeforeAndAfter<{\n        id: string;\n        contentElement: React.ReactNode;\n      }>(resolvedTabSections[tabId]);\n\n      const tabContent = orderedResolvedExtensions.map(({ id: tabSectionId, contentElement }) => (\n        <React.Fragment key={tabSectionId}>{contentElement}</React.Fragment>\n      ));\n      return [...acc, { name: label, component: tabContent }];\n    }, []);\n\n    return [resolvedTabs, true];\n  }, [tabExtensions, resolvedTabSections]);\n\n  // show default side bar\n  if (tabsLoaded && tabs.length === 0) {\n    const resource = getResource(graphElement);\n    resource &&\n      tabs.push({\n        name: t('topology~Details'),\n        component: () => <DefaultResourceSideBar resource={resource} />,\n      });\n    isEdge(graphElement) &&\n      tabs.push({\n        name: t('topology~Resources'),\n        component: () => <TopologyEdgeResourcesPanel edge={graphElement} />,\n      });\n  }\n\n  return children(tabs, tabsLoaded);\n};\n\n// TODO: Replace observer for full all childs to individual observer per section content element\nexport default observer(TabBarTabHookResolver);\n","import * as React from 'react';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport const DefaultResourceSideBar: React.FC<{ resource: K8sResourceKind }> = ({ resource }) => {\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <div className=\"overview__sidebar-pane-body resource-overview__body\">\n        <div className=\"resource-overview__summary\">\n          <ResourceSummary resource={resource} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { DetailsTab, isDetailsTab } from '@console/dynamic-plugin-sdk';\nimport { useExtensions } from '@console/plugin-sdk';\nimport { orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\n\nexport const useDetailsTab = (): DetailsTab['properties'][] => {\n  const extensions = useExtensions<DetailsTab>(isDetailsTab);\n  const ordered = React.useMemo<DetailsTab['properties'][]>(\n    () =>\n      orderExtensionBasedOnInsertBeforeAndAfter<DetailsTab['properties']>(\n        extensions.map(({ properties }) => properties),\n      ),\n    [extensions],\n  );\n  return ordered;\n};\n","import * as React from 'react';\nimport {\n  DetailsTabSection,\n  isDetailsTabSection,\n  ResolvedExtension,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\nimport { orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\n\nexport const useDetailsTabSection = (): [\n  ResolvedExtension<DetailsTabSection>['properties'][],\n  boolean,\n] => {\n  const [extensions, resolved] = useResolvedExtensions<DetailsTabSection>(isDetailsTabSection);\n  const ordered = React.useMemo<ResolvedExtension<DetailsTabSection>['properties'][]>(\n    () =>\n      resolved\n        ? orderExtensionBasedOnInsertBeforeAndAfter<\n            ResolvedExtension<DetailsTabSection>['properties']\n          >(extensions.map(({ properties }) => properties))\n        : [],\n    [extensions, resolved],\n  );\n  return [ordered, resolved];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DeploymentConfigDeprecationAlert } from '@console/internal/components/deployment-config';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport TopologyActions from '../../../actions/TopologyActions';\nimport { useDetailsResourceLink } from '../providers/useDetailsResourceLink';\nimport SideBarAlerts from './SideBarAlerts';\nimport './SideBarHeading.scss';\n\nconst SideBarHeading: React.FC<{ element: GraphElement }> = ({ element }) => {\n  const resourceLabel = element.getLabel();\n  const resourceLink = useDetailsResourceLink(element);\n  const resourceKind = element.getData()?.resource?.kind;\n  return (\n    <div className=\"overview__sidebar-pane-head resource-overview__heading\">\n      <h1 className=\"co-m-pane__heading\">\n        <div className=\"co-m-pane__name co-resource-item\">{resourceLink ?? resourceLabel}</div>\n        <div className=\"co-actions\">\n          <TopologyActions element={element} />\n        </div>\n      </h1>\n      {resourceKind === DeploymentConfigModel.kind && (\n        <div className=\"dc-deprecation-sidebar-alert\">\n          <DeploymentConfigDeprecationAlert />\n        </div>\n      )}\n      <div className=\"odc-topology-sidebar-alert\">\n        <SideBarAlerts element={element} />\n      </div>\n    </div>\n  );\n};\n\nexport default SideBarHeading;\n","import * as React from 'react';\nimport { observer, GraphElement } from '@patternfly/react-topology';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { ActionMenu, ActionMenuVariant, ActionServiceProvider } from '@console/shared';\nimport { getResource } from '../utils';\n\ntype TopologyActionsProps = {\n  element: GraphElement;\n};\n\nconst TopologyActions: React.FC<TopologyActionsProps> = ({ element }) => {\n  const resource = getResource(element);\n  const context = React.useMemo(() => {\n    const { csvName } = element.getData()?.data ?? {};\n    return {\n      'topology-actions': element,\n      'topology-context-actions': { element },\n      ...(resource ? { [referenceFor(resource)]: resource } : {}),\n      ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n    };\n  }, [element, resource]);\n  return (\n    <ActionServiceProvider key={element.getId()} context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport default observer(TopologyActions);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  DetailsResourceLink,\n  isDetailsResourceLink,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\n\nexport const useDetailsResourceLink = (\n  element: GraphElement,\n): React.Component | null | undefined => {\n  const [resurceLinkExtension, resolved] = useResolvedExtensions<DetailsResourceLink>(\n    isDetailsResourceLink,\n  );\n  const resourceLink = React.useMemo(() => {\n    return resolved\n      ? resurceLinkExtension\n          .sort((a, b) => b.properties.priority - a.properties.priority)\n          .find(({ properties: { link } }) => !!link(element))\n          ?.properties?.link?.(element)\n      : null;\n  }, [resurceLinkExtension, resolved, element]);\n  return resourceLink;\n};\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { GraphElement, observer } from '@patternfly/react-topology';\nimport {\n  DetailsResourceAlert,\n  DetailsResourceAlertContent,\n  isDetailsResourceAlert,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\nimport { USERSETTINGS_PREFIX, useUserSettings } from '@console/shared';\n\nconst SIDEBAR_ALERTS = 'sideBarAlerts';\n\nconst ResolveResourceAlerts: React.FC<{\n  id?: string;\n  useResourceAlertsContent?: (element: GraphElement) => DetailsResourceAlertContent;\n  element: GraphElement;\n}> = observer(function ResolveResourceAlerts({ id, useResourceAlertsContent, element }) {\n  const [showAlert, setShowAlert, loaded] = useUserSettings(\n    `${USERSETTINGS_PREFIX}.${SIDEBAR_ALERTS}.${id}.${element.getId()}`,\n    true,\n  );\n  const alertConfigs = useResourceAlertsContent(element);\n  if (!alertConfigs) return null;\n  const { variant, content, actionLinks, dismissible, title } = alertConfigs;\n  return loaded && showAlert ? (\n    <Alert\n      isInline\n      variant={variant}\n      title={title}\n      actionLinks={actionLinks}\n      actionClose={\n        dismissible && (\n          <AlertActionCloseButton\n            onClose={() => {\n              setShowAlert(false);\n            }}\n          />\n        )\n      }\n    >\n      {content}\n    </Alert>\n  ) : null;\n});\n\nconst SideBarAlerts: React.FC<{ element: GraphElement }> = ({ element }) => {\n  const [resourceAlertsExtension, resolved] = useResolvedExtensions<DetailsResourceAlert>(\n    isDetailsResourceAlert,\n  );\n  return resolved ? (\n    <>\n      {resourceAlertsExtension.map(({ uid, properties: { contentProvider, ...props } }) => {\n        const key = `${uid}-${element.getId()}`;\n        return (\n          <ResolveResourceAlerts\n            key={key}\n            {...props}\n            useResourceAlertsContent={contentProvider}\n            element={element}\n          />\n        );\n      })}\n    </>\n  ) : null;\n};\n\nexport default SideBarAlerts;\n","import * as React from 'react';\nimport { DrawerPanelContent } from '@patternfly/react-core';\nimport { TopologySideBar as PFTopologySideBar } from '@patternfly/react-topology';\nimport { useUserSettings } from '@console/shared';\nimport CloseButton from '@console/shared/src/components/close-button';\nimport { TOPOLOGY_SIDE_BAR_WIDTH_STORAGE_KEY } from '../../const';\nimport './TopologySideBarTabSection.scss';\n\ntype TopologySideBarProps = {\n  onClose: () => void;\n};\n\nconst DEFAULT_SIDE_BAR_SIZE = 500;\n\nconst TopologySideBar: React.FC<TopologySideBarProps> = ({ children, onClose }) => {\n  const [sideBarSize, setSideBarSize, sideBarSizeLoaded] = useUserSettings(\n    TOPOLOGY_SIDE_BAR_WIDTH_STORAGE_KEY,\n    DEFAULT_SIDE_BAR_SIZE,\n  );\n  const handleResizeCallback = React.useCallback(\n    (_event, width: number) => {\n      setSideBarSize(width);\n    },\n    [setSideBarSize],\n  );\n  return (\n    <DrawerPanelContent\n      isResizable\n      minSize=\"400px\"\n      defaultSize={`${sideBarSizeLoaded ? sideBarSize : DEFAULT_SIDE_BAR_SIZE}px`}\n      onResize={handleResizeCallback}\n      className=\"ocs-sidebar-index\"\n    >\n      <PFTopologySideBar\n        resizable\n        className=\"pf-topology-side-bar-resizable\"\n        data-test=\"topology-sidepane\"\n      >\n        <div className=\"pf-topology-side-bar__body\">\n          <div className=\"co-sidebar-dismiss clearfix\">\n            <CloseButton\n              onClick={onClose}\n              dataTestID=\"sidebar-close-button\"\n              additionalClassName=\"co-sidebar-dismiss__close-button\"\n            />\n          </div>\n          {children}\n        </div>\n      </PFTopologySideBar>\n    </DrawerPanelContent>\n  );\n};\n\nexport default TopologySideBar;\n","import * as React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { TopologyIcon } from '@patternfly/react-icons/dist/esm/icons/topology-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\ntype LimitExceededStateProps = {\n  onShowTopologyAnyway: () => void;\n};\n\nexport const LimitExceededState: React.FC<LimitExceededStateProps> = ({ onShowTopologyAnyway }) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState>\n      <EmptyStateHeader\n        titleText={<>{t(`topology~Loading is taking longer than expected`)}</>}\n        icon={<EmptyStateIcon icon={TopologyIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody>\n        {t(\n          `topology~We noticed that it is taking a long time to visualize your application Topology. You can use Search to find specific resources or click Continue to keep waiting.`,\n        )}\n      </EmptyStateBody>\n      <EmptyStateFooter>\n        <Button variant=\"primary\" component={(props) => <Link {...props} to=\"/search-page\" />}>\n          {t('topology~Go to Search')}\n        </Button>\n        <EmptyStateActions>\n          <Button variant=\"link\" onClick={onShowTopologyAnyway}>\n            {t('topology~Continue')}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n","import * as React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { TopologyIcon } from '@patternfly/react-icons/dist/esm/icons/topology-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\ntype TopologyEmptyStateProps = {\n  setIsQuickSearchOpen: (isOpen: boolean) => void;\n};\n\nconst TopologyEmptyState: React.FC<TopologyEmptyStateProps> = ({ setIsQuickSearchOpen }) => {\n  const { t } = useTranslation();\n\n  return (\n    <EmptyState\n      className=\"odc-topology__empty-state\"\n      variant={EmptyStateVariant.full}\n      data-test=\"no-resources-found\"\n    >\n      <EmptyStateHeader\n        titleText={<>{t('topology~No resources found')}</>}\n        icon={<EmptyStateIcon icon={TopologyIcon} />}\n        headingLevel=\"h3\"\n      />\n      <EmptyStateFooter>\n        <EmptyStateActions>\n          <Trans t={t} ns=\"topology\">\n            <Button\n              isInline\n              variant=\"link\"\n              data-test=\"start-building-your-application\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setIsQuickSearchOpen(true);\n              }}\n            >\n              Start building your application\n            </Button>\n            {' or visit the '}\n            <Link to=\"/add\" data-test=\"add-page\">\n              Add page\n            </Link>\n            {' for more details.'}\n          </Trans>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nexport default React.memo(TopologyEmptyState);\n","import * as React from 'react';\nimport { Tooltip, Popover, Button, Icon } from '@patternfly/react-core';\nimport { ListIcon } from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport { TopologyIcon } from '@patternfly/react-icons/dist/esm/icons/topology-icon';\nimport { observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FileUploadContext,\n  FileUploadContextType,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport { allImportResourceAccess } from '@console/dev-console/src/actions/add-resources';\nimport { useAddToProjectAccess } from '@console/dev-console/src/utils/useAddToProjectAccess';\nimport { useIsMobile } from '@console/shared';\nimport { ModelContext, ExtensibleModel } from '../../data-transforms/ModelContext';\nimport { TopologyViewType } from '../../topology-types';\nimport { getTopologyShortcuts } from '../graph-view/TopologyShortcuts';\n\ninterface TopologyPageToolbarProps {\n  viewType: TopologyViewType;\n  onViewChange: (view: TopologyViewType) => void;\n}\n\nconst TopologyPageToolbar: React.FC<TopologyPageToolbarProps> = observer(\n  function TopologyPageToolbar({ viewType, onViewChange }) {\n    const { t } = useTranslation();\n    const isMobile = useIsMobile();\n    const { extensions } = React.useContext<FileUploadContextType>(FileUploadContext);\n    const showGraphView = viewType === TopologyViewType.graph;\n    const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n    const { namespace, isEmptyModel } = dataModelContext;\n    const createResourceAccess: string[] = useAddToProjectAccess(namespace);\n    const allImportAccess = createResourceAccess.includes(allImportResourceAccess);\n    const viewChangeTooltipContent = showGraphView\n      ? t('topology~List view')\n      : t('topology~Graph view');\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <>\n        {!isMobile ? (\n          <Popover\n            aria-label={t('topology~Shortcuts')}\n            bodyContent={getTopologyShortcuts(t, {\n              supportedFileTypes: extensions,\n              isEmptyModel,\n              viewType,\n              allImportAccess,\n            })}\n            position=\"left\"\n            maxWidth=\"100vw\"\n          >\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              className=\"odc-topology__shortcuts-button\"\n              icon={<QuestionCircleIcon />}\n              data-test-id=\"topology-view-shortcuts\"\n            >\n              {t('topology~View shortcuts')}\n            </Button>\n          </Popover>\n        ) : null}\n        <Tooltip position=\"left\" content={viewChangeTooltipContent}>\n          <Button\n            variant=\"link\"\n            aria-label={viewChangeTooltipContent}\n            className=\"pf-m-plain odc-topology__view-switcher\"\n            data-test-id=\"topology-switcher-view\"\n            isDisabled={isEmptyModel}\n            onClick={() =>\n              onViewChange(showGraphView ? TopologyViewType.list : TopologyViewType.graph)\n            }\n          >\n            <Icon size=\"md\">{showGraphView ? <ListIcon /> : <TopologyIcon />}</Icon>\n          </Button>\n        </Tooltip>\n      </>\n    );\n  },\n);\n\nexport default TopologyPageToolbar;\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport { Shortcut, ShortcutTable } from '@console/shared';\nimport { TopologyViewType } from '../../topology-types';\n\nexport type Options = {\n  supportedFileTypes: string[];\n  isEmptyModel: boolean;\n  viewType: TopologyViewType;\n  allImportAccess: boolean;\n};\nexport const getTopologyShortcuts = (t: TFunction, options: Options): React.ReactElement => {\n  const { supportedFileTypes, isEmptyModel, viewType, allImportAccess } = options;\n  return (\n    <ShortcutTable>\n      {!isEmptyModel && viewType === TopologyViewType.graph && (\n        <>\n          <Shortcut data-test-id=\"move\" drag>\n            {t('topology~Move')}\n          </Shortcut>\n          {allImportAccess && (\n            <>\n              <Shortcut data-test-id=\"edit-application-grouping\" shift drag>\n                {t('topology~Edit application grouping')}\n              </Shortcut>\n              <Shortcut data-test-id=\"context-menu\" rightClick>\n                {t('topology~Access context menu')}\n              </Shortcut>\n              <Shortcut data-test-id=\"create-connector-handle\" hover>\n                {t('topology~Access create connector handle')}\n              </Shortcut>\n            </>\n          )}\n        </>\n      )}\n      {!isEmptyModel && (\n        <Shortcut data-test-id=\"view-details\" click>\n          {t('topology~View details in side panel')}\n        </Shortcut>\n      )}\n      <Shortcut data-test-id=\"open-quick-search\" ctrl keyName=\"Spacebar\">\n        {t('topology~Open quick search modal')}\n      </Shortcut>\n      {supportedFileTypes?.length > 0 && allImportAccess && (\n        <Shortcut data-test-id=\"upload-file\" dragNdrop>\n          {t('topology~Upload file ({{fileTypes}}) to project', {\n            fileTypes: supportedFileTypes.map((ex) => `.${ex}`).toString(),\n          })}\n        </Shortcut>\n      )}\n    </ShortcutTable>\n  );\n};\n"],"sourceRoot":""}