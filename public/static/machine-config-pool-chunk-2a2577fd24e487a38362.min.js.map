{"version":3,"sources":["webpack:///./public/components/machine-config.tsx","webpack:///./public/components/machine-config-pool.tsx"],"names":["machineConfigReference","machineConfigMenuActions","getExtensionsActionsForKind","factory","common","MachineConfigSummary","obj","t","resource","spec","osImageURL","pages","details","files","config","storage","className","text","map","file","i","key","path","columnGap","default","mode","overwrite","headerContent","bodyContent","isHorizontal","isFluid","toString","variant","plain","contents","source","value","decodeURIComponent","replace","editYaml","events","MachineConfigDetailsPage","props","kind","menuActions","tableColumnClasses","columnClass","MachineConfigTableRow","name","metadata","timestamp","creationTimestamp","actions","MachineConfigList","Header","title","sortField","transforms","Row","virtualize","MachineConfigPage","canCreate","rest","ListComponent","machineConfigPoolReference","machineConfigPoolMenuActions","labelKey","paused","callback","catch","err","error","message","accessReview","group","apiGroup","plural","verb","getConditionStatus","mcp","type","conditions","status","condition","Unknown","MCPUpdateStatus","MachineConfigPoolCharacteristics","configuration","maxUnavailable","apiVersion","label","MachineConfigPoolCounts","content","machineCount","count","readyMachineCount","updatedMachineCount","unavailableMachineCount","MachineConfigPoolSummary","machineConfigSelector","showNodeSelector","nodeSelector","selector","model","machineConfigs","showTitle","MachineConfigPoolUpdateStatus","Paused","Updating","Updated","MachineConfigPoolDetailsPage","MachineConfigPoolList","machineConfigPools","data","Degraded","MachineConfigPoolPage"],"mappings":"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","file":"machine-config-pool-chunk-2a2577fd24e487a38362.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport {\n  Button,\n  ButtonVariant,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  Popover,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport { BlueInfoCircleIcon } from '@console/dynamic-plugin-sdk/src';\n\nimport { MachineConfigKind, referenceForModel } from '../module/k8s';\nimport { MachineConfigModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  CopyToClipboard,\n  Kebab,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nexport const machineConfigReference = referenceForModel(MachineConfigModel);\nconst machineConfigMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(MachineConfigModel),\n  ...Kebab.factory.common,\n];\n\nconst MachineConfigSummary: React.SFC<MachineConfigSummaryProps> = ({ obj, t }) => (\n  <ResourceSummary resource={obj}>\n    <dt>{t('public~OS image URL')}</dt>\n    <dd>{obj.spec.osImageURL || '-'}</dd>\n  </ResourceSummary>\n);\n\nconst MachineConfigDetails: React.SFC<MachineConfigDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const files = obj.spec.config?.storage?.files;\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~MachineConfig details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <MachineConfigSummary obj={obj} t={t} />\n          </div>\n        </div>\n      </div>\n      {files && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Configuration files')} />\n          {files.map((file, i) => (\n            <div className=\"pf-v5-u-mb-xl\" key={file.path}>\n              <Flex columnGap={{ default: 'columnGapNone' }} className=\"pf-v5-u-mb-md\">\n                <TextContent>\n                  <Text data-test={`config-file-path-${i}`}>{file.path}</Text>\n                </TextContent>\n                {(file.mode || file.overwrite) && (\n                  <Popover\n                    headerContent={t('public~Properties')}\n                    bodyContent={\n                      <DescriptionList isHorizontal isFluid>\n                        <DescriptionListGroup>\n                          {file.mode && (\n                            <>\n                              <DescriptionListTerm>{t('public~Mode')}</DescriptionListTerm>\n                              <DescriptionListDescription>{file.mode}</DescriptionListDescription>\n                            </>\n                          )}\n                          {file.overwrite && (\n                            <>\n                              <DescriptionListTerm>{t('public~Overwrite')}</DescriptionListTerm>\n                              <DescriptionListDescription>\n                                {file.overwrite.toString()}\n                              </DescriptionListDescription>\n                            </>\n                          )}\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    }\n                  >\n                    <Button\n                      variant={ButtonVariant.plain}\n                      aria-label={'public~Info'}\n                      className=\"pf-v5-u-ml-sm pf-v5-u-p-0\"\n                    >\n                      <BlueInfoCircleIcon />\n                    </Button>\n                  </Popover>\n                )}\n              </Flex>\n              {file.contents?.source && (\n                <CopyToClipboard\n                  value={decodeURIComponent(file.contents.source).replace(/^(data:,)/, '')}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(MachineConfigDetails),\n  navFactory.editYaml(),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const MachineConfigDetailsPage: React.SFC<any> = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      kind={machineConfigReference}\n      menuActions={machineConfigMenuActions}\n      pages={pages}\n    />\n  );\n};\n\nconst tableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  '',\n  Kebab.columnClass,\n];\n\nconst MachineConfigTableRow: React.FC<RowFunctionArgs<MachineConfigKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={machineConfigReference} name={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {_.get(\n          obj,\n          [\n            'metadata',\n            'annotations',\n            'machineconfiguration.openshift.io/generated-by-controller-version',\n          ],\n          '-',\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {_.get(obj, 'spec.config.ignition.version') || '-'}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        {_.get(obj, 'spec.osImageURL') || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={machineConfigMenuActions}\n          kind={machineConfigReference}\n          resource={obj}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst MachineConfigList: React.SFC<any> = (props) => {\n  const { t } = useTranslation();\n  const MachineConfigTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Generated by controller'),\n        sortField:\n          \"metadata.annotations['machineconfiguration.openshift.io/generated-by-controller-version']\",\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Ignition version'),\n        sortField: 'spec.config.ignition.version',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~OS image URL'),\n        sortField: 'spec.osImageURL',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[5] },\n      },\n    ];\n  };\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~MachineConfigs')}\n      Header={MachineConfigTableHeader}\n      Row={MachineConfigTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const MachineConfigPage: React.SFC<any> = ({ canCreate = true, ...rest }) => (\n  <ListPage\n    {...rest}\n    canCreate={canCreate}\n    ListComponent={MachineConfigList}\n    kind={machineConfigReference}\n  />\n);\n\ntype MachineConfigDetailsProps = {\n  obj: MachineConfigKind;\n};\n\ntype MachineConfigSummaryProps = {\n  obj: MachineConfigKind;\n  t: TFunction;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { PauseCircleIcon } from '@patternfly/react-icons/dist/esm/icons/pause-circle-icon';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\n\nimport { Conditions } from './conditions';\nimport { errorModal } from './modals';\nimport { MachineConfigPoolModel } from '../models';\nimport { machineConfigReference, MachineConfigPage } from './machine-config';\nimport {\n  K8sResourceCondition,\n  K8sResourceConditionStatus,\n  MachineConfigPoolConditionType,\n  MachineConfigPoolKind,\n  referenceForModel,\n} from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  LoadingInline,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  togglePaused,\n  WorkloadPausedAlert,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { MachineConfigPoolsArePausedAlert } from './cluster-settings/cluster-settings';\nimport { UpToDateMessage } from './cluster-settings/cluster-status';\n\nconst pauseAction: KebabAction = (kind, obj) => ({\n  // t('public~Resume updates')\n  // t('public~Pause updates')\n  labelKey: obj.spec?.paused ? 'public~Resume updates' : 'public~Pause updates',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    verb: 'patch',\n  },\n});\n\nconst machineConfigPoolReference = referenceForModel(MachineConfigPoolModel);\nconst machineConfigPoolMenuActions = [\n  pauseAction,\n  ...Kebab.getExtensionsActionsForKind(MachineConfigPoolModel),\n  ...Kebab.factory.common,\n];\nconst getConditionStatus = (\n  mcp: MachineConfigPoolKind,\n  type: MachineConfigPoolConditionType,\n): K8sResourceCondition['status'] => {\n  const { conditions } = mcp.status || {};\n  const condition = _.find(conditions, { type });\n  return condition ? condition.status : K8sResourceConditionStatus.Unknown;\n};\n\nenum MCPUpdateStatus {\n  Paused = 'Paused',\n  Updating = 'Updating',\n  Updated = 'Updated',\n}\n\nconst getMachineConfigPoolUpdateStatus = (mcp: MachineConfigPoolKind) => {\n  if (mcp.spec?.paused) {\n    return MCPUpdateStatus.Paused;\n  }\n  if (getConditionStatus(mcp, MachineConfigPoolConditionType.Updating) === 'True') {\n    return MCPUpdateStatus.Updating;\n  }\n  if (getConditionStatus(mcp, MachineConfigPoolConditionType.Updated) === 'True') {\n    return MCPUpdateStatus.Updated;\n  }\n  return null;\n};\n\nconst MachineConfigPoolCharacteristics: React.SFC<MachineConfigPoolCharacteristicsProps> = ({\n  obj,\n}) => {\n  const configuration = _.get(obj, 'status.configuration');\n  const maxUnavailable = _.get(obj, 'spec.maxUnavailable', 1);\n  const { t } = useTranslation();\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{t('public~Max unavailable machines')}</dt>\n      <dd>{maxUnavailable}</dd>\n      {configuration && (\n        <>\n          <dt>{t('public~Current configuration')}</dt>\n          <dd>\n            {configuration.name ? (\n              <ResourceLink\n                kind={machineConfigReference}\n                name={configuration.name}\n                title={configuration.name}\n              />\n            ) : (\n              '-'\n            )}\n          </dd>\n          <dt>{t('public~Current configuration source')}</dt>\n          <dd>\n            {configuration.source\n              ? _.map(configuration.source, ({ apiVersion, kind, name }) => (\n                  <ResourceLink\n                    key={`${apiVersion}-${kind}-${name}`}\n                    kind={machineConfigReference}\n                    name={name}\n                    title={name}\n                  />\n                ))\n              : '-'}\n          </dd>\n          <DetailsItem label={t('public~Paused')} obj={obj} path={'spec.paused'}>\n            {obj.spec?.paused ? t('public~True') : t('public~False')}\n          </DetailsItem>\n        </>\n      )}\n    </dl>\n  );\n};\n\nconst MachineConfigPoolCounts: React.SFC<MachineConfigPoolCountsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"co-m-pane__body-group\">\n      <div className=\"co-detail-table\">\n        <div className=\"co-detail-table__row row\">\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">{t('public~Total machine count')}</dt>\n              <dd>\n                <Tooltip content={t('public~Total number of machines in the machine pool.')}>\n                  <span>\n                    {obj?.status?.machineCount}{' '}\n                    {t('public~machine', { count: obj?.status?.machineCount })}\n                  </span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">{t('public~Ready machines')}</dt>\n              <dd>\n                <Tooltip content={t('public~Total number of ready machines targeted by the pool.')}>\n                  <span>\n                    {obj?.status?.readyMachineCount}{' '}\n                    {t('public~machine', { count: obj?.status?.readyMachineCount })}\n                  </span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">{t('public~Updated count')}</dt>\n              <dd>\n                <Tooltip\n                  content={t(\n                    'public~Total number of machines targeted by the pool that have the CurrentMachineConfig as their config.',\n                  )}\n                >\n                  <span>\n                    {obj?.status?.updatedMachineCount}{' '}\n                    {t('public~machine', { count: obj?.status?.updatedMachineCount })}\n                  </span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section co-detail-table__section--last\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">{t('public~Unavailable count')}</dt>\n              <dd>\n                <Tooltip\n                  content={t(\n                    'public~Total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.',\n                  )}\n                >\n                  <span>\n                    {obj?.status?.unavailableMachineCount}{' '}\n                    {t('public~machine', {\n                      count: obj?.status?.unavailableMachineCount,\n                    })}\n                  </span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MachineConfigPoolSummary: React.SFC<MachineConfigPoolSummaryProps> = ({ obj }) => {\n  const machineConfigSelector = _.get(obj, 'spec.machineConfigSelector');\n  const { t } = useTranslation();\n  return (\n    <ResourceSummary resource={obj} showNodeSelector nodeSelector=\"spec.nodeSelector\">\n      <dt>{t('public~MachineConfig selector')}</dt>\n      <dd>\n        <Selector kind={machineConfigReference} selector={machineConfigSelector} />\n      </dd>\n    </ResourceSummary>\n  );\n};\n\nconst MachineConfigList: React.SFC<MachineConfigListProps> = ({ obj }) => (\n  <MachineConfigPage\n    canCreate={false}\n    showTitle={false}\n    selector={_.get(obj, 'spec.machineConfigSelector')}\n  />\n);\n\nconst MachineConfigPoolDetails: React.SFC<MachineConfigPoolDetailsProps> = ({ obj }) => {\n  const paused = _.get(obj, 'spec.paused');\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~MachineConfigPool details')} />\n        {paused && <WorkloadPausedAlert model={MachineConfigPoolModel} obj={obj} />}\n        <MachineConfigPoolCounts obj={obj} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <MachineConfigPoolSummary obj={obj} />\n          </div>\n          <div className=\"col-sm-6\">\n            <MachineConfigPoolCharacteristics obj={obj} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={_.get(obj, 'status.conditions')} />\n      </div>\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(MachineConfigPoolDetails),\n  navFactory.editYaml(),\n  navFactory.machineConfigs(MachineConfigList),\n  navFactory.events(ResourceEventStream),\n];\n\nconst MachineConfigPoolUpdateStatus: React.FC<MachineConfigPoolUpdateStatusProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  switch (getMachineConfigPoolUpdateStatus(obj)) {\n    case MCPUpdateStatus.Paused:\n      return (\n        <>\n          <PauseCircleIcon /> {t('public~Paused')}\n        </>\n      );\n    case MCPUpdateStatus.Updating:\n      return (\n        <>\n          <SyncAltIcon className=\"fa-spin co-icon-space-r\" />\n          {t('public~Updating')}\n        </>\n      );\n    case MCPUpdateStatus.Updated:\n      return <UpToDateMessage />;\n    default:\n      return <LoadingInline />;\n  }\n};\n\nexport const MachineConfigPoolDetailsPage: React.SFC<any> = (props) => (\n  <DetailsPage\n    {...props}\n    kind={machineConfigPoolReference}\n    menuActions={machineConfigPoolMenuActions}\n    pages={pages}\n  />\n);\n\nconst tableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-33-on-md',\n  '',\n  '',\n  Kebab.columnClass,\n];\n\nconst MachineConfigPoolList: React.SFC<any> = (props) => {\n  const { t } = useTranslation();\n  const MachineConfigPoolTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Configuration'),\n        sortField: 'status.configuration.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Degraded'),\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Update status'),\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n\n  const MachineConfigPoolTableRow: React.FC<RowFunctionArgs<MachineConfigPoolKind>> = ({ obj }) => {\n    return (\n      <>\n        <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n          <ResourceLink kind={machineConfigPoolReference} name={obj.metadata.name} />\n        </TableData>\n        <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n          {_.get(obj, 'status.configuration.name') ? (\n            <ResourceLink\n              kind={machineConfigReference}\n              name={obj.status.configuration.name}\n              title={obj.status.configuration.name}\n            />\n          ) : (\n            '-'\n          )}\n        </TableData>\n        <TableData className={classNames(tableColumnClasses[2], 'co-truncate')}>\n          {getConditionStatus(obj, MachineConfigPoolConditionType.Degraded)}\n        </TableData>\n        <TableData className={tableColumnClasses[3]}>\n          <MachineConfigPoolUpdateStatus obj={obj} />\n        </TableData>\n        <TableData className={tableColumnClasses[4]}>\n          <ResourceKebab\n            actions={machineConfigPoolMenuActions}\n            kind={machineConfigPoolReference}\n            resource={obj}\n          />\n        </TableData>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <MachineConfigPoolsArePausedAlert machineConfigPools={props.data} />\n      <Table\n        {...props}\n        aria-label={t('public~MachineConfigPools')}\n        Header={MachineConfigPoolTableHeader}\n        Row={MachineConfigPoolTableRow}\n        virtualize\n      />\n    </>\n  );\n};\n\nexport const MachineConfigPoolPage: React.SFC<any> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineConfigPoolList}\n    kind={machineConfigPoolReference}\n    canCreate\n  />\n);\n\ntype MachineConfigPoolCountsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolDetailsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigListProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolCharacteristicsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolSummaryProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolUpdateStatusProps = {\n  obj: MachineConfigPoolKind;\n};\n"],"sourceRoot":""}